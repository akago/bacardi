1,29d0
< /*
<  * Copyright (c) 2014-2022, jcabi.com
<  * All rights reserved.
<  *
<  * Redistribution and use in source and binary forms, with or without
<  * modification, are permitted provided that the following conditions
<  * are met: 1) Redistributions of source code must retain the above
<  * copyright notice, this list of conditions and the following
<  * disclaimer. 2) Redistributions in binary form must reproduce the above
<  * copyright notice, this list of conditions and the following
<  * disclaimer in the documentation and/or other materials provided
<  * with the distribution. 3) Neither the name of the jcabi.com nor
<  * the names of its contributors may be used to endorse or promote
<  * products derived from this software without specific prior written
<  * permission.
<  *
<  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
<  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
<  * NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
<  * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
<  * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
<  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
<  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
<  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
<  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
<  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
<  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
<  * OF THE POSSIBILITY OF SUCH DAMAGE.
<  */
33,37d3
< import com.jcabi.aspects.Tv;
< import com.jcabi.log.Logger;
< import com.jcraft.jsch.JSch;
< import com.jcraft.jsch.JSchException;
< import com.jcraft.jsch.Session;
80,82c46
<  * @todo #30:30min Refactor this class into smaller ones to avoid null
<  *  checking of passphrase. There should probably be separate classes for
<  *  encrypted/unencrypted private key.
---
>  * @checkstyle ParameterNumberCheck (6 lines)
127c91
<         this(adr, Ssh.PORT, user, priv);
---
>         this(adr.getCanonicalHostName(), Ssh.PORT, user, priv);
233d196
<     @Override
235c198
<         attempts = Tv.SEVEN,
---
>         attempts = 7,
269,271c232,233
<                 "Opening SSH session to %s@%s:%s (%d bytes in RSA key)...",
<                 this.getLogin(), this.getAddr(), this.getPort(),
<                 file.length()
---
>                 "Opening SSH session to %s@%s:%s",
>                 this.getLogin(), this.getAddr(), this.getPort()
292c254
<         session.setTimeout((int) TimeUnit.MINUTES.toMillis(1L));
---
>         session.setTimeout((int) TimeUnit.SECONDS.toMillis(10L));
294c256
<         session.setServerAliveCountMax(Tv.MILLION);
---
>         session.setServerAliveCountMax(1000000);
