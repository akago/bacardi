33,34c33,37
< import org.cactoos.func.IoCheckedFunc;
< import org.cactoos.io.Directory;
---
> import org.cactoos.Func;
> import org.cactoos.Text;
> import org.cactoos.text.ConcatText;
> import org.cactoos.text.TextOf;
> import org.cactoos.text.UncheckedText;
37,41c40,41
< import org.cactoos.scalar.IoCheckedScalar;
< import org.cactoos.scalar.SolidScalar;
< import org.cactoos.text.FormattedText;
< import org.cactoos.text.JoinedText;
< import org.cactoos.text.UncheckedText;
---
> import org.cactoos.scalar.CheckedScalar;
> import org.cactoos.scalar.ScalarOf;
53c53
<     private final IoCheckedScalar<Path> path;
---
>     private final CheckedScalar<Path> path;
58c58
<     private final IoCheckedFunc<Path, Boolean> filter;
---
>     private final Func<Path, Boolean> filter;
98d97
<      * @param random Randomizer
99a99
>      * @param random Randomizer
103,107c103,104
<         this.path = new IoCheckedScalar<>(
<             new SolidScalar<>(pth)
<         );
<         this.filter = new IoCheckedFunc<Path, Boolean>(
<             (file) -> file.toFile().isFile()
---
>         this.path = new CheckedScalar<>(pth);
>         this.filter = (file) -> file.toFile().isFile()
110,111c107
<                 .matches(file)
<         );
---
>                 .matches(file);
119,122c115,118
<             new JoinedText(
<                 ".",
<                 Long.toHexString(this.random.nextLong()),
<                 this.ext
---
>             new ConcatText(
>                 new TextOf("."),
>                 new TextOf(Long.toHexString(this.random.nextLong())),
>                 new TextOf(this.ext)
128,131c124,128
<                     new FormattedText(
<                         "Wallet in path %s already exists",
<                         wpth.toUri().getPath()
<                     )
---
>                     new ConcatText(
>                         new TextOf("Wallet in path "),
>                         new TextOf(wpth.toUri().getPath()),
>                         new TextOf(" already exists")
>                     ).asString()
