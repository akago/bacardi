3,4d2
< import ch.qos.logback.classic.Level;
< import ch.qos.logback.classic.Logger;
33c31
< import java.time.Instant;
---
> import java.lang.reflect.Method;
82a81
>     
84a84
>     
111,113c111,124
<         Logger logger = (Logger) LoggerFactory.getLogger(EventMessageHandler.class);
<         logger.setLevel(Level.INFO);
<         logger.addAppender(mockLogAppender);
---
>         org.slf4j.Logger slf4jLogger = LoggerFactory.getLogger(EventMessageHandler.class);
>         try {
>             Class<?> logbackLoggerClass = Class.forName("ch.qos.logback.classic.Logger");
>             if (logbackLoggerClass.isInstance(slf4jLogger)) {
>                 Class<?> levelClass = Class.forName("ch.qos.logback.classic.Level");
>                 Object infoLevel = levelClass.getField("INFO").get(null);
>                 Method setLevelMethod = logbackLoggerClass.getMethod("setLevel", levelClass);
>                 setLevelMethod.invoke(slf4jLogger, infoLevel);
>                 Method addAppenderMethod = logbackLoggerClass.getMethod("addAppender", Appender.class);
>                 addAppenderMethod.invoke(slf4jLogger, mockLogAppender);
>             }
>         } catch (Exception e) {
>             // If the underlying logger does not support these operations, ignore.
>         }
