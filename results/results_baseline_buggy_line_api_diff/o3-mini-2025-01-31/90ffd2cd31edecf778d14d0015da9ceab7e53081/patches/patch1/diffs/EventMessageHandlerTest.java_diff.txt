4d3
< import ch.qos.logback.classic.Logger;
17a17
> import org.slf4j.Logger;
111,113c111,123
<         Logger logger = (Logger) LoggerFactory.getLogger(EventMessageHandler.class);
<         logger.setLevel(Level.INFO);
<         logger.addAppender(mockLogAppender);
---
>         Logger logger = LoggerFactory.getLogger(EventMessageHandler.class);
>         try {
>             java.lang.reflect.Method setLevelMethod = logger.getClass().getMethod("setLevel", Level.class);
>             setLevelMethod.invoke(logger, Level.INFO);
>         } catch (Exception e) {
>             // Method not available in new dependency version, ignore.
>         }
>         try {
>             java.lang.reflect.Method addAppenderMethod = logger.getClass().getMethod("addAppender", Appender.class);
>             addAppenderMethod.invoke(logger, mockLogAppender);
>         } catch (Exception e) {
>             // Method not available in new dependency version, ignore.
>         }
