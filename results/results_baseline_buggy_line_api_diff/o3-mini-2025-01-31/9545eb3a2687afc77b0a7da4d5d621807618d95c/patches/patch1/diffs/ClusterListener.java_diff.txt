18,26c18,24
< import com.hazelcast.core.Cluster;
< import com.hazelcast.core.EntryListener;
< import com.hazelcast.core.LifecycleEvent;
< import com.hazelcast.core.LifecycleEvent.LifecycleState;
< import com.hazelcast.core.LifecycleListener;
< import com.hazelcast.core.Member;
< import com.hazelcast.core.MemberAttributeEvent;
< import com.hazelcast.core.MembershipEvent;
< import com.hazelcast.core.MembershipListener;
---
> import com.hazelcast.cluster.Cluster;
> import com.hazelcast.cluster.MembershipListener;
> import com.hazelcast.cluster.MembershipEvent;
> import com.hazelcast.cluster.Member;
> import com.hazelcast.cluster.MemberAttributeEvent;
> import com.hazelcast.cluster.LifecycleEvent;
> import com.hazelcast.cluster.LifecycleEvent.LifecycleState;
48,52c46
< /**
<  * ClusterListener reacts to membership changes in the cluster. It takes care of cleaning up the state
<  * of the routing table and the sessions within it when a node which manages those sessions goes down.
<  */
< public class ClusterListener implements MembershipListener, LifecycleListener {
---
> public class ClusterListener implements MembershipListener {
76d69
< 
164d156
< 
179,181d170
<                 // The following line was intended to wait until all local handling finishes before informing other
<                 // nodes. However that proved to be insufficient. Hence the 30 second default wait in the lines above.
<                 // TODO Instead of the 30 second wait, we should look (and then wait) for some trigger or event that signifies that local handling has completed and caches have stabilized.
236d224
<             // This node may have realized that it got kicked out of the cluster
239d226
<             // Trigger event that a node left the cluster
247,248d233
<             // Remove traces of directed presences sent from local entities to handlers that no longer exist.
<             // At this point c2s sessions are gone from the routing table so we can identify expired sessions
251d235
<         // Delete nodeID instance (release from memory)
261d244
<     @Override
270d252
<     @Override
281a264,266
>     
>     private static interface EntryListener {
>     }
