11,17c11,12
< import com.pubnub.api.models.consumer.pubsub.PNMessageResult;
< import com.pubnub.api.models.consumer.pubsub.PNPresenceEventResult;
< import com.pubnub.api.models.consumer.pubsub.PNSignalResult;
< import com.pubnub.api.models.consumer.pubsub.message_actions.PNMessageActionResult;
< import com.pubnub.api.models.consumer.pubsub.objects.PNMembershipResult;
< import com.pubnub.api.models.consumer.pubsub.objects.PNSpaceResult;
< import com.pubnub.api.models.consumer.pubsub.objects.PNUserResult;
---
> import com.pubnub.api.models.consumer.pubsub.files.PNFileEventResult;
> import com.pubnub.api.models.consumer.objects_api.membership.PNMembershipResult;
40,41c35
<     PNConfiguration pnConfiguration = new PNConfiguration();
<     pnConfiguration.setSubscribeKey(publicKey);
---
>     PNConfiguration pnConfiguration = new PNConfiguration(publicKey);
52c46
<                 public void status(PubNub pubNub, PNStatus pnStatus) {
---
>                 public void status(PubNub pubnub, PNStatus pnStatus) {
54,57c48
<                   LOG.debug(
<                       "PubNub status: {} {}",
<                       pnStatusCategory.toString(),
<                       pnStatus.getStatusCode());
---
>                   LOG.debug("PubNub status: {} {}", pnStatusCategory.toString(), pnStatus.getStatusCode());
66,67c57,65
<                 public void message(PubNub pubNub, PNMessageResult pnMessageResult) {
<                   String channelName = pnMessageResult.getChannel();
---
>                 public void message(PubNub pubnub, Object messageEvent) {
>                   if (!(messageEvent instanceof Map)) {
>                     LOG.debug("Unexpected message event type: {}", messageEvent);
>                     return;
>                   }
>                   @SuppressWarnings("unchecked")
>                   Map<String, Object> msgMap = (Map<String, Object>) messageEvent;
>                   String channelName = String.valueOf(msgMap.get("channel"));
>                   LOG.debug("PubNub Message: {}", messageEvent.toString());
69d66
<                   LOG.debug("PubNub Message: {}", pnMessageResult.toString());
71d67
<                     JsonNode jsonMessage = null;
73,74c69,72
<                       jsonMessage = mapper.readTree(pnMessageResult.getMessage().toString());
<                     } catch (IOException ex) {
---
>                       Object msgContent = msgMap.get("message");
>                       JsonNode jsonMessage = mapper.valueToTree(msgContent);
>                       subscription.onNext(jsonMessage);
>                     } catch (Exception ex) {
77d74
<                     subscription.onNext(jsonMessage);
84,100c81,82
<                 public void presence(PubNub pubNub, PNPresenceEventResult pnPresenceEventResult) {
<                   LOG.debug("PubNub presence: {}", pnPresenceEventResult.toString());
<                 }
< 
<                 @Override
<                 public void signal(PubNub pubnub, PNSignalResult pnSignalResult) {
<                   LOG.debug("PubNub signal: {}", pnSignalResult.toString());
<                 }
< 
<                 @Override
<                 public void user(PubNub pubnub, PNUserResult pnUserResult) {
<                   LOG.debug("PubNub user: {}", pnUserResult.toString());
<                 }
< 
<                 @Override
<                 public void space(PubNub pubnub, PNSpaceResult pnSpaceResult) {
<                   LOG.debug("PubNub space: {}", pnSpaceResult.toString());
---
>                 public void file(PubNub pubnub, PNFileEventResult pnFileEventResult) {
>                   LOG.debug("PubNub file event: {}", pnFileEventResult.toString());
107,112d88
< 
<                 @Override
<                 public void messageAction(
<                     PubNub pubnub, PNMessageActionResult pnMessageActionResult) {
<                   LOG.debug("PubNub messageAction: {}", pnMessageActionResult.toString());
<                 }
