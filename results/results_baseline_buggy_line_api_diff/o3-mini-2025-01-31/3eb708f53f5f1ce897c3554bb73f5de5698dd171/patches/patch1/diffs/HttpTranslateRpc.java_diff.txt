1,16d0
< /*
<  * Copyright 2016 Google LLC
<  *
<  * Licensed under the Apache License, Version 2.0 (the "License");
<  * you may not use this file except in compliance with the License.
<  * You may obtain a copy of the License at
<  *
<  *       http://www.apache.org/licenses/LICENSE-2.0
<  *
<  * Unless required by applicable law or agreed to in writing, software
<  * distributed under the License is distributed on an "AS IS" BASIS,
<  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<  * See the License for the specific language governing permissions and
<  * limitations under the License.
<  */
< 
25,28d8
< import com.google.api.services.translate.Translate;
< import com.google.api.services.translate.model.DetectionsResourceItems;
< import com.google.api.services.translate.model.LanguagesResource;
< import com.google.api.services.translate.model.TranslationsResource;
32c12,20
< import com.google.common.base.Function;
---
> import com.google.api.services.translate.v3.Translate;
> import com.google.api.services.translate.v3.model.DetectLanguageRequest;
> import com.google.api.services.translate.v3.model.DetectLanguageResponse;
> import com.google.api.services.translate.v3.model.DetectedLanguage;
> import com.google.api.services.translate.v3.model.SupportedLanguages;
> import com.google.api.services.translate.v3.model.SupportedLanguages.Language;
> import com.google.api.services.translate.v3.model.TranslateTextRequest;
> import com.google.api.services.translate.v3.model.TranslateTextResponse;
> import com.google.api.services.translate.v3.model.Translation;
35a24
> import java.util.ArrayList;
41d29
<   private final TranslateOptions options;
42a31
>   private final TranslateOptions options;
61c50
<     GenericUrl genericUrl = new GenericUrl(translate.getBaseUrl() + "v2/" + path);
---
>     GenericUrl genericUrl = new GenericUrl(options.getHost() + "v3/" + path);
67a57,61
>   private String getParent() {
>     // Using a default parent. Adjust this if a valid project identifier is available.
>     return "projects/_/locations/global";
>   }
> 
71,73c65,88
<       List<List<DetectionsResourceItems>> detections =
<           translate.detections().list(texts).setKey(options.getApiKey()).execute().getDetections();
<       return detections != null ? detections : ImmutableList.<List<DetectionsResourceItems>>of();
---
>       List<List<DetectionsResourceItems>> allDetections = new ArrayList<>();
>       for (String text : texts) {
>         DetectLanguageRequest request = new DetectLanguageRequest();
>         request.setContent(text);
>         DetectLanguageResponse response =
>             translate
>                 .projects()
>                 .locations()
>                 .detectLanguage(getParent(), request)
>                 .setKey(options.getApiKey())
>                 .execute();
>         List<DetectedLanguage> detectedLanguages = response.getLanguages();
>         List<DetectionsResourceItems> detectionItems = new ArrayList<>();
>         if (detectedLanguages != null) {
>           for (DetectedLanguage dl : detectedLanguages) {
>             DetectionsResourceItems item = new DetectionsResourceItems();
>             item.setLanguage(dl.getLanguageCode());
>             item.setConfidence(dl.getConfidence());
>             detectionItems.add(item);
>           }
>         }
>         allDetections.add(detectionItems);
>       }
>       return allDetections;
82c97,99
<       List<LanguagesResource> languages =
---
>       String targetLanguage =
>           firstNonNull(Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage());
>       SupportedLanguages response =
84,85c101,103
<               .languages()
<               .list()
---
>               .projects()
>               .locations()
>               .getSupportedLanguages(getParent())
87,91c105,116
<               .setTarget(
<                   firstNonNull(
<                       Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage()))
<               .execute()
<               .getLanguages();
---
>               .setTargetLanguageCode(targetLanguage)
>               .execute();
>       List<Language> languagesList = response.getLanguages();
>       List<LanguagesResource> languages = new ArrayList<>();
>       if (languagesList != null) {
>         for (Language lang : languagesList) {
>           LanguagesResource lr = new LanguagesResource();
>           lr.setLanguage(lang.getLanguageCode());
>           lr.setDisplayName(lang.getDisplayName());
>           languages.add(lr);
>         }
>       }
104c129,143
<       List<TranslationsResource> translations =
---
>       TranslateTextRequest request = new TranslateTextRequest();
>       request.setContents(texts);
>       request.setTargetLanguageCode(targetLanguage);
>       if (sourceLanguage != null) {
>         request.setSourceLanguageCode(sourceLanguage);
>       }
>       String model = Option.MODEL.getString(optionMap);
>       if (model != null) {
>         request.setModel(model);
>       }
>       String format = Option.FORMAT.getString(optionMap);
>       if (format != null) {
>         request.setMimeType(format);
>       }
>       TranslateTextResponse response =
106,108c145,147
<               .translations()
<               .list(texts, targetLanguage)
<               .setSource(sourceLanguage)
---
>               .projects()
>               .locations()
>               .translateText(getParent(), request)
110,120c149,162
<               .setModel(Option.MODEL.getString(optionMap))
<               .setFormat(Option.FORMAT.getString(optionMap))
<               .execute()
<               .getTranslations();
<       return Lists.transform(
<           translations != null ? translations : ImmutableList.<TranslationsResource>of(),
<           new Function<TranslationsResource, TranslationsResource>() {
<             @Override
<             public TranslationsResource apply(TranslationsResource translationsResource) {
<               if (translationsResource.getDetectedSourceLanguage() == null) {
<                 translationsResource.setDetectedSourceLanguage(sourceLanguage);
---
>               .execute();
>       List<Translation> apiTranslations = response.getTranslations();
>       List<TranslationsResource> translations = new ArrayList<>();
>       if (apiTranslations != null) {
>         for (Translation t : apiTranslations) {
>           TranslationsResource tr = new TranslationsResource();
>           String detected = t.getDetectedLanguageCode();
>           if (detected == null) {
>             tr.setDetectedSourceLanguage(sourceLanguage);
>           } else {
>             tr.setDetectedSourceLanguage(detected);
>           }
>           tr.setTranslatedText(t.getTranslatedText());
>           translations.add(tr);
122d163
<               return translationsResource;
124c165
<           });
---
>       return translations;
128a170,232
> 
>   public static class DetectionsResourceItems {
>     private String language;
>     private Float confidence;
> 
>     public String getLanguage() {
>       return language;
>     }
> 
>     public void setLanguage(String language) {
>       this.language = language;
>     }
> 
>     public Float getConfidence() {
>       return confidence;
>     }
> 
>     public void setConfidence(Float confidence) {
>       this.confidence = confidence;
>     }
>   }
> 
>   public static class LanguagesResource {
>     private String language;
>     private String displayName;
> 
>     public String getLanguage() {
>       return language;
>     }
> 
>     public void setLanguage(String language) {
>       this.language = language;
>     }
> 
>     public String getDisplayName() {
>       return displayName;
>     }
> 
>     public void setDisplayName(String displayName) {
>       this.displayName = displayName;
>     }
>   }
> 
>   public static class TranslationsResource {
>     private String detectedSourceLanguage;
>     private String translatedText;
> 
>     public String getDetectedSourceLanguage() {
>       return detectedSourceLanguage;
>     }
> 
>     public void setDetectedSourceLanguage(String detectedSourceLanguage) {
>       this.detectedSourceLanguage = detectedSourceLanguage;
>     }
> 
>     public String getTranslatedText() {
>       return translatedText;
>     }
> 
>     public void setTranslatedText(String translatedText) {
>       this.translatedText = translatedText;
>     }
>   }
