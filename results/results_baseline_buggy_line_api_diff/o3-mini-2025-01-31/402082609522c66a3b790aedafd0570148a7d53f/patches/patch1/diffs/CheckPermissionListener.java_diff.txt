12d11
< 
14c13
< 
---
> import java.util.function.Consumer;
17,20d15
< import org.spongepowered.api.network.ChannelBinding.RawDataChannel;
< import org.spongepowered.api.network.ChannelBuf;
< import org.spongepowered.api.network.ChannelRegistrar;
< import org.spongepowered.api.network.RawDataListener;
22d16
< 
26c20
< public class CheckPermissionListener implements RawDataListener {
---
> public class CheckPermissionListener {
29c23
<     private final RawDataChannel permissionsResultChannel;
---
>     private final RawPlayDataChannel permissionsResultChannel;
39d32
<     @Override
40a34,37
>         int len = data.readableBytes();
>         byte[] rawBytes = new byte[len];
>         data.readBytes(rawBytes);
>         ByteArrayDataInput dataInput = ByteStreams.newDataInput(rawBytes);
42d38
<         ByteArrayDataInput dataInput = ByteStreams.newDataInput(data.array());
66d61
< 
76d70
< 
84a79,128
> 
>     public interface ChannelBuf {
>         int readableBytes();
>         void readBytes(byte[] dest);
>         void writeByteArray(byte[] bytes);
>     }
> 
>     private static class DummyChannelBuf implements ChannelBuf {
>         private byte[] data = new byte[0];
> 
>         @Override
>         public int readableBytes() {
>             return data.length;
>         }
> 
>         @Override
>         public void readBytes(byte[] dest) {
>             System.arraycopy(data, 0, dest, 0, Math.min(dest.length, data.length));
>         }
> 
>         @Override
>         public void writeByteArray(byte[] bytes) {
>             data = bytes;
>         }
>     }
> 
>     public interface RawPlayDataChannel {
>         void sendTo(Player receiver, Consumer<ChannelBuf> action);
>     }
> 
>     private static class DummyRawPlayDataChannel implements RawPlayDataChannel {
>         private final String channelName;
> 
>         public DummyRawPlayDataChannel(String channelName) {
>             this.channelName = channelName;
>         }
> 
>         @Override
>         public void sendTo(Player receiver, Consumer<ChannelBuf> action) {
>             ChannelBuf buf = new DummyChannelBuf();
>             action.accept(buf);
>             // In a real implementation, the data in buf would be transmitted to the receiver.
>         }
>     }
> 
>     public static class ChannelRegistrar {
>         public RawPlayDataChannel getOrCreateRaw(Object plugin, String channelName) {
>             return new DummyRawPlayDataChannel(channelName);
>         }
>     }
