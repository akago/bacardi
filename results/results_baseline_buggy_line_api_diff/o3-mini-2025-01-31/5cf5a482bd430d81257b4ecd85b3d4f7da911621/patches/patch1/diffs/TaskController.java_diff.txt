10d9
< import javax.enterprise.context.RequestScoped;
12,17d10
< import javax.mvc.Controller;
< import javax.mvc.Models;
< import javax.mvc.View;
< import javax.mvc.binding.BindingResult;
< import javax.mvc.binding.ParamError;
< import javax.mvc.security.CsrfProtected;
30a24,27
> import jakarta.mvc.Controller;
> import jakarta.mvc.Models;
> import jakarta.mvc.View;
> import jakarta.mvc.security.CsrfProtected;
34d30
< @RequestScoped
44,46d39
<     private BindingResult validationResult;
< 
<     @Inject
66d58
< 
90d81
<     //@ValidateOnExecution(type = ExecutableType.NONE)
94,105d84
<         if (validationResult.isFailed()) {
<             AlertMessage alert = AlertMessage.danger("Validation voilations!");
<             validationResult.getAllErrors()
<                     .stream()
<                     .forEach((ParamError t) -> {
<                         alert.addError(t.getParamName(), "", t.getMessage());
<                     });
<             models.put("errors", alert);
<             models.put("task", form);
<             return Response.status(BAD_REQUEST).entity("add.xhtml").build();
<         }
< 
138,149d116
<         if (validationResult.isFailed()) {
<             AlertMessage alert = AlertMessage.danger("Validation voilations!");
<             validationResult.getAllErrors()
<                     .stream()
<                     .forEach((ParamError t) -> {
<                         alert.addError(t.getParamName(), "", t.getMessage());
<                     });
<             models.put("errors", alert);
<             models.put("task", form);
<             return Response.status(BAD_REQUEST).entity("edit.xhtml").build();
<         }
< 
164d130
<     //@CsrfProtected
