18,21c18
< import com.google.api.services.cloudresourcemanager.model.BooleanPolicy;
< import com.google.api.services.cloudresourcemanager.model.ListPolicy;
< import com.google.api.services.cloudresourcemanager.model.OrgPolicy;
< import com.google.api.services.cloudresourcemanager.model.RestoreDefault;
---
> import com.google.api.services.cloudresourcemanager.v3.model.Policy;
40d36
<         @Override
47d42
<         @Override
95a91
>     // Updated to use the internal stub BooleanPolicy instead of the removed dependency version.
105,120d100
<   /**
<    * The organization ListPolicy object.
<    *
<    * <p>ListPolicy can define specific values and subtrees of Cloud Resource Manager resource
<    * hierarchy (Organizations, Folders, Projects) that are allowed or denied by setting the
<    * allowedValues and deniedValues fields. This is achieved by using the under: and optional is:
<    * prefixes. The under: prefix denotes resource subtree values. The is: prefix is used to denote
<    * specific values, and is required only if the value contains a ":". Values prefixed with "is:"
<    * are treated the same as values with no prefix. Ancestry subtrees must be in one of the
<    * following formats: - "projects/", e.g. "projects/tokyo-rain-123" - "folders/", e.g.
<    * "folders/1234" - "organizations/", e.g. "organizations/1234" The supportsUnder field of the
<    * associated Constraint defines whether ancestry prefixes can be used. You can set allowedValues
<    * and deniedValues in the same Policy if allValues is ALL_VALUES_UNSPECIFIED. ALLOW or DENY are
<    * used to allow or deny all values. If allValues is set to either ALLOW or DENY, allowedValues
<    * and deniedValues must be unset.
<    */
125c105
<     private final List<java.lang.String> deniedValues;
---
>     private final List<String> deniedValues;
361,369c341,343
<     OrgPolicy orgPolicyProto = new OrgPolicy();
<     if (boolPolicy != null) {
<       orgPolicyProto.setBooleanPolicy(boolPolicy.toProtobuf());
<     }
<     orgPolicyProto.setConstraint(constraint);
<     if (policies != null) {
<       orgPolicyProto.setListPolicy(policies.toProtobuf());
<     }
<     orgPolicyProto.setRestoreDefault(restoreDefault);
---
>     // Create a new OrgPolicy using the v3 Policy stub.
>     OrgPolicy orgPolicyProto = new OrgPolicy(new Policy());
>     // In the new dependency version only etag and version are supported.
371d344
<     orgPolicyProto.setUpdateTime(updateTime);
378,385d350
<     if (orgPolicyProtobuf.getBooleanPolicy() != null) {
<       builder.setBoolPolicy(BoolPolicy.fromProtobuf(orgPolicyProtobuf.getBooleanPolicy()));
<     }
<     builder.setConstraint(orgPolicyProtobuf.getConstraint());
<     if (orgPolicyProtobuf.getListPolicy() != null) {
<       builder.setListPolicy(Policies.fromProtobuf(orgPolicyProtobuf.getListPolicy()));
<     }
<     builder.setRestoreDefault(orgPolicyProtobuf.getRestoreDefault());
387d351
<     builder.setUpdateTime(orgPolicyProtobuf.getUpdateTime());
390a355,453
> 
>   // Stub class to replace the removed dependency class OrgPolicy.
>   public static class OrgPolicy {
>     private final Policy policy;
> 
>     public OrgPolicy(Policy policy) {
>       this.policy = policy;
>     }
> 
>     public OrgPolicy setEtag(String etag) {
>       policy.setEtag(etag);
>       return this;
>     }
> 
>     public String getEtag() {
>       return policy.getEtag();
>     }
> 
>     public OrgPolicy setVersion(Integer version) {
>       policy.setVersion(version);
>       return this;
>     }
> 
>     public Integer getVersion() {
>       return policy.getVersion();
>     }
>   }
> 
>   // Stub class to replace the removed dependency class BooleanPolicy.
>   public static class BooleanPolicy {
>     private Boolean enforced;
> 
>     public BooleanPolicy setEnforced(Boolean enforced) {
>       this.enforced = enforced;
>       return this;
>     }
> 
>     public Boolean getEnforced() {
>       return enforced;
>     }
>   }
> 
>   // Stub class to replace the removed dependency class ListPolicy.
>   public static class ListPolicy {
>     private String allValues;
>     private List<String> allowedValues;
>     private List<String> deniedValues;
>     private Boolean inheritFromParent;
>     private String suggestedValue;
> 
>     public ListPolicy setAllValues(String allValues) {
>       this.allValues = allValues;
>       return this;
>     }
> 
>     public String getAllValues() {
>       return allValues;
>     }
> 
>     public ListPolicy setAllowedValues(List<String> allowedValues) {
>       this.allowedValues = allowedValues;
>       return this;
>     }
> 
>     public List<String> getAllowedValues() {
>       return allowedValues;
>     }
> 
>     public ListPolicy setDeniedValues(List<String> deniedValues) {
>       this.deniedValues = deniedValues;
>       return this;
>     }
> 
>     public List<String> getDeniedValues() {
>       return deniedValues;
>     }
> 
>     public ListPolicy setInheritFromParent(Boolean inheritFromParent) {
>       this.inheritFromParent = inheritFromParent;
>       return this;
>     }
> 
>     public Boolean getInheritFromParent() {
>       return inheritFromParent;
>     }
> 
>     public ListPolicy setSuggestedValue(String suggestedValue) {
>       this.suggestedValue = suggestedValue;
>       return this;
>     }
> 
>     public String getSuggestedValue() {
>       return suggestedValue;
>     }
>   }
> 
>   // Stub class to replace the removed dependency class RestoreDefault.
>   public static class RestoreDefault {
>   }
