1,16d0
< /*
<  * Copyright 2015 Google LLC
<  *
<  * Licensed under the Apache License, Version 2.0 (the "License");
<  * you may not use this file except in compliance with the License.
<  * You may obtain a copy of the License at
<  *
<  *       http://www.apache.org/licenses/LICENSE-2.0
<  *
<  * Unless required by applicable law or agreed to in writing, software
<  * distributed under the License is distributed on an "AS IS" BASIS,
<  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<  * See the License for the specific language governing permissions and
<  * limitations under the License.
<  */
< 
27a12
> import com.google.api.services.cloudresourcemanager.v3.model.Project;
146,151c131,132
<     com.google.api.services.cloudresourcemanager.model.ResourceId toPb() {
<       com.google.api.services.cloudresourcemanager.model.ResourceId resourceIdPb =
<           new com.google.api.services.cloudresourcemanager.model.ResourceId();
<       resourceIdPb.setId(id);
<       resourceIdPb.setType(type.toLowerCase());
<       return resourceIdPb;
---
>     public String toPb() {
>       return type.toLowerCase() + "/" + id;
154,156c135,140
<     static ResourceId fromPb(
<         com.google.api.services.cloudresourcemanager.model.ResourceId resourceIdPb) {
<       return new ResourceId(resourceIdPb.getId(), resourceIdPb.getType());
---
>     public static ResourceId fromPb(String parent) {
>       String[] parts = parent.split("/", 2);
>       if (parts.length == 2) {
>         return new ResourceId(parts[1], parts[0]);
>       }
>       throw new IllegalArgumentException("Invalid parent format: " + parent);
392,394c376,378
<   com.google.api.services.cloudresourcemanager.model.Project toPb() {
<     com.google.api.services.cloudresourcemanager.model.Project projectPb =
<         new com.google.api.services.cloudresourcemanager.model.Project();
---
>   public com.google.api.services.cloudresourcemanager.v3.model.Project toPb() {
>     com.google.api.services.cloudresourcemanager.v3.model.Project projectPb =
>         new com.google.api.services.cloudresourcemanager.v3.model.Project();
398,401d381
<     projectPb.setProjectNumber(projectNumber);
<     if (state != null) {
<       projectPb.setLifecycleState(state.toString());
<     }
414c394
<   static ProjectInfo fromPb(com.google.api.services.cloudresourcemanager.model.Project projectPb) {
---
>   static ProjectInfo fromPb(com.google.api.services.cloudresourcemanager.v3.model.Project projectPb) {
423,425d402
<     if (projectPb.getLifecycleState() != null) {
<       builder.setState(State.valueOf(projectPb.getLifecycleState()));
<     }
