27c27,28
< import org.codehaus.plexus.util.xml.Xpp3Dom;
---
> import org.w3c.dom.Element;
> import org.w3c.dom.NodeList;
38a40,44
> import javax.xml.parsers.DocumentBuilder;
> import javax.xml.parsers.DocumentBuilderFactory;
> import java.io.ByteArrayInputStream;
> import java.nio.charset.StandardCharsets;
> 
162,165c168,190
<         .map(exec -> (Xpp3Dom) exec.getConfiguration())
<         .map(config -> config.getChild("processors"))
<         .map(Xpp3Dom::getChildren)
<         .map(arr -> Arrays.stream(arr).map(Xpp3Dom::getValue).collect(Collectors.toSet()))
---
>             .map(exec -> {
>               try {
>                 String configString = exec.getConfiguration().toString();
>                 DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
>                 DocumentBuilder builder = factory.newDocumentBuilder();
>                 org.w3c.dom.Document doc = builder.parse(new ByteArrayInputStream(configString.getBytes(StandardCharsets.UTF_8)));
>                 NodeList processorsNodes = doc.getElementsByTagName("processors");
>                 if (processorsNodes.getLength() > 0) {
>                   Element processorsElement = (Element) processorsNodes.item(0);
>                   NodeList processorNodes = processorsElement.getElementsByTagName("processor");
>                   Set<String> processors = new HashSet<>();
>                   for (int i = 0; i < processorNodes.getLength(); i++) {
>                     processors.add(processorNodes.item(i).getTextContent());
>                   }
>                   return processors;
>                 } else {
>                   return of();
>                 }
>               } catch (Exception e) {
>                 logger.error("Error parsing processors configuration", e);
>                 return of();
>               }
>             })
