7a8
> import org.spongepowered.api.command.Command;
9,12c10,11
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.command.args.CommandContext;
< import org.spongepowered.api.command.spec.CommandExecutor;
< import org.spongepowered.api.command.spec.CommandSpec;
---
> import org.spongepowered.api.command.parameter.CommandContext;
> import org.spongepowered.api.command.CommandExecutor;
14a14,17
> import org.spongepowered.api.command.parameter.Parameter;
> import java.util.List;
> import java.util.Arrays;
> import org.spongepowered.api.command.CommandCause;
26,28c29,32
<     public CommandResult execute(CommandSource src, CommandContext args) {
<         if (!(src instanceof Player)) {
<             plugin.sendMessage(src, "no-console");
---
>     public CommandResult execute(CommandContext context) {
>         CommandCause cause = context.getCause();
>         if (!(cause instanceof Player)) {
>             plugin.sendMessage(cause, "no-console");
32,33c36,37
<         Player receiver = (Player) src;
<         Task.builder().async().execute(new SkinInvalidator(plugin, receiver)).submit(plugin);
---
>         Player receiver = (Player) cause;
>         Task.builder().execute(new SkinInvalidator(plugin, receiver)).plugin(plugin).async().submit();
38,39c42,43
<     public CommandSpec buildSpec() {
<         return CommandSpec.builder()
---
>     public Command buildSpec() {
>        return Command.builder()
41c45
<                 .permission(PomData.ARTIFACT_ID + ".command.skinupdate.base")
---
>                 .addPermission(PomData.ARTIFACT_ID + ".command.skinupdate.base")
