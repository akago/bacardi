6a7
> import java.util.function.Consumer;
7a9
> import org.spongepowered.api.command.Command;
9,12c11,12
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.command.args.CommandContext;
< import org.spongepowered.api.command.spec.CommandExecutor;
< import org.spongepowered.api.command.spec.CommandSpec;
---
> import org.spongepowered.api.command.parameter.CommandContext;
> import org.spongepowered.api.command.CommandCause;
16c16
< public class InvalidateCommand implements CommandExecutor, ChangeSkinCommand {
---
> public class InvalidateCommand implements ChangeSkinCommand {
25,27c25,26
<     @Override
<     public CommandResult execute(CommandSource src, CommandContext args) {
<         if (!(src instanceof Player)) {
---
>     public CommandResult execute(CommandCause src, CommandContext args) {
>         if (!(src.getCause().root() instanceof Player)) {
32,33c31,32
<         Player receiver = (Player) src;
<         Task.builder().async().execute(new SkinInvalidator(plugin, receiver)).submit(plugin);
---
>         Player receiver = (Player) src.getCause().root();
>         Task.builder().plugin(plugin).async().execute(new SkinInvalidator(plugin, receiver)).submit(plugin);
38,42c37,40
<     public CommandSpec buildSpec() {
<         return CommandSpec.builder()
<                 .executor(this)
<                 .permission(PomData.ARTIFACT_ID + ".command.skinupdate.base")
<                 .build();
---
>     public Command.Builder buildSpec() {
>         return Command.builder()
>                 .executor(this::execute)
>                 .permission(PomData.ARTIFACT_ID + ".command.skinupdate.base");
