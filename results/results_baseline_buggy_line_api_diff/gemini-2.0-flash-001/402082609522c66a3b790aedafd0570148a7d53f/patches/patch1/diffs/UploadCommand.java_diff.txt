11a12
> import org.spongepowered.api.command.Command;
13,16c14,16
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.command.args.CommandContext;
< import org.spongepowered.api.command.spec.CommandExecutor;
< import org.spongepowered.api.command.spec.CommandSpec;
---
> import org.spongepowered.api.command.parameter.CommandContext;
> import org.spongepowered.api.command.CommandExecutor;
> import org.spongepowered.api.entity.living.player.Player;
19,20c19,20
< import static org.spongepowered.api.command.args.GenericArguments.string;
< import static org.spongepowered.api.text.Text.of;
---
> import net.kyori.adventure.text.TextComponent;
> import org.spongepowered.api.command.parameter.Parameter;
34,36c34,36
<     public CommandResult execute(CommandSource src, CommandContext args) {
<         String url = args.<String>getOne("url").get();
<         if (url.startsWith("http://") || url.startsWith("https://")) {
---
>     public CommandResult execute(CommandContext args) {
>         String url = args.<String>getOne(Parameter.string().key("url").build()).orElse(null);
>         if (url != null && (url.startsWith("http://") || url.startsWith("https://"))) {
39c39
<                 plugin.sendMessage(src, "no-accounts");
---
>                 plugin.sendMessage(args.getCause().get(Player.class).orElse(null), "no-accounts");
42,43c42,43
<                 Runnable skinUploader = new SkinUploader(plugin, src, uploadAccount, url);
<                 Task.builder().async().execute(skinUploader).submit(plugin);
---
>                 Runnable skinUploader = new SkinUploader(plugin, args.getCause().get(Player.class).orElse(null), uploadAccount, url);
>                 plugin.getServer().getScheduler().submit(Task.builder().plugin(plugin).execute(skinUploader).build());
46c46
<             plugin.sendMessage(src, "no-valid-url");
---
>             plugin.sendMessage(args.getCause().get(Player.class).orElse(null), "no-valid-url");
53,54c53,57
<     public CommandSpec buildSpec() {
<         return CommandSpec.builder()
---
>     public Command.Builder buildSpec() {
>         Parameter.Value<String> urlParameter = Parameter.string().key("url").build();
> 
>         return Command.builder()
>                 .addParameter(urlParameter)
56,58c59
<                 .arguments(string(of("url")))
<                 .permission(PomData.ARTIFACT_ID + ".command.skinupload.base")
<                 .build();
---
>                 .permission(PomData.ARTIFACT_ID + ".command.skinupload.base");
