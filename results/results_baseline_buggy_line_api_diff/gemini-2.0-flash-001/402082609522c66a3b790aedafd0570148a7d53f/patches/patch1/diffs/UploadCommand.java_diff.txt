10a11
> import java.util.Optional;
11a13
> import org.spongepowered.api.command.Command;
13,16c15,18
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.command.args.CommandContext;
< import org.spongepowered.api.command.spec.CommandExecutor;
< import org.spongepowered.api.command.spec.CommandSpec;
---
> import org.spongepowered.api.command.exception.CommandException;
> import org.spongepowered.api.command.parameter.CommandContext;
> import org.spongepowered.api.command.parameter.Parameter;
> import org.spongepowered.api.command.CommandCause;
19,20c21,22
< import static org.spongepowered.api.command.args.GenericArguments.string;
< import static org.spongepowered.api.text.Text.of;
---
> import net.kyori.adventure.text.TextComponent;
> import net.kyori.adventure.text.Component;
22c24,27
< public class UploadCommand implements CommandExecutor, ChangeSkinCommand {
---
> import org.spongepowered.api.scheduler.Scheduler;
> import org.spongepowered.api.scheduler.ScheduledTask;
> 
> public class UploadCommand implements org.spongepowered.api.command.CommandExecutor, ChangeSkinCommand {
34,35c39,46
<     public CommandResult execute(CommandSource src, CommandContext args) {
<         String url = args.<String>getOne("url").get();
---
>     public CommandResult execute(CommandCause cause, CommandContext args) throws CommandException {
>         Optional<String> urlOptional = args.one(Parameter.string().key("url").build());
>         if (!urlOptional.isPresent()) {
>             plugin.sendMessage(cause, "no-valid-url");
>             return CommandResult.empty();
>         }
> 
>         String url = urlOptional.get();
39c50
<                 plugin.sendMessage(src, "no-accounts");
---
>                 plugin.sendMessage(cause, "no-accounts");
42,43c53,56
<                 Runnable skinUploader = new SkinUploader(plugin, src, uploadAccount, url);
<                 Task.builder().async().execute(skinUploader).submit(plugin);
---
>                 Runnable skinUploader = new SkinUploader(plugin, cause, uploadAccount, url);
> 
>                 Scheduler scheduler = plugin.getServer().scheduler();
>                 Task.builder().plugin(plugin).execute(skinUploader).async().build(plugin).schedule();
46c59
<             plugin.sendMessage(src, "no-valid-url");
---
>             plugin.sendMessage(cause, "no-valid-url");
53,56c66,70
<     public CommandSpec buildSpec() {
<         return CommandSpec.builder()
<                 .executor(this)
<                 .arguments(string(of("url")))
---
>     public Command.Builder buildSpec() {
>         Parameter urlParameter = Parameter.string().key("url").build();
> 
>         return Command.builder()
>                 .addParameter(urlParameter)
58c72
<                 .build();
---
>                 .executor(this);
