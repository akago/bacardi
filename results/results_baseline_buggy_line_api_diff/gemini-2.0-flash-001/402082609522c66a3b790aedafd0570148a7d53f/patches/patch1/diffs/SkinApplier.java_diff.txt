3d2
< import com.flowpowered.math.vector.Vector3d;
12,13c11
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.data.key.Keys;
---
> import org.spongepowered.api.command.CommandCause;
17,18c15,17
< import org.spongepowered.api.world.Location;
< import org.spongepowered.api.world.World;
---
> import org.spongepowered.api.world.server.ServerLocation;
> import org.spongepowered.api.world.server.ServerWorld;
> import org.spongepowered.math.vector.Vector3d;
23c22
<     private final CommandSource invoker;
---
>     private final CommandCause invoker;
26c25
<     public SkinApplier(ChangeSkinSponge plugin, CommandSource invoker, Player receiver, SkinModel targetSkin
---
>     public SkinApplier(ChangeSkinSponge plugin, CommandCause invoker, Player receiver, SkinModel targetSkin
42,43c41,42
<         if (invoker instanceof Player) {
<             UUID uniqueId = ((Player) invoker).getUniqueId();
---
>         if (invoker.getCause().root() instanceof Player) {
>             UUID uniqueId = ((Player) invoker.getCause().root()).getUniqueId();
84,85c83,84
<         receiver.offer(Keys.VANISH, true);
<         receiver.offer(Keys.VANISH, false);
---
>         receiver.vanish().set(true);
>         receiver.vanish().set(false);
91,92c90,91
<                 .displayName(receiver.getDisplayNameData().displayName().get())
<                 .latency(receiver.getConnection().getLatency())
---
>                 .displayName(receiver.displayName().get())
>                 .latency(receiver.connection().latency())
94,95c93,94
<                 .gameMode(receiver.getGameModeData().type().get())
<                 .profile(receiver.getProfile())
---
>                 .gameMode(receiver.gameMode().get())
>                 .profile(receiver.profile())
98c97
<         Location<World> oldLocation = receiver.getLocation();
---
>         ServerLocation oldLocation = receiver.getLocation();
100c99
<         World receiverWorld = receiver.getWorld();
---
>         ServerWorld receiverWorld = receiver.getWorld();
