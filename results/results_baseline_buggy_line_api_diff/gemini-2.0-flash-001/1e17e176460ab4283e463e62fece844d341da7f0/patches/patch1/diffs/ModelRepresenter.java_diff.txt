15a16
> import org.yaml.snakeyaml.DumperOptions;
24a26,28
> import java.beans.Introspector;
> import java.beans.BeanInfo;
> import java.beans.PropertyDescriptor;
37a42
>     super(new DumperOptions());
218,219c223,224
<   protected Set<Property> getProperties(Class<? extends Object> type)
<           throws IntrospectionException {
---
>   protected Set<Property> getProperties(Class<? extends Object> type) {
>     try {
232a238,240
>     } catch (IntrospectionException e) {
>       throw new YAMLException(e);
>     }
237c245
<       Set<Property> standard = super.getProperties(type);
---
>       Set<Property> standard = getPropertySet(type);
242a251,260
>   private Set<Property> getPropertySet(Class<? extends Object> type) throws IntrospectionException {
>     Set<Property> propertySet = new HashSet<>();
>     BeanInfo beanInfo = Introspector.getBeanInfo(type);
>     PropertyDescriptor[] propertyDescriptors = beanInfo.getPropertyDescriptors();
>     for (PropertyDescriptor propertyDescriptor : propertyDescriptors) {
>       propertySet.add(new PropertyAdapter(propertyDescriptor));
>     }
>     return propertySet;
>   }
> 
270a289,311
> 
>   private static class PropertyAdapter extends Property {
>     private final PropertyDescriptor propertyDescriptor;
> 
>     public PropertyAdapter(PropertyDescriptor propertyDescriptor) {
>       super(propertyDescriptor.getName(), propertyDescriptor.getPropertyType());
>       this.propertyDescriptor = propertyDescriptor;
>     }
> 
>     @Override
>     public void set(Object object, Object value) throws Exception {
>       propertyDescriptor.getWriteMethod().invoke(object, value);
>     }
> 
>     @Override
>     public Object get(Object object) {
>       try {
>         return propertyDescriptor.getReadMethod().invoke(object);
>       } catch (Exception e) {
>         return null;
>       }
>     }
>   }
