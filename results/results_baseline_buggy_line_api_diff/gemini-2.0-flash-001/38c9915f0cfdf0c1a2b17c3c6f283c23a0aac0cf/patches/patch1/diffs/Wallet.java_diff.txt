30,31c30,36
< import org.cactoos.collection.Filtered;
< import org.cactoos.iterable.IterableOf;
---
> import java.util.Iterator;
> import java.util.stream.Collectors;
> import java.util.stream.StreamSupport;
> import org.cactoos.Func;
> import org.cactoos.Scalar;
> import org.cactoos.Text;
> import org.cactoos.collection.IterableOf;
36d40
< import org.cactoos.scalar.CheckedScalar;
38d41
< import org.cactoos.scalar.UncheckedScalar;
40d42
< import org.cactoos.text.SplitText;
201,202c203,204
<             return new CheckedScalar<>(
<                 () -> Long.parseUnsignedLong(
---
>             return new org.cactoos.scalar.Checked<>(
>                 (Scalar<Long>) () -> Long.parseUnsignedLong(
204c206
<                         new SplitText(
---
>                         new org.cactoos.text.Split(
206c208
<                             "\n"
---
>                             new TextOf("\n")
247,252c249,256
<             final Iterable<Transaction> candidates = new Filtered<>(
<                 incoming -> new Filtered<>(
<                     origin -> new UncheckedScalar<>(
<                         new Or(
<                             () -> incoming.equals(origin),
<                             () -> incoming.id() == origin.id()
---
>             final Iterable<Transaction> candidates = StreamSupport.stream(other.ledger().spliterator(), false)
>                 .filter(incoming -> StreamSupport.stream(ledger.spliterator(), false)
>                     .noneMatch(origin -> {
>                         try {
>                             return new org.cactoos.scalar.Unchecked<>(
>                                 (Scalar<Boolean>) () -> new Or(
>                                     (org.cactoos.Scalar<Boolean>) () -> incoming.equals(origin),
>                                     (org.cactoos.Scalar<Boolean>) () -> incoming.id() == origin.id()
254c258
<                             () -> incoming.id() == origin.id()
---
>                                     (org.cactoos.Scalar<Boolean>) () -> incoming.id() == origin.id()
256,262c260,267
<                             () -> incoming.prefix().equals(origin.prefix())
<                         )
<                     ).value(),
<                     ledger
<                 ).isEmpty(),
<                 other.ledger()
<             );
---
>                                     (org.cactoos.Scalar<Boolean>) () -> incoming.prefix().equals(origin.prefix())
>                                 ).value()
>                             ).value();
>                         } catch (final Exception ex) {
>                             throw new IllegalStateException(ex);
>                         }
>                     }))
>                 .collect(Collectors.toList());
265c270
<                 new Joined<Transaction>(ledger, candidates)
---
>                 new Joined<Transaction>(ledger, (Iterable<Transaction>) candidates)
275c280
<                         new SplitText(
---
>                         new org.cactoos.text.Split(
277c282
<                             "\\n"
---
>                             new TextOf("\\n")
