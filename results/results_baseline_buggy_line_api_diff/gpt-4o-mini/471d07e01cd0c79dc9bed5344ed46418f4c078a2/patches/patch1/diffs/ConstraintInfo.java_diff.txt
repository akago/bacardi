18,20c18,19
< import com.google.api.services.cloudresourcemanager.model.BooleanConstraint;
< import com.google.api.services.cloudresourcemanager.model.Constraint;
< import com.google.api.services.cloudresourcemanager.model.ListConstraint;
---
> import com.google.api.services.cloudresourcemanager.v3.model.Policy;
> import com.google.api.services.cloudresourcemanager.v3.model.ListPolicy;
35,38c34,36
<   static final Function<Constraint, ConstraintInfo> FROM_PROTOBUF_FUNCTION =
<       new Function<Constraint, ConstraintInfo>() {
<         @Override
<         public ConstraintInfo apply(Constraint protobuf) {
---
>   static final Function<Policy, ConstraintInfo> FROM_PROTOBUF_FUNCTION =
>       new Function<Policy, ConstraintInfo>() {
>         public ConstraintInfo apply(Policy protobuf) {
42,45c40,42
<   static final Function<ConstraintInfo, Constraint> TO_PROTOBUF_FUNCTION =
<       new Function<ConstraintInfo, Constraint>() {
<         @Override
<         public Constraint apply(ConstraintInfo constraintInfo) {
---
>   static final Function<ConstraintInfo, Policy> TO_PROTOBUF_FUNCTION =
>       new Function<ConstraintInfo, Policy>() {
>         public Policy apply(ConstraintInfo constraintInfo) {
50d46
<   private BooleanConstraint booleanConstraint;
72,75d67
<     /**
<      * The Google Cloud Console tries to default to a configuration that matches the value specified
<      * in this Constraint.
<      */
80,83d71
<     /**
<      * Indicates whether subtrees of Cloud Resource Manager resource hierarchy can be used in
<      * Policy.allowed_values and Policy.denied_values.
<      */
114,115c102,103
<     ListConstraint toProtobuf() {
<       return new ListConstraint().setSuggestedValue(suggestedValue).setSupportsUnder(supportsUnder);
---
>     ListPolicy toProtobuf() {
>       return new ListPolicy().setSuggestedValue(suggestedValue).setSupportsUnder(supportsUnder);
118,119c106,107
<     static Constraints fromProtobuf(ListConstraint listConstraint) {
<       return new Constraints(listConstraint.getSuggestedValue(), listConstraint.getSupportsUnder());
---
>     static Constraints fromProtobuf(ListPolicy listPolicy) {
>       return new Constraints(listPolicy.getSuggestedValue(), listPolicy.getSupportsUnder());
125d112
<     private BooleanConstraint booleanConstraint;
138d124
<       this.booleanConstraint = info.booleanConstraint;
147,151d132
<     Builder setBooleanConstraint(BooleanConstraint booleanConstraint) {
<       this.booleanConstraint = booleanConstraint;
<       return this;
<     }
< 
188d168
<     this.booleanConstraint = builder.booleanConstraint;
197,201d176
<   /** Returns the boolean constraint to check whether the constraint is enforced or not. */
<   public BooleanConstraint getBooleanConstraint() {
<     return booleanConstraint;
<   }
< 
241,242c216
<     return Objects.equals(booleanConstraint, that.booleanConstraint)
<         && Objects.equals(constraintDefault, that.constraintDefault)
---
>     return Objects.equals(constraintDefault, that.constraintDefault)
252,253c226
<     return Objects.hash(
<         booleanConstraint, constraintDefault, description, displayName, constraints, name, version);
---
>     return Objects.hash(constraintDefault, description, displayName, constraints, name, version);
266,271c239,243
<   Constraint toProtobuf() {
<     Constraint constraintProto = new Constraint();
<     constraintProto.setBooleanConstraint(booleanConstraint);
<     constraintProto.setConstraintDefault(constraintDefault);
<     constraintProto.setDescription(description);
<     constraintProto.setDisplayName(displayName);
---
>   Policy toProtobuf() {
>     Policy policyProto = new Policy();
>     policyProto.setConstraintDefault(constraintDefault);
>     policyProto.setDescription(description);
>     policyProto.setDisplayName(displayName);
273,287c245
<       constraintProto.setListConstraint(constraints.toProtobuf());
<     }
<     constraintProto.setName(name);
<     constraintProto.setVersion(version);
<     return constraintProto;
<   }
< 
<   static ConstraintInfo fromProtobuf(Constraint constraintProtobuf) {
<     Builder builder = newBuilder(constraintProtobuf.getName());
<     builder.setBooleanConstraint(constraintProtobuf.getBooleanConstraint());
<     builder.setConstraintDefault(constraintProtobuf.getConstraintDefault());
<     builder.setDescription(constraintProtobuf.getDescription());
<     builder.setDisplayName(constraintProtobuf.getDisplayName());
<     if (constraintProtobuf.getListConstraint() != null) {
<       builder.setConstraints(Constraints.fromProtobuf(constraintProtobuf.getListConstraint()));
---
>       policyProto.setListPolicy(constraints.toProtobuf());
289,290c247,258
<     if (constraintProtobuf.getName() != null && !constraintProtobuf.getName().equals("Unnamed")) {
<       builder.setName(constraintProtobuf.getName());
---
>     policyProto.setName(name);
>     policyProto.setVersion(version);
>     return policyProto;
>   }
> 
>   static ConstraintInfo fromProtobuf(Policy policyProtobuf) {
>     Builder builder = newBuilder(policyProtobuf.getName());
>     builder.setConstraintDefault(policyProtobuf.getConstraintDefault());
>     builder.setDescription(policyProtobuf.getDescription());
>     builder.setDisplayName(policyProtobuf.getDisplayName());
>     if (policyProtobuf.getListPolicy() != null) {
>       builder.setConstraints(Constraints.fromProtobuf(policyProtobuf.getListPolicy()));
292c260
<     builder.setVersion(constraintProtobuf.getVersion());
---
>     builder.setVersion(policyProtobuf.getVersion());
