1,8d0
< //
< // This file was generated by the Eclipse Implementation of JAXB, v2.3.6 
< // See https://eclipse-ee4j.github.io/jaxb-ri 
< // Any modifications to this file will be lost upon recompilation of the source schema. 
< // Generated on: 2023.08.18 at 08:13:47 AM GMT 
< //
< 
< 
18d9
< import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
20d10
< import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
23,59d12
< 
< /**
<  * <p>Java class for anonymous complex type.
<  * 
<  * <p>The following schema fragment specifies the expected content contained within this class.
<  * 
<  * <pre>
<  * &lt;complexType&gt;
<  *   &lt;complexContent&gt;
<  *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
<  *       &lt;sequence&gt;
<  *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Header"/&gt;
<  *         &lt;element name="MasterFiles"&gt;
<  *           &lt;complexType&gt;
<  *             &lt;complexContent&gt;
<  *               &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
<  *                 &lt;sequence&gt;
<  *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}GeneralLedger" maxOccurs="unbounded" minOccurs="0"/&gt;
<  *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Customer" maxOccurs="unbounded" minOccurs="0"/&gt;
<  *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Supplier" maxOccurs="unbounded" minOccurs="0"/&gt;
<  *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Product" maxOccurs="unbounded" minOccurs="0"/&gt;
<  *                   &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}TaxTable" minOccurs="0"/&gt;
<  *                 &lt;/sequence&gt;
<  *               &lt;/restriction&gt;
<  *             &lt;/complexContent&gt;
<  *           &lt;/complexType&gt;
<  *         &lt;/element&gt;
<  *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}GeneralLedgerEntries" minOccurs="0"/&gt;
<  *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}SourceDocuments" minOccurs="0"/&gt;
<  *       &lt;/sequence&gt;
<  *     &lt;/restriction&gt;
<  *   &lt;/complexContent&gt;
<  * &lt;/complexType&gt;
<  * </pre>
<  * 
<  * 
<  */
80,87d32
<     /**
<      * Gets the value of the header property.
<      * 
<      * @return
<      *     possible object is
<      *     {@link Header }
<      *     
<      */
92,99d36
<     /**
<      * Sets the value of the header property.
<      * 
<      * @param value
<      *     allowed object is
<      *     {@link Header }
<      *     
<      */
104,111d40
<     /**
<      * Gets the value of the masterFiles property.
<      * 
<      * @return
<      *     possible object is
<      *     {@link AuditFile.MasterFiles }
<      *     
<      */
116,123d44
<     /**
<      * Sets the value of the masterFiles property.
<      * 
<      * @param value
<      *     allowed object is
<      *     {@link AuditFile.MasterFiles }
<      *     
<      */
128,135d48
<     /**
<      * Gets the value of the generalLedgerEntries property.
<      * 
<      * @return
<      *     possible object is
<      *     {@link GeneralLedgerEntries }
<      *     
<      */
140,147d52
<     /**
<      * Sets the value of the generalLedgerEntries property.
<      * 
<      * @param value
<      *     allowed object is
<      *     {@link GeneralLedgerEntries }
<      *     
<      */
152,159d56
<     /**
<      * Gets the value of the sourceDocuments property.
<      * 
<      * @return
<      *     possible object is
<      *     {@link SourceDocuments }
<      *     
<      */
164,171d60
<     /**
<      * Sets the value of the sourceDocuments property.
<      * 
<      * @param value
<      *     allowed object is
<      *     {@link SourceDocuments }
<      *     
<      */
178d66
<         final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
180c68
<         append(null, buffer, strategy);
---
>         append(null, buffer);
184,188c72,75
<     @Override
<     public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
<         strategy.appendStart(locator, this, buffer);
<         appendFields(locator, buffer, strategy);
<         strategy.appendEnd(locator, this, buffer);
---
>     public StringBuilder append(ObjectLocator locator, StringBuilder buffer) {
>         buffer.append("AuditFile{");
>         appendFields(locator, buffer);
>         buffer.append("}");
192,213c79,83
<     @Override
<     public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
<         {
<             Header theHeader;
<             theHeader = this.getHeader();
<             strategy.appendField(locator, this, "header", buffer, theHeader, (this.header!= null));
<         }
<         {
<             AuditFile.MasterFiles theMasterFiles;
<             theMasterFiles = this.getMasterFiles();
<             strategy.appendField(locator, this, "masterFiles", buffer, theMasterFiles, (this.masterFiles!= null));
<         }
<         {
<             GeneralLedgerEntries theGeneralLedgerEntries;
<             theGeneralLedgerEntries = this.getGeneralLedgerEntries();
<             strategy.appendField(locator, this, "generalLedgerEntries", buffer, theGeneralLedgerEntries, (this.generalLedgerEntries!= null));
<         }
<         {
<             SourceDocuments theSourceDocuments;
<             theSourceDocuments = this.getSourceDocuments();
<             strategy.appendField(locator, this, "sourceDocuments", buffer, theSourceDocuments, (this.sourceDocuments!= null));
<         }
---
>     public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer) {
>         buffer.append("header=").append(header);
>         buffer.append(", masterFiles=").append(masterFiles);
>         buffer.append(", generalLedgerEntries=").append(generalLedgerEntries);
>         buffer.append(", sourceDocuments=").append(sourceDocuments);
217,240d86
< 
<     /**
<      * <p>Java class for anonymous complex type.
<      * 
<      * <p>The following schema fragment specifies the expected content contained within this class.
<      * 
<      * <pre>
<      * &lt;complexType&gt;
<      *   &lt;complexContent&gt;
<      *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType"&gt;
<      *       &lt;sequence&gt;
<      *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}GeneralLedger" maxOccurs="unbounded" minOccurs="0"/&gt;
<      *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Customer" maxOccurs="unbounded" minOccurs="0"/&gt;
<      *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Supplier" maxOccurs="unbounded" minOccurs="0"/&gt;
<      *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}Product" maxOccurs="unbounded" minOccurs="0"/&gt;
<      *         &lt;element ref="{urn:OECD:StandardAuditFile-Tax:PT_1.03_01}TaxTable" minOccurs="0"/&gt;
<      *       &lt;/sequence&gt;
<      *     &lt;/restriction&gt;
<      *   &lt;/complexContent&gt;
<      * &lt;/complexType&gt;
<      * </pre>
<      * 
<      * 
<      */
263,284d108
<         /**
<          * Gets the value of the generalLedger property.
<          * 
<          * <p>
<          * This accessor method returns a reference to the live list,
<          * not a snapshot. Therefore any modification you make to the
<          * returned list will be present inside the JAXB object.
<          * This is why there is not a <CODE>set</CODE> method for the generalLedger property.
<          * 
<          * <p>
<          * For example, to add a new item, do as follows:
<          * <pre>
<          *    getGeneralLedger().add(newItem);
<          * </pre>
<          * 
<          * 
<          * <p>
<          * Objects of the following type(s) are allowed in the list
<          * {@link GeneralLedger }
<          * 
<          * 
<          */
292,313d115
<         /**
<          * Gets the value of the customer property.
<          * 
<          * <p>
<          * This accessor method returns a reference to the live list,
<          * not a snapshot. Therefore any modification you make to the
<          * returned list will be present inside the JAXB object.
<          * This is why there is not a <CODE>set</CODE> method for the customer property.
<          * 
<          * <p>
<          * For example, to add a new item, do as follows:
<          * <pre>
<          *    getCustomer().add(newItem);
<          * </pre>
<          * 
<          * 
<          * <p>
<          * Objects of the following type(s) are allowed in the list
<          * {@link Customer }
<          * 
<          * 
<          */
321,342d122
<         /**
<          * Gets the value of the supplier property.
<          * 
<          * <p>
<          * This accessor method returns a reference to the live list,
<          * not a snapshot. Therefore any modification you make to the
<          * returned list will be present inside the JAXB object.
<          * This is why there is not a <CODE>set</CODE> method for the supplier property.
<          * 
<          * <p>
<          * For example, to add a new item, do as follows:
<          * <pre>
<          *    getSupplier().add(newItem);
<          * </pre>
<          * 
<          * 
<          * <p>
<          * Objects of the following type(s) are allowed in the list
<          * {@link Supplier }
<          * 
<          * 
<          */
350,371d129
<         /**
<          * Gets the value of the product property.
<          * 
<          * <p>
<          * This accessor method returns a reference to the live list,
<          * not a snapshot. Therefore any modification you make to the
<          * returned list will be present inside the JAXB object.
<          * This is why there is not a <CODE>set</CODE> method for the product property.
<          * 
<          * <p>
<          * For example, to add a new item, do as follows:
<          * <pre>
<          *    getProduct().add(newItem);
<          * </pre>
<          * 
<          * 
<          * <p>
<          * Objects of the following type(s) are allowed in the list
<          * {@link Product }
<          * 
<          * 
<          */
379,386d136
<         /**
<          * Gets the value of the taxTable property.
<          * 
<          * @return
<          *     possible object is
<          *     {@link TaxTable }
<          *     
<          */
391,398d140
<         /**
<          * Sets the value of the taxTable property.
<          * 
<          * @param value
<          *     allowed object is
<          *     {@link TaxTable }
<          *     
<          */
405d146
<             final ToStringStrategy2 strategy = JAXBToStringStrategy.getInstance();
407c148
<             append(null, buffer, strategy);
---
>             append(null, buffer);
411,415c152,155
<         @Override
<         public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
<             strategy.appendStart(locator, this, buffer);
<             appendFields(locator, buffer, strategy);
<             strategy.appendEnd(locator, this, buffer);
---
>         public StringBuilder append(ObjectLocator locator, StringBuilder buffer) {
>             buffer.append("MasterFiles{");
>             appendFields(locator, buffer);
>             buffer.append("}");
419,445c159,164
<         @Override
<         public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
<             {
<                 List<GeneralLedger> theGeneralLedger;
<                 theGeneralLedger = (((this.generalLedger!= null)&&(!this.generalLedger.isEmpty()))?this.getGeneralLedger():null);
<                 strategy.appendField(locator, this, "generalLedger", buffer, theGeneralLedger, ((this.generalLedger!= null)&&(!this.generalLedger.isEmpty())));
<             }
<             {
<                 List<Customer> theCustomer;
<                 theCustomer = (((this.customer!= null)&&(!this.customer.isEmpty()))?this.getCustomer():null);
<                 strategy.appendField(locator, this, "customer", buffer, theCustomer, ((this.customer!= null)&&(!this.customer.isEmpty())));
<             }
<             {
<                 List<Supplier> theSupplier;
<                 theSupplier = (((this.supplier!= null)&&(!this.supplier.isEmpty()))?this.getSupplier():null);
<                 strategy.appendField(locator, this, "supplier", buffer, theSupplier, ((this.supplier!= null)&&(!this.supplier.isEmpty())));
<             }
<             {
<                 List<Product> theProduct;
<                 theProduct = (((this.product!= null)&&(!this.product.isEmpty()))?this.getProduct():null);
<                 strategy.appendField(locator, this, "product", buffer, theProduct, ((this.product!= null)&&(!this.product.isEmpty())));
<             }
<             {
<                 TaxTable theTaxTable;
<                 theTaxTable = this.getTaxTable();
<                 strategy.appendField(locator, this, "taxTable", buffer, theTaxTable, (this.taxTable!= null));
<             }
---
>         public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer) {
>             buffer.append("generalLedger=").append(generalLedger);
>             buffer.append(", customer=").append(customer);
>             buffer.append(", supplier=").append(supplier);
>             buffer.append(", product=").append(product);
>             buffer.append(", taxTable=").append(taxTable);
