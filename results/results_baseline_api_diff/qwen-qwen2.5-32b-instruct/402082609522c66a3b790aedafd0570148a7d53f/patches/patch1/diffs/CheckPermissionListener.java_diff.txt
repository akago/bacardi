17,21c17,23
< import org.spongepowered.api.network.ChannelBinding.RawDataChannel;
< import org.spongepowered.api.network.ChannelBuf;
< import org.spongepowered.api.network.ChannelRegistrar;
< import org.spongepowered.api.network.RawDataListener;
< import org.spongepowered.api.network.RemoteConnection;
---
> import org.spongepowered.api.network.channel.packet.PacketDispatcher;
> import org.spongepowered.api.network.channel.packet.Packet;
> import org.spongepowered.api.network.channel.raw.play.RawPlayDataChannel;
> import org.spongepowered.api.network.EngineConnection;
> import org.spongepowered.api.network.channel.ChannelBuf;
> import org.spongepowered.api.network.channel.packet.RequestPacket;
> import org.spongepowered.api.network.channel.packet.TransactionalPacketDispatcher;
23,26c25
< import static com.github.games647.changeskin.core.message.PermResultMessage.PERMISSION_RESULT_CHANNEL;
< import static com.github.games647.changeskin.sponge.PomData.ARTIFACT_ID;
< 
< public class CheckPermissionListener implements RawDataListener {
---
> public class CheckPermissionListener {
29c28
<     private final RawDataChannel permissionsResultChannel;
---
>     private final RawPlayDataChannel permissionsResultChannel;
32c31
<     CheckPermissionListener(ChangeSkinSponge plugin, ChannelRegistrar channelRegistrar) {
---
>     CheckPermissionListener(ChangeSkinSponge plugin, RawPlayDataChannel channel) {
34,36c33
< 
<         String combinedName = new NamespaceKey(ARTIFACT_ID, PERMISSION_RESULT_CHANNEL).getCombinedName();
<         permissionsResultChannel = channelRegistrar.getOrCreateRaw(plugin, combinedName);
---
>         this.permissionsResultChannel = channel;
39,40c36
<     @Override
<     public void handlePayload(ChannelBuf data, RemoteConnection connection, Type side) {
---
>     public void handlePayload(ChannelBuf data, EngineConnection connection, Type side) {
83c79,81
<         permissionsResultChannel.sendTo(receiver, buf -> buf.writeByteArray(dataOutput.toByteArray()));
---
>         Packet packet = new Packet(dataOutput.toByteArray());
>         PacketDispatcher dispatcher = new PacketDispatcher();
>         dispatcher.sendTo(receiver, packet);
