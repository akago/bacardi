3,4d2
< import ch.qos.logback.classic.Level;
< import ch.qos.logback.classic.Logger;
32a31
> import java.lang.reflect.Method;
111,113c110,128
<         Logger logger = (Logger) LoggerFactory.getLogger(EventMessageHandler.class);
<         logger.setLevel(Level.INFO);
<         logger.addAppender(mockLogAppender);
---
>         org.slf4j.Logger logger = LoggerFactory.getLogger(EventMessageHandler.class);
>         try {
>             Class<?> levelClass = Class.forName("ch.qos.logback.classic.Level");
>             Object infoLevel = Enum.valueOf((Class<Enum>) levelClass, "INFO");
>             Method setLevelMethod = logger.getClass().getMethod("setLevel", levelClass);
>             setLevelMethod.invoke(logger, infoLevel);
>         } catch (ClassNotFoundException | NoSuchMethodException e) {
>             // Logging level configuration not supported, ignore.
>         } catch (Exception e) {
>             throw new RuntimeException(e);
>         }
>         try {
>             Method addAppenderMethod = logger.getClass().getMethod("addAppender", Appender.class);
>             addAppenderMethod.invoke(logger, mockLogAppender);
>         } catch (NoSuchMethodException e) {
>             // Adding appender is not supported by this logger implementation, ignore.
>         } catch (Exception e) {
>             throw new RuntimeException(e);
>         }
