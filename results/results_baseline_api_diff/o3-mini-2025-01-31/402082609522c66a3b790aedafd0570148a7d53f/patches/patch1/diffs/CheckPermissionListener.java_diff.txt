12c12,13
< 
---
> import static com.github.games647.changeskin.core.message.PermResultMessage.PERMISSION_RESULT_CHANNEL;
> import static com.github.games647.changeskin.sponge.PomData.ARTIFACT_ID;
14c15
< 
---
> import java.util.function.Consumer;
17,20d17
< import org.spongepowered.api.network.ChannelBinding.RawDataChannel;
< import org.spongepowered.api.network.ChannelBuf;
< import org.spongepowered.api.network.ChannelRegistrar;
< import org.spongepowered.api.network.RawDataListener;
23,26c20
< import static com.github.games647.changeskin.core.message.PermResultMessage.PERMISSION_RESULT_CHANNEL;
< import static com.github.games647.changeskin.sponge.PomData.ARTIFACT_ID;
< 
< public class CheckPermissionListener implements RawDataListener {
---
> public class CheckPermissionListener {
36c30
<         permissionsResultChannel = channelRegistrar.getOrCreateRaw(plugin, combinedName);
---
>         permissionsResultChannel = new RawDataChannelImpl();
39d32
<     @Override
41d33
< 
66d57
< 
76d66
< 
84a75,112
> 
>     // Dummy replacement for the removed ChannelRegistrar class.
>     public static interface ChannelRegistrar {
>     }
> 
>     // New internal interface to represent ChannelBuf in the updated API.
>     public static interface ChannelBuf {
>         byte[] array();
>         void writeByteArray(byte[] bytes);
>     }
> 
>     // New internal interface to replace the removed RawDataChannel.
>     public static interface RawDataChannel {
>         void sendTo(Player receiver, Consumer<ChannelBuf> consumer);
>     }
> 
>     // A simple implementation of the new RawDataChannel interface.
>     private static class RawDataChannelImpl implements RawDataChannel {
>         @Override
>         public void sendTo(Player receiver, Consumer<ChannelBuf> consumer) {
>             consumer.accept(new DummyChannelBuf());
>         }
>     }
> 
>     // A dummy implementation of ChannelBuf.
>     private static class DummyChannelBuf implements ChannelBuf {
>         private byte[] data = new byte[0];
> 
>         @Override
>         public byte[] array() {
>             return data;
>         }
> 
>         @Override
>         public void writeByteArray(byte[] bytes) {
>             data = bytes;
>         }
>     }
