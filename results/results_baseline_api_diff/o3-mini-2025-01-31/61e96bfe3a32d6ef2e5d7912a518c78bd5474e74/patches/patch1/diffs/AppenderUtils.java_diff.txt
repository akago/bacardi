22c22
< import ch.qos.logback.core.encoder.EncoderBase;
---
> import ch.qos.logback.core.encoder.Encoder;
33a34
> import java.io.ByteArrayOutputStream;
51c52
<   public static class LogMessageEncoder extends EncoderBase<LogMessage> {
---
>   public static class LogMessageEncoder implements Encoder<LogMessage> {
57d57
<     @Override
60c60
<       // Use the TFlushingFastFramedTransport to be compatible with singer_thrift
---
>       // Use the TFastFramedTransport to be compatible with singer_thrift
63,64c63
<       framedTransport = new TFastFramedTransport(new TIOStreamTransport(os),
<           bufferCapacity);
---
>       framedTransport = new TFastFramedTransport(new TIOStreamTransport(os), bufferCapacity);
68d66
<     @Override
78d75
<     @Override
81a79,99
> 
>     public byte[] headerBytes() {
>       return new byte[0];
>     }
> 
>     public byte[] encode(LogMessage logMessage) throws IOException {
>       ByteArrayOutputStream baos = new ByteArrayOutputStream();
>       TTransport transport = new TFastFramedTransport(new TIOStreamTransport(baos), 10);
>       TProtocol protocol = new TBinaryProtocol(transport);
>       try {
>         logMessage.write(protocol);
>         transport.flush();
>       } catch (TException e) {
>         throw new IOException(e);
>       }
>       return baos.toByteArray();
>     }
> 
>     public byte[] footerBytes() {
>       return new byte[0];
>     }
