26c26,27
< import org.tinspin.index.kdtree.KDTree;
---
> // Removed import for KDTree as it is no longer available in the dependency
> // import org.tinspin.index.kdtree.KDTree;
66d66
<                 final KDTree<PVector> tree = KDTree.create(2);
69,71c69
<                         final double[] coords = new double[] { p.x, p.y };
<                         if (tree.size() == 0 || tree.query1NN(coords).dist() > distanceTolerance) {
<                                 tree.insert(coords, p);
---
>                         if (newPoints.isEmpty()) {
72a71,83
>                         } else {
>                                 double minDist = Double.MAX_VALUE;
>                                 for (PVector np : newPoints) {
>                                         double dx = np.x - p.x;
>                                         double dy = np.y - p.y;
>                                         double dist = Math.sqrt(dx * dx + dy * dy);
>                                         if (dist < minDist) {
>                                                 minDist = dist;
>                                         }
>                                 }
>                                 if (minDist > distanceTolerance) {
>                                         newPoints.add(p);
>                                 }
