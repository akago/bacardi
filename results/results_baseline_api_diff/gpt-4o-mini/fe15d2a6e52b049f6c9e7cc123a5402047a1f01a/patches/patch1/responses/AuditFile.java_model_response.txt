```java
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "header",
    "masterFiles",
    "generalLedgerEntries",
    "sourceDocuments"
})
@XmlRootElement(name = "AuditFile")
public class AuditFile implements ToString2
{

    @XmlElement(name = "Header", required = true)
    protected Header header;
    @XmlElement(name = "MasterFiles", required = true)
    protected AuditFile.MasterFiles masterFiles;
    @XmlElement(name = "GeneralLedgerEntries")
    protected GeneralLedgerEntries generalLedgerEntries;
    @XmlElement(name = "SourceDocuments")
    protected SourceDocuments sourceDocuments;

    /**
     * Gets the value of the header property.
     * 
     * @return
     *     possible object is
     *     {@link Header }
     *     
     */
    public Header getHeader() {
        return header;
    }

    /**
     * Sets the value of the header property.
     * 
     * @param value
     *     allowed object is
     *     {@link Header }
     *     
     */
    public void setHeader(Header value) {
        this.header = value;
    }

    /**
     * Gets the value of the masterFiles property.
     * 
     * @return
     *     possible object is
     *     {@link AuditFile.MasterFiles }
     *     
     */
    public AuditFile.MasterFiles getMasterFiles() {
        return masterFiles;
    }

    /**
     * Sets the value of the masterFiles property.
     * 
     * @param value
     *     allowed object is
     *     {@link AuditFile.MasterFiles }
     *     
     */
    public void setMasterFiles(AuditFile.MasterFiles value) {
        this.masterFiles = value;
    }

    /**
     * Gets the value of the generalLedgerEntries property.
     * 
     * @return
     *     possible object is
     *     {@link GeneralLedgerEntries }
     *     
     */
    public GeneralLedgerEntries getGeneralLedgerEntries() {
        return generalLedgerEntries;
    }

    /**
     * Sets the value of the generalLedgerEntries property.
     * 
     * @param value
     *     allowed object is
     *     {@link GeneralLedgerEntries }
     *     
     */
    public void setGeneralLedgerEntries(GeneralLedgerEntries value) {
        this.generalLedgerEntries = value;
    }

    /**
     * Gets the value of the sourceDocuments property.
     * 
     * @return
     *     possible object is
     *     {@link SourceDocuments }
     *     
     */
    public SourceDocuments getSourceDocuments() {
        return sourceDocuments;
    }

    /**
     * Sets the value of the sourceDocuments property.
     * 
     * @param value
     *     allowed object is
     *     {@link SourceDocuments }
     *     
     */
    public void setSourceDocuments(SourceDocuments value) {
        this.sourceDocuments = value;
    }

    @Override
    public String toString() {
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, null);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            Header theHeader;
            theHeader = this.getHeader();
            strategy.appendField(locator, this, "header", buffer, theHeader, (this.header!= null));
        }
        {
            AuditFile.MasterFiles theMasterFiles;
            theMasterFiles = this.getMasterFiles();
            strategy.appendField(locator, this, "masterFiles", buffer, theMasterFiles, (this.masterFiles!= null));
        }
        {
            GeneralLedgerEntries theGeneralLedgerEntries;
            theGeneralLedgerEntries = this.getGeneralLedgerEntries();
            strategy.appendField(locator, this, "generalLedgerEntries", buffer, theGeneralLedgerEntries, (this.generalLedgerEntries!= null));
        }
        {
            SourceDocuments theSourceDocuments;
            theSourceDocuments = this.getSourceDocuments();
            strategy.appendField(locator, this, "sourceDocuments", buffer, theSourceDocuments, (this.sourceDocuments!= null));
        }
        return buffer;
    }
```
