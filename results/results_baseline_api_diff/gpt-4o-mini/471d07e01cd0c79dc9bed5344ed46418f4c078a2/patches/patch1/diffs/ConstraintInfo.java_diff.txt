18,22c18,20
< import com.google.api.services.cloudresourcemanager.model.BooleanConstraint;
< import com.google.api.services.cloudresourcemanager.model.Constraint;
< import com.google.api.services.cloudresourcemanager.model.ListConstraint;
< import com.google.common.base.Function;
< import com.google.common.base.MoreObjects;
---
> import com.google.api.services.cloudresourcemanager.v3.model.Policy;
> import com.google.api.services.cloudresourcemanager.v3.model.Constraint;
> import com.google.api.services.cloudresourcemanager.v3.model.ListPolicy;
50c48
<   private BooleanConstraint booleanConstraint;
---
>   private ListPolicy listPolicy;
54d51
<   private Constraints constraints;
58,122d54
<   /**
<    * A Constraint that allows or disallows a list of string values, which are configured by an
<    * Organization's policy administrator with a Policy.
<    */
<   static class Constraints {
< 
<     private final String suggestedValue;
<     private final Boolean supportsUnder;
< 
<     Constraints(String suggestedValue, Boolean supportsUnder) {
<       this.suggestedValue = suggestedValue;
<       this.supportsUnder = supportsUnder;
<     }
< 
<     /**
<      * The Google Cloud Console tries to default to a configuration that matches the value specified
<      * in this Constraint.
<      */
<     String getSuggestedValue() {
<       return suggestedValue;
<     }
< 
<     /**
<      * Indicates whether subtrees of Cloud Resource Manager resource hierarchy can be used in
<      * Policy.allowed_values and Policy.denied_values.
<      */
<     Boolean getSupportsUnder() {
<       return supportsUnder;
<     }
< 
<     @Override
<     public String toString() {
<       return MoreObjects.toStringHelper(this)
<           .add("suggestedValue", getSuggestedValue())
<           .add("supportsUnder", getSupportsUnder())
<           .toString();
<     }
< 
<     @Override
<     public int hashCode() {
<       return Objects.hash(suggestedValue, supportsUnder);
<     }
< 
<     @Override
<     public boolean equals(Object o) {
<       if (this == o) {
<         return true;
<       }
<       if (o == null || getClass() != o.getClass()) {
<         return false;
<       }
<       Constraints that = (Constraints) o;
<       return Objects.equals(suggestedValue, that.suggestedValue)
<           && Objects.equals(supportsUnder, that.supportsUnder);
<     }
< 
<     ListConstraint toProtobuf() {
<       return new ListConstraint().setSuggestedValue(suggestedValue).setSupportsUnder(supportsUnder);
<     }
< 
<     static Constraints fromProtobuf(ListConstraint listConstraint) {
<       return new Constraints(listConstraint.getSuggestedValue(), listConstraint.getSupportsUnder());
<     }
<   }
< 
125c57
<     private BooleanConstraint booleanConstraint;
---
>     private ListPolicy listPolicy;
129d60
<     private Constraints constraints;
138c69
<       this.booleanConstraint = info.booleanConstraint;
---
>       this.listPolicy = info.listPolicy;
142d72
<       this.constraints = info.constraints;
147,148c77,78
<     Builder setBooleanConstraint(BooleanConstraint booleanConstraint) {
<       this.booleanConstraint = booleanConstraint;
---
>     Builder setListPolicy(ListPolicy listPolicy) {
>       this.listPolicy = listPolicy;
167,171d96
<     Builder setConstraints(Constraints constraints) {
<       this.constraints = constraints;
<       return this;
<     }
< 
188c113
<     this.booleanConstraint = builder.booleanConstraint;
---
>     this.listPolicy = builder.listPolicy;
192d116
<     this.constraints = builder.constraints;
197,201d120
<   /** Returns the boolean constraint to check whether the constraint is enforced or not. */
<   public BooleanConstraint getBooleanConstraint() {
<     return booleanConstraint;
<   }
< 
217,221d135
<   /** Returns the listConstraintInfo. */
<   public Constraints getConstraints() {
<     return constraints;
<   }
< 
241c155
<     return Objects.equals(booleanConstraint, that.booleanConstraint)
---
>     return Objects.equals(listPolicy, that.listPolicy)
245d158
<         && Objects.equals(constraints, that.constraints)
252,253c165
<     return Objects.hash(
<         booleanConstraint, constraintDefault, description, displayName, constraints, name, version);
---
>     return Objects.hash(listPolicy, constraintDefault, description, displayName, name, version);
268d179
<     constraintProto.setBooleanConstraint(booleanConstraint);
272,273c183,184
<     if (constraints != null) {
<       constraintProto.setListConstraint(constraints.toProtobuf());
---
>     if (listPolicy != null) {
>       constraintProto.setListPolicy(listPolicy);
276d186
<     constraintProto.setVersion(version);
282d191
<     builder.setBooleanConstraint(constraintProtobuf.getBooleanConstraint());
286,290c195,196
<     if (constraintProtobuf.getListConstraint() != null) {
<       builder.setConstraints(Constraints.fromProtobuf(constraintProtobuf.getListConstraint()));
<     }
<     if (constraintProtobuf.getName() != null && !constraintProtobuf.getName().equals("Unnamed")) {
<       builder.setName(constraintProtobuf.getName());
---
>     if (constraintProtobuf.getListPolicy() != null) {
>       builder.setListPolicy(constraintProtobuf.getListPolicy());
