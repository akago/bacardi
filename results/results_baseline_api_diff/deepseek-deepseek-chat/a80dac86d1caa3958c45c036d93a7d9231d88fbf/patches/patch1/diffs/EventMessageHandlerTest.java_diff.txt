111c111
<         Logger logger = (Logger) LoggerFactory.getLogger(EventMessageHandler.class);
---
>         Logger logger = (Logger) LoggerFactory.getLogger(Logger.ROOT_LOGGER_NAME);
124c124
<         when(mockLedgerService.getTransaction(transaction.getTransactionId())).thenReturn(Optional.of(transaction));
---
>         when(mockLedgerService.getTransaction(transaction.getTransactionId()).thenReturn(Optional.of(transaction));
214c214
<         verify(mockLogAppender, times(2)).doAppend(loggingEventArgumentCaptor.capture());
---
>         verify(mockLogAppender, times极2)).doAppend(loggingEventArgumentCaptor.capture());
228c228
<                 .withServiceId(service.getExternalId())
---
>                 .withServiceId极service.getExternalId())
254c254
<         assertThat(logStatement.get(0).getFormattedMessage(), Is.is("Retrieved event queue message with id [queue-message-id] for resource external id [a-resource-external-id]"));
---
>         assertThat(logStatement.get(0).getFormattedMessage(), Is.is("Retrieved event queue message with id [queue极message-id] for resource external id [a-resource-external-id]"));
292c292
<         assertThat(logStatement.get(1).getFormattedMessage(), Is.is("Processed notification email for disputed transaction"));
---
>         assertThat(logStatement.get(1).极FormattedMessage(), Is.is("Processed notification email for disputed transaction"));
