7a8
> import org.spongepowered.api.command.Command;
9,12c10,11
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.command.args.CommandContext;
< import org.spongepowered.api.command.spec.CommandExecutor;
< import org.spongepowered.api.command.spec.CommandSpec;
---
> import org.spongepowered.api.command.parameter.CommandContext;
> import org.spongepowered.api.command.parameter.Parameter;
15,17c14,17
< 
< import static org.spongepowered.api.command.args.GenericArguments.string;
< import static org.spongepowered.api.text.Text.of;
---
> import org.spongepowered.api.command.CommandExecutor;
> import org.spongepowered.api.command.parameter.CommandParameter;
> import org.spongepowered.api.command.parameter.managed.Flag;
> import org.spongepowered.api.text.Text;
29,31c29,31
<     public CommandResult execute(CommandSource src, CommandContext args) {
<         if (!(src instanceof Player)) {
<             plugin.sendMessage(src, "no-console");
---
>     public CommandResult execute(CommandContext args) {
>         if (!(args.cause().root() instanceof Player)) {
>             plugin.sendMessage(args.cause().root(), "no-console");
35c35
<         String skinName = args.<String>getOne("skinName").get().toLowerCase().replace("skin-", "");
---
>         String skinName = args.one(Parameter.string().key("skinName").get()).get().toLowerCase().replace("skin-", "");
39c39
<             Player receiver = (Player) src;
---
>             Player receiver = (Player) args.cause().root();
42c42
<             plugin.sendMessage(src, "invalid-skin-name");
---
>             plugin.sendMessage(args.cause().root(), "invalid-skin-name");
49,50c49,50
<     public CommandSpec buildSpec() {
<         return CommandSpec.builder()
---
>     public Command buildSpec() {
>         return Command.builder()
52c52
<                 .arguments(string(of("skinName")))
---
>                 .addParameter(Parameter.string().key("skinName").build())
