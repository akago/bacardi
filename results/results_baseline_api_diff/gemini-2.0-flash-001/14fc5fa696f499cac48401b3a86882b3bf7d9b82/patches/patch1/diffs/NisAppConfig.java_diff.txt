3a4
> import org.flywaydb.core.api.configuration.ClassicConfiguration;
41a43,44
> import java.util.stream.Collectors;
> import java.util.stream.Stream;
108,112c111,118
<                 final org.flywaydb.core.Flyway flyway = new Flyway();
<                 flyway.setDataSource(this.dataSource());
<                 flyway.setClassLoader(NisAppConfig.class.getClassLoader());
<                 flyway.setLocations(prop.getProperty("flyway.locations"));
<                 flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
---
>                 ClassicConfiguration configuration = new ClassicConfiguration();
>                 configuration.setDataSource(this.dataSource());
>                 configuration.setClassLoader(NisAppConfig.class.getClassLoader());
>                 String locations = prop.getProperty("flyway.locations");
>                 configuration.setLocations(Stream.of(locations.split(",")).map(org.flywaydb.core.api.Location::new).collect(Collectors.toList()).toArray(new org.flywaydb.core.api.Location[0]));
>                 configuration.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
> 
>                 final Flyway flyway = new Flyway(configuration);
