25,28c25,33
< import com.google.api.services.translate.Translate;
< import com.google.api.services.translate.model.DetectionsResourceItems;
< import com.google.api.services.translate.model.LanguagesResource;
< import com.google.api.services.translate.model.TranslationsResource;
---
> import com.google.api.services.translate.v3.Translate;
> import com.google.api.services.translate.v3.Translate.Projects.Locations.TranslateText;
> import com.google.api.services.translate.v3.model.DetectLanguageRequest;
> import com.google.api.services.translate.v3.model.DetectLanguageResponse;
> import com.google.api.services.translate.v3.model.Language;
> import com.google.api.services.translate.v3.model.Location;
> import com.google.api.services.translate.v3.model.TranslateTextRequest;
> import com.google.api.services.translate.v3.model.TranslateTextResponse;
> import com.google.api.services.translate.v3.model.Translation;
35a41
> import java.util.ArrayList;
69c75
<   public List<List<DetectionsResourceItems>> detect(List<String> texts) {
---
>   public List<List<com.google.api.services.translate.v3.model.DetectedLanguage>> detect(List<String> texts) {
71,73c77,84
<       List<List<DetectionsResourceItems>> detections =
<           translate.detections().list(texts).setKey(options.getApiKey()).execute().getDetections();
<       return detections != null ? detections : ImmutableList.<List<DetectionsResourceItems>>of();
---
>       List<List<com.google.api.services.translate.v3.model.DetectedLanguage>> detections = new ArrayList<>();
>       for (String text : texts) {
>         Translate.Projects.Locations.DetectLanguage detectLanguage = translate.projects().locations().detectLanguage("projects/" + options.getProjectId() + "/locations/global", new DetectLanguageRequest().setContent(text));
>         detectLanguage.setKey(options.getApiKey());
>         DetectLanguageResponse response = detectLanguage.execute();
>         detections.add(response.getLanguages());
>       }
>       return detections;
80c91
<   public List<LanguagesResource> listSupportedLanguages(Map<Option, ?> optionMap) {
---
>   public List<Language> listSupportedLanguages(Map<Option, ?> optionMap) {
82,87c93
<       List<LanguagesResource> languages =
<           translate
<               .languages()
<               .list()
<               .setKey(options.getApiKey())
<               .setTarget(
---
>       String targetLanguage =
89,92c95,100
<                       Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage()))
<               .execute()
<               .getLanguages();
<       return languages != null ? languages : ImmutableList.<LanguagesResource>of();
---
>               Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage());
>       Translate.Projects.Locations.GetSupportedLanguages list = translate.projects().locations().getSupportedLanguages("projects/" + options.getProjectId() + "/locations/global");
>       list.setKey(options.getApiKey());
>       list.setTarget(targetLanguage);
>       com.google.api.services.translate.v3.model.SupportedLanguages response = list.execute();
>       return response.getLanguages();
99c107
<   public List<TranslationsResource> translate(List<String> texts, Map<Option, ?> optionMap) {
---
>   public List<com.google.api.services.translate.v3.model.Translation> translate(List<String> texts, Map<Option, ?> optionMap) {
104,120c112,126
<       List<TranslationsResource> translations =
<           translate
<               .translations()
<               .list(texts, targetLanguage)
<               .setSource(sourceLanguage)
<               .setKey(options.getApiKey())
<               .setModel(Option.MODEL.getString(optionMap))
<               .setFormat(Option.FORMAT.getString(optionMap))
<               .execute()
<               .getTranslations();
<       return Lists.transform(
<           translations != null ? translations : ImmutableList.<TranslationsResource>of(),
<           new Function<TranslationsResource, TranslationsResource>() {
<             @Override
<             public TranslationsResource apply(TranslationsResource translationsResource) {
<               if (translationsResource.getDetectedSourceLanguage() == null) {
<                 translationsResource.setDetectedSourceLanguage(sourceLanguage);
---
>       List<com.google.api.services.translate.v3.model.Translation> allTranslations = new ArrayList<>();
> 
>       for (String text : texts) {
>         TranslateTextRequest translateTextRequest = new TranslateTextRequest()
>             .setSourceLanguageCode(sourceLanguage)
>             .setTargetLanguageCode(targetLanguage)
>             .setContents(Lists.newArrayList(text));
> 
>         TranslateText translateText = translate.projects().locations().translateText("projects/" + options.getProjectId() + "/locations/global", translateTextRequest);
>         translateText.setKey(options.getApiKey());
> 
>         TranslateTextResponse response = translateText.execute();
>         List<Translation> translations = response.getTranslations();
>         if (translations != null) {
>           allTranslations.addAll(translations);
122d127
<               return translationsResource;
124c129,130
<           });
---
> 
>       return allTranslations;
