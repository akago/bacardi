12d11
< import org.spongepowered.api.Platform.Type;
14d12
< import org.spongepowered.api.command.CommandSource;
16,17d13
< import org.spongepowered.api.network.ChannelBuf;
< import org.spongepowered.api.network.RawDataListener;
19a16,19
> import org.spongepowered.api.util.ChannelBuf;
> import org.spongepowered.api.network.channel.RawDataHandler;
> import org.spongepowered.api.network.channel.ChannelReceiver.Context;
> import org.spongepowered.api.scheduler.TaskExecutorService;
21c21
< public class UpdateSkinListener implements RawDataListener {
---
> public class UpdateSkinListener implements RawDataHandler<ChangeSkinSponge> {
27c27
<     public void handlePayload(ChannelBuf data, RemoteConnection connection, Type side) {
---
>     public void handlePayload(ChangeSkinSponge plugin, ChannelBuf data, RemoteConnection connection, Context context) {
35,36c35,37
<             Runnable skinUpdater = new SkinApplier(plugin, (CommandSource) connection, receiver.get(), null, false);
<             Task.builder().execute(skinUpdater).submit(plugin);
---
>             Runnable skinUpdater = new SkinApplier(plugin, (Player) connection, receiver.get(), null, false);
>             TaskExecutorService taskExecutorService = Sponge.getServer().getScheduler().createSyncExecutor(plugin);
>             taskExecutorService.execute(skinUpdater);
