22d21
< import com.hazelcast.config.MaxSizeConfig;
27d25
< import com.hazelcast.core.Cluster;
30c28
< import com.hazelcast.core.Member;
---
> import com.hazelcast.core.LifecycleService;
74a73,76
> import com.hazelcast.cluster.Cluster;
> import com.hazelcast.cluster.Member;
> import com.hazelcast.config.MaxSizeConfig;
> 
208,209c210,213
<                 lifecycleListener = hazelcast.getLifecycleService().addLifecycleListener(clusterListener);
<                 membershipListener = cluster.addMembershipListener(clusterListener);
---
>                 LifecycleService lifecycleService = hazelcast.getLifecycleService();
>                 com.hazelcast.cluster.Cluster clusterNew = hazelcast.getCluster();
>                 lifecycleListener = lifecycleService.addLifecycleListener(clusterListener);
>                 membershipListener = clusterNew.addMembershipListener(clusterListener);
247,248c251,254
<         hazelcast.getLifecycleService().removeLifecycleListener(lifecycleListener);
<         cluster.removeMembershipListener(membershipListener);
---
>         LifecycleService lifecycleService = hazelcast.getLifecycleService();
>         com.hazelcast.cluster.Cluster clusterNew = hazelcast.getCluster();
>         lifecycleService.removeLifecycleListener(lifecycleListener);
>         clusterNew.removeMembershipListener(membershipListener);
288c294,297
<             dynamicConfig.setMaxSizeConfig(new MaxSizeConfig(hazelcastMaxCacheSizeInMegaBytes, MaxSizeConfig.MaxSizePolicy.USED_HEAP_SIZE));
---
>             MaxSizeConfig maxSizeConfig = new MaxSizeConfig();
>             maxSizeConfig.setSize(hazelcastMaxCacheSizeInMegaBytes);
>             maxSizeConfig.setMaxSizePolicy(MaxSizeConfig.MaxSizePolicy.USED_HEAP_SIZE);
>             dynamicConfig.setMaxSizeConfig(maxSizeConfig);
331c340
<             final Member oldest = cluster.getMembers().iterator().next();
---
>             com.hazelcast.cluster.Member oldest = cluster.getMembers().iterator().next();
341c350,351
<             return getNodeID(cluster.getLocalMember()).toByteArray();
---
>             com.hazelcast.cluster.Member localMember = cluster.getLocalMember();
>             return getNodeID(localMember).toByteArray();
370,372c380,382
<         final Set<Member> members = new HashSet<>();
<         final Member current = cluster.getLocalMember();
<         for (final Member member : cluster.getMembers()) {
---
>         final Set<com.hazelcast.cluster.Member> members = new HashSet<>();
>         com.hazelcast.cluster.Member current = cluster.getLocalMember();
>         for (final com.hazelcast.cluster.Member member : cluster.getMembers()) {
399c409
<         final Member member = getMember(nodeID);
---
>         com.hazelcast.cluster.Member member = getMember(nodeID);
423,425c433,435
<         final Set<Member> members = new HashSet<>();
<         final Member current = cluster.getLocalMember();
<         for (final Member member : cluster.getMembers()) {
---
>         final Set<com.hazelcast.cluster.Member> members = new HashSet<>();
>         com.hazelcast.cluster.Member current = cluster.getLocalMember();
>         for (final com.hazelcast.cluster.Member member : cluster.getMembers()) {
436c446
<                 final Map<Member, ? extends Future<T>> futures = hazelcast.getExecutorService(HAZELCAST_EXECUTOR_SERVICE_NAME.getValue()).submitToMembers(new CallableTask<>(task), members);
---
>                 final Map<com.hazelcast.cluster.Member, ? extends Future<T>> futures = hazelcast.getExecutorService(HAZELCAST_EXECUTOR_SERVICE_NAME.getValue()).submitToMembers(new CallableTask<>(task), members);
464c474
<         final Member member = getMember(nodeID);
---
>         com.hazelcast.cluster.Member member = getMember(nodeID);
494c504
<         final Member member = getMember(nodeID);
---
>         com.hazelcast.cluster.Member member = getMember(nodeID);
501c511
<     private Member getMember(final byte[] nodeID) {
---
>     private com.hazelcast.cluster.Member getMember(final byte[] nodeID) {
503c513
<         for (final Member member : cluster.getMembers()) {
---
>         for (final com.hazelcast.cluster.Member member : cluster.getMembers()) {
655c665
<     public static NodeID getNodeID(final Member member) {
---
>     public static NodeID getNodeID(final com.hazelcast.cluster.Member member) {
701,703d710
< 
< 
< 
