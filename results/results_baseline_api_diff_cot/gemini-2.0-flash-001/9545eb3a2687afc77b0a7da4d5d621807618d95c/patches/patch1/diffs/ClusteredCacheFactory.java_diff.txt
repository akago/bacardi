18a19,20
> import com.hazelcast.cluster.Cluster;
> import com.hazelcast.cluster.Member;
27d28
< import com.hazelcast.core.Cluster;
30d30
< import com.hazelcast.core.Member;
288c288,291
<             dynamicConfig.setMaxSizeConfig(new MaxSizeConfig(hazelcastMaxCacheSizeInMegaBytes, MaxSizeConfig.MaxSizePolicy.USED_HEAP_SIZE));
---
>             MaxSizeConfig maxSizeConfig = new MaxSizeConfig();
>             maxSizeConfig.setSize(hazelcastMaxCacheSizeInMegaBytes);
>             maxSizeConfig.setMaxSizePolicy(MaxSizeConfig.MaxSizePolicy.USED_HEAP_SIZE);
>             dynamicConfig.setMaxSizeConfig(maxSizeConfig);
331,334c334,340
<             final Member oldest = cluster.getMembers().iterator().next();
<             return getNodeID(oldest).toByteArray();
<         } else {
<             return null;
---
>             Member oldestMember = null;
>             for (Member member : cluster.getMembers()) {
>                 if (oldestMember == null) {
>                     oldestMember = member;
>                 } else if (member.getUuid().compareTo(oldestMember.getUuid()) < 0) {
>                     oldestMember = member;
>                 }
335a342,346
>             if (oldestMember != null) {
>                 return getNodeID(oldestMember).toByteArray();
>             }
>         }
>         return null;
356c367
<         return cluster == null ? System.currentTimeMillis() : cluster.getClusterTime();
---
>         return cluster == null ? System.currentTimeMillis() : hazelcast.getCluster().getClusterTime();
496c507
<             result = new HazelcastClusterNodeInfo(member, cluster.getClusterTime());
---
>             result = new HazelcastClusterNodeInfo(member, hazelcast.getCluster().getClusterTime());
656c667
<         return NodeID.getInstance(member.getStringAttribute(HazelcastClusterNodeInfo.NODE_ID_ATTRIBUTE).getBytes(StandardCharsets.UTF_8));
---
>         return NodeID.getInstance(member.getStringAttribute(HazelcastClusterNodeInfo.NODE_ID_ATTRIBUTE));
701,703d711
< 
< 
< 
