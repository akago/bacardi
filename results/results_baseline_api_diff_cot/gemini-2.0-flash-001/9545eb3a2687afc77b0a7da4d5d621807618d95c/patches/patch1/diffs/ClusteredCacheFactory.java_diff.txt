18a19,20
> import com.hazelcast.cluster.Cluster;
> import com.hazelcast.cluster.Member;
22,23d23
< import com.hazelcast.config.MaxSizeConfig;
< import com.hazelcast.config.MemberAttributeConfig;
27d26
< import com.hazelcast.core.Cluster;
30d28
< import com.hazelcast.core.Member;
192a191
>                 /*
195a195,198
>                 */
>                 config.setProperty("hazelcast.member.attributes." + HazelcastClusterNodeInfo.HOST_NAME_ATTRIBUTE, XMPPServer.getInstance().getServerInfo().getHostname());
>                 config.setProperty("hazelcast.member.attributes." + HazelcastClusterNodeInfo.NODE_ID_ATTRIBUTE, XMPPServer.getInstance().getNodeID().toString());
> 
288c291,294
<             dynamicConfig.setMaxSizeConfig(new MaxSizeConfig(hazelcastMaxCacheSizeInMegaBytes, MaxSizeConfig.MaxSizePolicy.USED_HEAP_SIZE));
---
>             com.hazelcast.config.MaxSizeConfig maxSizeConfig = new com.hazelcast.config.MaxSizeConfig();
>             maxSizeConfig.setSize(hazelcastMaxCacheSizeInMegaBytes);
>             maxSizeConfig.setMaxSizePolicy(com.hazelcast.config.MaxSizeConfig.MaxSizePolicy.USED_HEAP_SIZE);
>             dynamicConfig.setMaxSizeConfig(maxSizeConfig);
656c662,663
<         return NodeID.getInstance(member.getStringAttribute(HazelcastClusterNodeInfo.NODE_ID_ATTRIBUTE).getBytes(StandardCharsets.UTF_8));
---
>         //return NodeID.getInstance(member.getStringAttribute(HazelcastClusterNodeInfo.NODE_ID_ATTRIBUTE).getBytes(StandardCharsets.UTF_8));
>         return NodeID.getInstance(member.getAttribute(HazelcastClusterNodeInfo.NODE_ID_ATTRIBUTE).toString().getBytes(StandardCharsets.UTF_8));
701,703d707
< 
< 
< 
