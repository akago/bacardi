3a4
> import org.flywaydb.core.api.configuration.ClassicConfiguration; // Added import for ClassicConfiguration
108,113c109,115
<                 final org.flywaydb.core.Flyway flyway = new Flyway();
<                 flyway.setDataSource(this.dataSource());
<                 flyway.setClassLoader(NisAppConfig.class.getClassLoader());
<                 flyway.setLocations(prop.getProperty("flyway.locations"));
<                 flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
<                 return flyway;
---
>                 ClassicConfiguration configuration = new ClassicConfiguration(); // Create a new ClassicConfiguration instance
>                 configuration.setDataSource(this.dataSource()); // Set the data source
>                 configuration.setClassLoader(NisAppConfig.class.getClassLoader()); // Set the class loader
>                 configuration.setLocations(prop.getProperty("flyway.locations").split(",")); // Set the locations
>                 configuration.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate"))); // Set validate on migrate
> 
>                 return new Flyway(configuration); // Use the new constructor
