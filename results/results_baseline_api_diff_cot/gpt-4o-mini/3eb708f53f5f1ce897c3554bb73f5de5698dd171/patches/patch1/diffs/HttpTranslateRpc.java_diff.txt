25,28c25,29
< import com.google.api.services.translate.Translate;
< import com.google.api.services.translate.model.DetectionsResourceItems;
< import com.google.api.services.translate.model.LanguagesResource;
< import com.google.api.services.translate.model.TranslationsResource;
---
> import com.google.api.services.translate.v3.Translate;
> import com.google.api.services.translate.v3.model.DetectLanguageResponse;
> import com.google.api.services.translate.v3.model.Language;
> import com.google.api.services.translate.v3.model.TranslateTextRequest;
> import com.google.api.services.translate.v3.model.TranslateTextResponse;
51d51
<             .setRootUrl(options.getHost())
61c61
<     GenericUrl genericUrl = new GenericUrl(translate.getBaseUrl() + "v2/" + path);
---
>     GenericUrl genericUrl = new GenericUrl(translate.getBaseUrl() + "v3/" + path);
69c69
<   public List<List<DetectionsResourceItems>> detect(List<String> texts) {
---
>   public List<List<DetectLanguageResponse>> detect(List<String> texts) {
71,73c71,73
<       List<List<DetectionsResourceItems>> detections =
<           translate.detections().list(texts).setKey(options.getApiKey()).execute().getDetections();
<       return detections != null ? detections : ImmutableList.<List<DetectionsResourceItems>>of();
---
>       List<List<DetectLanguageResponse>> detections =
>           translate.projects().locations().detectLanguage("projects/" + options.getProjectId(), new DetectLanguageRequest().setContent(texts)).execute().getResponses();
>       return detections != null ? detections : ImmutableList.<List<DetectLanguageResponse>>of();
80c80
<   public List<LanguagesResource> listSupportedLanguages(Map<Option, ?> optionMap) {
---
>   public List<Language> listSupportedLanguages(Map<Option, ?> optionMap) {
82,85c82,83
<       List<LanguagesResource> languages =
<           translate
<               .languages()
<               .list()
---
>       List<Language> languages =
>           translate.projects().locations().getSupportedLanguages("projects/" + options.getProjectId())
87,89d84
<               .setTarget(
<                   firstNonNull(
<                       Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage()))
92c87
<       return languages != null ? languages : ImmutableList.<LanguagesResource>of();
---
>       return languages != null ? languages : ImmutableList.<Language>of();
99c94
<   public List<TranslationsResource> translate(List<String> texts, Map<Option, ?> optionMap) {
---
>   public List<TranslateTextResponse> translate(List<String> texts, Map<Option, ?> optionMap) {
103,109c98,101
<       final String sourceLanguage = Option.SOURCE_LANGUAGE.getString(optionMap);
<       List<TranslationsResource> translations =
<           translate
<               .translations()
<               .list(texts, targetLanguage)
<               .setSource(sourceLanguage)
<               .setKey(options.getApiKey())
---
>       TranslateTextRequest request = new TranslateTextRequest()
>           .setContents(texts)
>           .setTargetLanguage(targetLanguage)
>           .setSourceLanguage(Option.SOURCE_LANGUAGE.getString(optionMap))
111,124c103,105
<               .setFormat(Option.FORMAT.getString(optionMap))
<               .execute()
<               .getTranslations();
<       return Lists.transform(
<           translations != null ? translations : ImmutableList.<TranslationsResource>of(),
<           new Function<TranslationsResource, TranslationsResource>() {
<             @Override
<             public TranslationsResource apply(TranslationsResource translationsResource) {
<               if (translationsResource.getDetectedSourceLanguage() == null) {
<                 translationsResource.setDetectedSourceLanguage(sourceLanguage);
<               }
<               return translationsResource;
<             }
<           });
---
>           .setFormat(Option.FORMAT.getString(optionMap));
>       TranslateTextResponse response = translate.projects().locations().translateText("projects/" + options.getProjectId(), request).execute();
>       return response.getTranslations();
