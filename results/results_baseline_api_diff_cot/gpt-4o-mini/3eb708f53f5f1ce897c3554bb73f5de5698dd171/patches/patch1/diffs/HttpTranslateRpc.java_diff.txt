6c6
<  * You may obtain a copy of the License at
---
>  * you may obtain a copy of the License at
25,28c25,28
< import com.google.api.services.translate.Translate;
< import com.google.api.services.translate.model.DetectionsResourceItems;
< import com.google.api.services.translate.model.LanguagesResource;
< import com.google.api.services.translate.model.TranslationsResource;
---
> import com.google.api.services.translate.v3.Translate;
> import com.google.api.services.translate.v3.model.DetectLanguageResponse;
> import com.google.api.services.translate.v3.model.Language;
> import com.google.api.services.translate.v3.model.TranslateTextResponse;
50,52c50,51
<         new Translate.Builder(transport, new JacksonFactory(), initializer)
<             .setRootUrl(options.getHost())
<             .setApplicationName(options.getApplicationName())
---
>         Translate.newBuilder(transport, new JacksonFactory(), initializer)
>             .setApiKey(options.getApiKey())
69c68
<   public List<List<DetectionsResourceItems>> detect(List<String> texts) {
---
>   public List<List<DetectLanguageResponse>> detect(List<String> texts) {
71,73c70,75
<       List<List<DetectionsResourceItems>> detections =
<           translate.detections().list(texts).setKey(options.getApiKey()).execute().getDetections();
<       return detections != null ? detections : ImmutableList.<List<DetectionsResourceItems>>of();
---
>       List<List<DetectLanguageResponse>> detections =
>           translate.projects().detectLanguage("projects/" + options.getProjectId())
>               .setContents(texts)
>               .execute()
>               .getResponses();
>       return detections != null ? detections : ImmutableList.<List<DetectLanguageResponse>>of();
80c82
<   public List<LanguagesResource> listSupportedLanguages(Map<Option, ?> optionMap) {
---
>   public List<Language> listSupportedLanguages(Map<Option, ?> optionMap) {
82,86c84,85
<       List<LanguagesResource> languages =
<           translate
<               .languages()
<               .list()
<               .setKey(options.getApiKey())
---
>       List<Language> languages =
>           translate.projects().locations().getSupportedLanguages("projects/" + options.getProjectId())
92c91
<       return languages != null ? languages : ImmutableList.<LanguagesResource>of();
---
>       return languages != null ? languages : ImmutableList.<Language>of();
99c98
<   public List<TranslationsResource> translate(List<String> texts, Map<Option, ?> optionMap) {
---
>   public List<TranslateTextResponse> translate(List<String> texts, Map<Option, ?> optionMap) {
103,111c102,103
<       final String sourceLanguage = Option.SOURCE_LANGUAGE.getString(optionMap);
<       List<TranslationsResource> translations =
<           translate
<               .translations()
<               .list(texts, targetLanguage)
<               .setSource(sourceLanguage)
<               .setKey(options.getApiKey())
<               .setModel(Option.MODEL.getString(optionMap))
<               .setFormat(Option.FORMAT.getString(optionMap))
---
>       List<TranslateTextResponse> translations =
>           translate.projects().locations().translateText("projects/" + options.getProjectId(), texts, targetLanguage)
114,124c106
<       return Lists.transform(
<           translations != null ? translations : ImmutableList.<TranslationsResource>of(),
<           new Function<TranslationsResource, TranslationsResource>() {
<             @Override
<             public TranslationsResource apply(TranslationsResource translationsResource) {
<               if (translationsResource.getDetectedSourceLanguage() == null) {
<                 translationsResource.setDetectedSourceLanguage(sourceLanguage);
<               }
<               return translationsResource;
<             }
<           });
---
>       return translations != null ? translations : ImmutableList.<TranslateTextResponse>of();
