1,16d0
< /*
<  * Copyright 2016 Google LLC
<  *
<  * Licensed under the Apache License, Version 2.0 (the "License");
<  * you may not use this file except in compliance with the License.
<  * You may obtain a copy of the License at
<  *
<  *       http://www.apache.org/licenses/LICENSE-2.0
<  *
<  * Unless required by applicable law or agreed to in writing, software
<  * distributed under the License is distributed on an "AS IS" BASIS,
<  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<  * See the License for the specific language governing permissions and
<  * limitations under the License.
<  */
< 
25,28c9,12
< import com.google.api.services.translate.Translate;
< import com.google.api.services.translate.model.DetectionsResourceItems;
< import com.google.api.services.translate.model.LanguagesResource;
< import com.google.api.services.translate.model.TranslationsResource;
---
> import com.google.api.services.translate.v3.Translate;
> import com.google.api.services.translate.v3.model.DetectLanguageResponse;
> import com.google.api.services.translate.v3.model.Language;
> import com.google.api.services.translate.v3.model.TranslateTextResponse;
61c45
<     GenericUrl genericUrl = new GenericUrl(translate.getBaseUrl() + "v2/" + path);
---
>     GenericUrl genericUrl = new GenericUrl(translate.getRootUrl() + "v3/" + path);
69c53
<   public List<List<DetectionsResourceItems>> detect(List<String> texts) {
---
>   public List<List<DetectLanguageResponse>> detect(List<String> texts) {
71,73c55,57
<       List<List<DetectionsResourceItems>> detections =
<           translate.detections().list(texts).setKey(options.getApiKey()).execute().getDetections();
<       return detections != null ? detections : ImmutableList.<List<DetectionsResourceItems>>of();
---
>       List<List<DetectLanguageResponse>> detections =
>           translate.projects().locations().detectLanguage("projects/" + options.getProjectId(), texts).execute().getResponses();
>       return detections != null ? detections : ImmutableList.<List<DetectLanguageResponse>>of();
80c64
<   public List<LanguagesResource> listSupportedLanguages(Map<Option, ?> optionMap) {
---
>   public List<Language> listSupportedLanguages(Map<Option, ?> optionMap) {
82c66
<       List<LanguagesResource> languages =
---
>       List<Language> languages =
84,89c68,71
<               .languages()
<               .list()
<               .setKey(options.getApiKey())
<               .setTarget(
<                   firstNonNull(
<                       Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage()))
---
>               .projects()
>               .locations()
>               .getSupportedLanguages("projects/" + options.getProjectId())
>               .setTarget(firstNonNull(Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage()))
92c74
<       return languages != null ? languages : ImmutableList.<LanguagesResource>of();
---
>       return languages != null ? languages : ImmutableList.<Language>of();
99c81
<   public List<TranslationsResource> translate(List<String> texts, Map<Option, ?> optionMap) {
---
>   public List<TranslateTextResponse> translate(List<String> texts, Map<Option, ?> optionMap) {
104c86
<       List<TranslationsResource> translations =
---
>       List<TranslateTextResponse> translations =
106,107c88,90
<               .translations()
<               .list(texts, targetLanguage)
---
>               .projects()
>               .locations()
>               .translateText("projects/" + options.getProjectId(), texts, targetLanguage)
109d91
<               .setKey(options.getApiKey())
115,116c97,98
<           translations != null ? translations : ImmutableList.<TranslationsResource>of(),
<           new Function<TranslationsResource, TranslationsResource>() {
---
>           translations != null ? translations : ImmutableList.<TranslateTextResponse>of(),
>           new Function<TranslateTextResponse, TranslateTextResponse>() {
118,120c100,102
<             public TranslationsResource apply(TranslationsResource translationsResource) {
<               if (translationsResource.getDetectedSourceLanguage() == null) {
<                 translationsResource.setDetectedSourceLanguage(sourceLanguage);
---
>             public TranslateTextResponse apply(TranslateTextResponse translateTextResponse) {
>               if (translateTextResponse.getDetectedSourceLanguage() == null) {
>                 translateTextResponse.setDetectedSourceLanguage(sourceLanguage);
122c104
<               return translationsResource;
---
>               return translateTextResponse;
