13,17c13,19
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.command.args.CommandContext;
< import org.spongepowered.api.command.spec.CommandExecutor;
< import org.spongepowered.api.command.spec.CommandSpec;
< import org.spongepowered.api.scheduler.Task;
---
> import org.spongepowered.api.command.parameter.CommandContext;
> import org.spongepowered.api.command.parameter.Parameter;
> import org.spongepowered.api.command.CommandExecutor;
> import org.spongepowered.api.command.parameter.CommandParameter;
> import org.spongepowered.api.scheduler.TaskExecutorService;
> import org.spongepowered.api.command.Command;
> import org.spongepowered.api.command.parameter.managed.Flag;
19,20c21
< import static org.spongepowered.api.command.args.GenericArguments.string;
< import static org.spongepowered.api.text.Text.of;
---
> import static org.spongepowered.api.command.parameter.Parameter.string;
34,36c35,37
<     public CommandResult execute(CommandSource src, CommandContext args) {
<         String url = args.<String>getOne("url").get();
<         if (url.startsWith("http://") || url.startsWith("https://")) {
---
>     public CommandResult execute(CommandContext args) {
>         String url = args.one(Parameter.string("url")).orElse(null);
>         if (url != null && (url.startsWith("http://") || url.startsWith("https://"))) {
39c40
<                 plugin.sendMessage(src, "no-accounts");
---
>                 plugin.sendMessage(args.cause().audience(), "no-accounts");
42,43c43,45
<                 Runnable skinUploader = new SkinUploader(plugin, src, uploadAccount, url);
<                 Task.builder().async().execute(skinUploader).submit(plugin);
---
>                 Runnable skinUploader = new SkinUploader(plugin, args.cause().audience(), uploadAccount, url);
>                 TaskExecutorService scheduler = plugin.getScheduler();
>                 scheduler.submit(skinUploader);
46c48
<             plugin.sendMessage(src, "no-valid-url");
---
>             plugin.sendMessage(args.cause().audience(), "no-valid-url");
53,54c55,56
<     public CommandSpec buildSpec() {
<         return CommandSpec.builder()
---
>     public Command buildSpec() {
>         return Command.builder()
56c58
<                 .arguments(string(of("url")))
---
>                 .addParameter(Parameter.string("url"))
