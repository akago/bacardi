36,37d35
< import org.sonarsource.sonarlint.core.client.api.standalone.StandaloneAnalysisConfiguration;
< import org.sonarsource.sonarlint.core.client.api.standalone.StandaloneGlobalConfiguration;
42d39
< import org.sonarsource.sonarlint.core.commons.progress.ProgressMonitor;
45,46d41
< import org.sonarsource.sonarlint.core.plugin.commons.PluginsLoader;
< import org.sonarsource.sonarlint.core.plugin.commons.PluginsLoader.Configuration;
49d43
< import org.sonarsource.sonarlint.core.plugin.commons.loading.PluginRequirementsCheckResult;
67c61
<     // The only instance of this singleton class
---
>     // The only instance of this class
70c64,65
<     // We need to reinitialise it before starting analysis of any source files on any rules.
---
>     // We need to reinitialise the analysis engine as it is stopped after each analysis executed by {@link
>     // SonarStaticAnalyzer}.
77c72
<         this.analysisEngine = new AnalysisEngine(analysisGlobalConfig, loadedPlugins, null);
---
>         this.analysisEngine = new AnalysisEngine(analysisGlobalConfig, loadedPlugins, logOutput);
147c142
<                 pluginInstancesByKeys, new PluginInstancesLoader());
---
>                 (pluginInstancesByKeys, pluginInstancesLoader);
154c149
<                 .collect(toList());
---
>                 .collect(Collectors.toList());
163c158
<                 .addEnabledLanguages(globalConfig.getEnabledLanguages())
---
>                 .addEnabledLanguages(List.of(Language.JAVA))
