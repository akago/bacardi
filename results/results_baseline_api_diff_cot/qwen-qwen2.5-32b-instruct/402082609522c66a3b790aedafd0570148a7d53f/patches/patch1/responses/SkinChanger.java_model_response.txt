```java
package com.github.games647.changeskin.sponge.task;

import com.github.games647.changeskin.core.model.auth.Account;
import com.github.games647.changeskin.core.shared.task.SharedSkinChanger;
import com.github.games647.changeskin.sponge.ChangeSkinSponge;

import org.spongepowered.api.text.Text;
import org.spongepowered.api.text.format.TextColors;
import org.spongepowered.api.world.World;
import org.spongepowered.api.entity.living.player.Player;

public class SkinChanger extends SharedSkinChanger {

    private final Player invoker;

    public SkinChanger(ChangeSkinSponge plugin, Account owner, String url, String oldSkinUrl, Player invoker) {
        super(plugin.getCore(), owner, url, oldSkinUrl);

        this.invoker = invoker;
    }

    @Override
    protected void sendMessageInvoker(String localeMessage) {
        invoker.sendMessage(Text.of(TextColors.RED, localeMessage));
    }
}
```

In this solution, I've replaced `CommandSource` with `Player` as a more specific type that is likely to be available in the new API, and adjusted the `sendMessageInvoker` method to use `Text` and `TextColors` from the Sponge API, which are more likely to be available in the new version. This approach assumes that the `Player` class is still available and that the `sendMessage` method can accept a `Text` object. If `Player` is not the correct replacement, further investigation into the new API would be necessary to find the appropriate replacement for `CommandSource`.
