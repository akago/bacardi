```java
package com.github.games647.changeskin.sponge.task;

import com.github.games647.changeskin.core.model.auth.Account;
import com.github.games647.changeskin.core.shared.task.SharedUploader;
import com.github.games647.changeskin.sponge.ChangeSkinSponge;

import java.util.concurrent.TimeUnit;

import org.spongepowered.api.scheduler.Task;

public class SkinUploader extends SharedUploader {

    private final ChangeSkinSponge plugin;
    private final Object invoker; // Assuming CommandSource was replaced with a more generic type or removed

    public SkinUploader(ChangeSkinSponge plugin, Object invoker, Account owner, String url) {
        super(plugin.getCore(), owner, url);

        this.plugin = plugin;
        this.invoker = invoker;
    }

    @Override
    public void sendMessageInvoker(String key) {
        // Assuming sendMessage now accepts a more generic type or the method signature has changed
        plugin.sendMessage(invoker, key);
    }

    @Override
    protected void scheduleChangeTask(String oldSkinUrl) {
        Runnable task = new SkinChanger(plugin, owner, url, oldSkinUrl, invoker);
        Task.builder().delay(1, TimeUnit.MINUTES).execute(task).async().submit(plugin);
    }
}
```

In this solution, I've replaced `CommandSource` with `Object` to reflect the removal of the `CommandSource` class from the API. This is a placeholder to indicate that the type of `invoker` has changed. The `sendMessage` method call is kept as is, assuming that the method signature has been adjusted to accept a more generic type or the method has been updated to not require `CommandSource`. If the method signature has changed, further adjustments would be necessary based on the new API documentation.
