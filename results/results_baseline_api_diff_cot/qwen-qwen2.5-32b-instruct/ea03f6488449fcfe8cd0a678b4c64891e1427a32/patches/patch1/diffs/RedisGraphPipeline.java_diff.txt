4,11c4,7
< import redis.clients.jedis.commands.BasicRedisPipeline;
< import redis.clients.jedis.commands.BinaryRedisPipeline;
< import redis.clients.jedis.commands.BinaryScriptingCommandsPipeline;
< import redis.clients.jedis.commands.ClusterPipeline;
< import redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline;
< import redis.clients.jedis.commands.MultiKeyCommandsPipeline;
< import redis.clients.jedis.commands.RedisPipeline;
< import redis.clients.jedis.commands.ScriptingCommandsPipeline;
---
> import redis.clients.jedis.exceptions.JedisException;
> import redis.clients.jedis.params.ScanParams;
> import redis.clients.jedis.resps.ScanResult;
> import redis.clients.jedis.util.SafeEncoder;
20,24c16
< public interface RedisGraphPipeline extends
<         MultiKeyBinaryRedisPipeline,
<         MultiKeyCommandsPipeline, ClusterPipeline,
<         BinaryScriptingCommandsPipeline, ScriptingCommandsPipeline,
<         BasicRedisPipeline, BinaryRedisPipeline, RedisPipeline, Closeable {
---
> public interface RedisGraphPipeline extends Closeable {
52c44
<      * Execute a Cypher read-only query with timeout.
---
>      * Executes a cypher read-only query with timeout.
100c92
<      * @param graphId a graph to perform the query on
---
>      * @param graphId graph to perform the query on
108c100
<      * @param graphId a graph to perform the query on
---
>      * @param graphId graph to perform the query on
117c109
<      * @param graphId a graph to perform the query on
---
>      * @param graphId graph to perform the query on
132d123
<     
143c134
<      * get return values from pipelined commands, capture the different Response&lt;?&gt; of the
---
>      * get return values from pipelined commands, capture the different Response<?> of the
146,147c137
<     public void sync();
<     
---
>     void sync();
159c149
<     public Response<Long> waitReplicas(int replicas, long timeout);
---
>     Response<Long> waitReplicas(int replicas, long timeout);
