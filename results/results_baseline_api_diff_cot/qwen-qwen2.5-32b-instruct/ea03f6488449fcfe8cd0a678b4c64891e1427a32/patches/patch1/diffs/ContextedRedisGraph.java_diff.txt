12d11
< import redis.clients.jedis.Client;
14,15c13,14
< import redis.clients.jedis.exceptions.JedisDataException;
< import redis.clients.jedis.util.SafeEncoder;
---
> import redis.clients.jedis.Transaction;
> import redis.clients.jedis.Pipeline;
98,101c97,99
<         } catch (JRedisGraphException rt) {
<             throw rt;
<         } catch (JedisDataException j) {
<             throw new JRedisGraphException(j);
---
>         } catch (Exception e) {
>             conn.close();
>             throw e;
128,163d125
<      * @return Returns the instance Jedis connection.
<      */
<     @Override
<     public Jedis getConnectionContext() {
<         return this.connectionContext;
<     }
< 
<     /**
<      * Creates a new RedisGraphTransaction transactional object
<      * @return new RedisGraphTransaction
<      */
<     @Override
<     public RedisGraphTransaction multi() {
<         Jedis jedis = getConnection();
<         Client client = jedis.getClient();
<         client.multi();
<         client.getOne();
<         RedisGraphTransaction transaction = new RedisGraphTransaction(client, this);
<         transaction.setRedisGraphCaches(caches);
<         return transaction;
<     }
< 
<     /**
<      * Creates a new RedisGraphPipeline pipeline object
<      * @return new RedisGraphPipeline
<      */
<     @Override
<     public RedisGraphPipeline pipelined() {
<         Jedis jedis = getConnection();
<         Client client = jedis.getClient();
<         RedisGraphPipeline pipeline = new RedisGraphPipeline(client, this);
<         pipeline.setRedisGraphCaches(caches);
<         return pipeline;
<     }
< 
<     /**
208d169
< 
215a177,201
>     /**
>      * Creates a new RedisGraphTransaction transactional object
>      * @return new RedisGraphTransaction
>      */
>     @Override
>     public RedisGraphTransaction multi() {
>         Jedis conn = getConnection();
>         Transaction transaction = conn.multi();
>         RedisGraphTransaction redisGraphTransaction = new RedisGraphTransaction(transaction, this);
>         redisGraphTransaction.setRedisGraphCaches(caches);
>         return redisGraphTransaction;
>     }
> 
>     /**
>      * Creates a new RedisGraphPipeline pipeline object
>      * @return new RedisGraphPipeline
>      */
>     @Override
>     public RedisGraphPipeline pipelined() {
>         Jedis conn = getConnection();
>         Pipeline pipeline = conn.pipelined();
>         RedisGraphPipeline redisGraphPipeline = new RedisGraphPipeline(pipeline, this);
>         redisGraphPipeline.setRedisGraphCaches(caches);
>         return redisGraphPipeline;
>     }
