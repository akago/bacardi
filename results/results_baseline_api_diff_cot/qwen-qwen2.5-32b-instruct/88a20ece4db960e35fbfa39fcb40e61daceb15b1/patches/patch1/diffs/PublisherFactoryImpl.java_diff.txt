1,15d0
< /*
<  * Copyright 2020 Google LLC
<  *
<  * Licensed under the Apache License, Version 2.0 (the "License");
<  * you may not use this file except in compliance with the License.
<  * You may obtain a copy of the License at
<  *
<  *       http://www.apache.org/licenses/LICENSE-2.0
<  *
<  * Unless required by applicable law or agreed to in writing, software
<  * distributed under the License is distributed on an "AS IS" BASIS,
<  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<  * See the License for the specific language governing permissions and
<  * limitations under the License.
<  */
18d2
< import com.google.cloud.pubsublite.CloudZone;
20d3
< import com.google.cloud.pubsublite.PublishMetadata;
25c8
< import com.google.cloud.pubsublite.internal.wire.PubsubContext.Framework;
---
> import com.google.cloud.pubsublite.internal.wire.PublisherBuilder;
33c16
<   private static final Framework FRAMEWORK = Framework.of("KAFKA_CONNECT");
---
>   private static final PubsubContext FRAMEWORK = PubsubContext.of("KAFKA_CONNECT");
36c19
<   public Publisher<PublishMetadata> newPublisher(Map<String, String> params) {
---
>   public Publisher newPublisher(Map<String, String> params) {
40,46c23,26
<         TopicPath.newBuilder()
<             .setProject(
<                 ProjectPath.parse("projects/" + config.get(ConfigDefs.PROJECT_FLAG).value())
<                     .project())
<             .setLocation(CloudZone.parse(config.get(ConfigDefs.LOCATION_FLAG).value().toString()))
<             .setName(TopicName.of(config.get(ConfigDefs.TOPIC_NAME_FLAG).value().toString()))
<             .build();
---
>         TopicPath.of(
>             ProjectPath.of("projects/" + config.get(ConfigDefs.PROJECT_FLAG).value()),
>             CloudZone.parse(config.get(ConfigDefs.LOCATION_FLAG).value().toString()),
>             TopicName.of(config.get(ConfigDefs.TOPIC_NAME_FLAG).value().toString()));
53c33
<                 .setContext(PubsubContext.of(FRAMEWORK))
---
>                 .setContext(FRAMEWORK)
