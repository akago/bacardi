9,29c9,26
< import javax.annotation.PostConstruct;
< import javax.enterprise.context.RequestScoped;
< import javax.inject.Inject;
< import javax.mvc.Controller;
< import javax.mvc.Models;
< import javax.mvc.View;
< import javax.mvc.binding.BindingResult;
< import javax.mvc.binding.ParamError;
< import javax.mvc.security.CsrfProtected;
< import javax.validation.Valid;
< import javax.validation.constraints.NotNull;
< import javax.ws.rs.BeanParam;
< import javax.ws.rs.DELETE;
< import javax.ws.rs.FormParam;
< import javax.ws.rs.GET;
< import javax.ws.rs.POST;
< import javax.ws.rs.PUT;
< import javax.ws.rs.Path;
< import javax.ws.rs.PathParam;
< import javax.ws.rs.core.Response;
< import static javax.ws.rs.core.Response.Status.BAD_REQUEST;
---
> import jakarta.annotation.PostConstruct;
> import jakarta.enterprise.context.RequestScoped;
> import jakarta.inject.Inject;
> import jakarta.mvc.Controller;
> import jakarta.mvc.Models;
> import jakarta.mvc.View;
> import jakarta.mvc.binding.BindingResult;
> import jakarta.mvc.security.CsrfProtected;
> import jakarta.validation.Valid;
> import jakarta.validation.constraints.NotNull;
> import jakarta.ws.rs.BeanParam;
> import jakarta.ws.rs.DELETE;
> import jakarta.ws.rs.GET;
> import jakarta.ws.rs.POST;
> import jakarta.ws.rs.PUT;
> import jakarta.ws.rs.Path;
> import jakarta.ws.rs.PathParam;
> import jakarta.ws.rs.core.Response;
90d86
<     //@ValidateOnExecution(type = ExecutableType.NONE)
97,98c93
<                     .stream()
<                     .forEach((ParamError t) -> {
---
>                     .forEach((t) -> {
103c98
<             return Response.status(BAD_REQUEST).entity("add.xhtml").build();
---
>             return Response.status(Response.Status.BAD_REQUEST).entity("add.xhtml").build();
117,131d111
<     @GET
<     @Path("{id}/edit")
<     public Viewable edit(@PathParam("id") Long id) {
<         log.log(Level.INFO, "edit task @{0}", id);
< 
<         Task task = taskRepository.findById(id);
< 
<         TaskForm form = new TaskForm();
<         form.setId(task.getId());
<         form.setName(task.getName());
<         form.setDescription(task.getDescription());
<         models.put("task", form);
<         return new Viewable("edit.xhtml");
<     }
< 
141,142c121
<                     .stream()
<                     .forEach((ParamError t) -> {
---
>                     .forEach((t) -> {
147c126
<             return Response.status(BAD_REQUEST).entity("edit.xhtml").build();
---
>             return Response.status(Response.Status.BAD_REQUEST).entity("edit.xhtml").build();
164,165c143
<     //@CsrfProtected
<     public Response updateStatus(@PathParam(value = "id") Long id, @NotNull @FormParam(value = "status") String status) {
---
>     public Response updateStatus(@PathParam(value = "id") Long id, @NotNull String status) {
