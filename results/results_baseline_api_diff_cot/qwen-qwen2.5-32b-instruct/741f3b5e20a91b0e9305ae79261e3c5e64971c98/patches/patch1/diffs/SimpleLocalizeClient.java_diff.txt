3a4
> import com.fasterxml.jackson.databind.JavaType;
26,29d26
< import java.util.Optional;
< 
< import static io.simplelocalize.cli.TemplateKeys.LANGUAGE_TEMPLATE_KEY;
< import static io.simplelocalize.cli.TemplateKeys.NAMESPACE_TEMPLATE_KEY;
88,89c85,86
<     ExportResponse exportResponse = objectMapper.readValue(body, ExportResponse.class);
<     return exportResponse.getFiles();
---
>     JavaType type = objectMapper.getTypeFactory().constructCollectionType(List.class, DownloadableFile.class);
>     return objectMapper.readValue(body, type);
96c93
<             .replace(NAMESPACE_TEMPLATE_KEY, optionalDownloadableFile.map(DownloadableFile::getNamespace).orElse(""))
---
>             .replace(NAMESPACE_TEMPLATE_KEY, optionalDownloadableFile.map(DownloadableFile::getNamespace).orElse("")))
127c124,125
<     Boolean passed = JsonPath.read(json, "$.data.passed");
---
>     JavaType type = objectMapper.getTypeFactory().constructType(Boolean.class);
>     Boolean passed = objectMapper.readValue(json, type);
144c142
<       String message = JsonPath.using(parseContext).parse(stringBody).read(ERROR_MESSAGE_PATH);
---
>       String message = JsonPath.using(parseContext).parse(stringBody).read(ERROR_MESSAGE_PATH));
165,166d162
< 
< 
