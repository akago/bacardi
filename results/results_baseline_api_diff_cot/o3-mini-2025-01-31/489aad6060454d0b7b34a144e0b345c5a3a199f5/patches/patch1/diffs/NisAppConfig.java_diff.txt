3a4,5
> import org.flywaydb.core.api.Location;
> import org.flywaydb.core.api.configuration.ClassicConfiguration;
108,113c110,131
<                 final org.flywaydb.core.Flyway flyway = new Flyway();
<                 flyway.setDataSource(this.dataSource());
<                 flyway.setClassLoader(NisAppConfig.class.getClassLoader());
<                 flyway.setLocations(prop.getProperty("flyway.locations"));
<                 flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
<                 return flyway;
---
>                 final NisConfiguration configuration = this.nisConfiguration();
>                 final String nemFolder = configuration.getNemFolder();
>                 // replace url parameters with values from configuration
>                 final String jdbcUrl = prop.getProperty("jdbc.url").replace("${nem.folder}", nemFolder).replace("${nem.network}",
>                                 configuration.getNetworkName());
> 
>                 // Create a ClassicConfiguration instance and configure it with the new API.
>                 ClassicConfiguration config = new ClassicConfiguration();
>                 config.setDataSource(jdbcUrl, prop.getProperty("jdbc.username"), prop.getProperty("jdbc.password"));
>                 config.setClassLoader(NisAppConfig.class.getClassLoader());
> 
>                 // Split the locations property (assuming comma separated list) and convert them to Location objects.
>                 String locationsStr = prop.getProperty("flyway.locations");
>                 String[] locationPaths = locationsStr.split("\\s*,\\s*");
>                 Location[] locations = new Location[locationPaths.length];
>                 for (int i = 0; i < locationPaths.length; i++) {
>                         locations[i] = new Location(locationPaths[i]);
>                 }
>                 config.setLocations(locations);
> 
>                 config.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
>                 return new Flyway(config);
