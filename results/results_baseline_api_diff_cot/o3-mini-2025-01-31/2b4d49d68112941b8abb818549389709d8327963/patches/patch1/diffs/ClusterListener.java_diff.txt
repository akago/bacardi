18,19c18,19
< import com.hazelcast.core.Cluster;
< import com.hazelcast.core.EntryListener;
---
> import com.hazelcast.cluster.Cluster;
> import com.hazelcast.map.listener.EntryListener;
21,26c21,24
< import com.hazelcast.core.LifecycleEvent.LifecycleState;
< import com.hazelcast.core.LifecycleListener;
< import com.hazelcast.core.Member;
< import com.hazelcast.core.MemberAttributeEvent;
< import com.hazelcast.core.MembershipEvent;
< import com.hazelcast.core.MembershipListener;
---
> import com.hazelcast.cluster.Member;
> import com.hazelcast.cluster.MembershipEvent;
> import com.hazelcast.cluster.MembershipListener;
> import com.hazelcast.cluster.MemberAttributeEvent;
50a49,52
>  *
>  * Note: The implementation previously also handled Hazelcast lifecycle events by implementing LifecycleListener.
>  * With the new Hazelcast API, the LifecycleListener has been removed.  The functionality provided
>  * by the stateChanged(LifecycleEvent event) method remains in the class, but it is no longer an override.
52c54
< public class ClusterListener implements MembershipListener, LifecycleListener {
---
> public class ClusterListener implements MembershipListener {
76d77
< 
164d164
< 
198c198
<      *
---
>      * <p>
256,258c256,261
<     @SuppressWarnings("WeakerAccess")
<     public List<ClusterNodeInfo> getClusterNodesInfo() {
<         return new ArrayList<>(clusterNodesInfo.values());
---
>     public void memberAttributeChanged(final MemberAttributeEvent event) {
>         logger.info("Received a Hazelcast memberAttributeChanged event {}", event);
>         isSenior = isSeniorClusterMember();
>         final ClusterNodeInfo priorNodeInfo = clusterNodesInfo.get(ClusteredCacheFactory.getNodeID(event.getMember()));
>         clusterNodesInfo.put(ClusteredCacheFactory.getNodeID(event.getMember()),
>                 new HazelcastClusterNodeInfo(event.getMember(), priorNodeInfo.getJoinedTime()));
261c264
<     @Override
---
>     // Removed the @Override annotation because LifecycleListener is no longer part of the Hazelcast API.
263c266
<         if (event.getState().equals(LifecycleState.SHUTDOWN)) {
---
>         if (event.getState().equals(LifecycleEvent.LifecycleState.SHUTDOWN)) {
265c268
<         } else if (event.getState().equals(LifecycleState.STARTED)) {
---
>         } else if (event.getState().equals(LifecycleEvent.LifecycleState.STARTED)) {
270,276c273,274
<     @Override
<     public void memberAttributeChanged(final MemberAttributeEvent event) {
<         logger.info("Received a Hazelcast memberAttributeChanged event {}", event);
<         isSenior = isSeniorClusterMember();
<         final ClusterNodeInfo priorNodeInfo = clusterNodesInfo.get(ClusteredCacheFactory.getNodeID(event.getMember()));
<         clusterNodesInfo.put(ClusteredCacheFactory.getNodeID(event.getMember()),
<                 new HazelcastClusterNodeInfo(event.getMember(), priorNodeInfo.getJoinedTime()));
---
>     public List<ClusterNodeInfo> getClusterNodesInfo() {
>         return new ArrayList<>(clusterNodesInfo.values());
