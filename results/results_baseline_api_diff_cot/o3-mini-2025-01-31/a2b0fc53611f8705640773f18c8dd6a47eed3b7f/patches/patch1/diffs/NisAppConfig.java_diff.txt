3a4,5
> import org.flywaydb.core.api.configuration.ClassicConfiguration;
> import org.flywaydb.core.api.Location;
108,113c110,122
<                 final org.flywaydb.core.Flyway flyway = new Flyway();
<                 flyway.setDataSource(this.dataSource());
<                 flyway.setClassLoader(NisAppConfig.class.getClassLoader());
<                 flyway.setLocations(prop.getProperty("flyway.locations"));
<                 flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
<                 return flyway;
---
>                 ClassicConfiguration configuration = new ClassicConfiguration();
>                 configuration.setDataSource(this.dataSource());
>                 configuration.setClassLoader(NisAppConfig.class.getClassLoader());
> 
>                 String locationsStr = prop.getProperty("flyway.locations");
>                 String[] locationArray = locationsStr.split(",");
>                 List<Location> locationsList = new ArrayList<>();
>                 for (String loc : locationArray) {
>                         locationsList.add(new Location(loc.trim()));
>                 }
>                 configuration.setLocations(locationsList.toArray(new Location[locationsList.size()]));
>                 configuration.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
>                 return new Flyway(configuration);
