9a10
> import java.util.Optional;
11a13,14
> import org.spongepowered.api.command.Command;
> import org.spongepowered.api.command.CommandExecutor;
13,17c16,18
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.command.args.CommandContext;
< import org.spongepowered.api.command.args.GenericArguments;
< import org.spongepowered.api.command.spec.CommandExecutor;
< import org.spongepowered.api.command.spec.CommandSpec;
---
> import org.spongepowered.api.command.CommandCause;
> import org.spongepowered.api.command.parameter.CommandContext;
> import org.spongepowered.api.command.parameter.Parameter;
21,22d21
< import static org.spongepowered.api.command.args.GenericArguments.flags;
< import static org.spongepowered.api.command.args.GenericArguments.string;
36,39c35,39
<     @Override
<     public CommandResult execute(CommandSource src, CommandContext args) {
<         if (!(src instanceof Player)) {
<             plugin.sendMessage(src, "no-console");
---
>     public CommandResult execute(CommandContext args) {
>         CommandCause cause = args.cause();
>         Optional<Player> optionalPlayer = cause.first(Player.class);
>         if (!optionalPlayer.isPresent()) {
>             plugin.sendMessage(cause, "no-console");
43c43,44
<         UUID uniqueId = ((Player) src).getUniqueId();
---
>         Player receiver = optionalPlayer.get();
>         UUID uniqueId = receiver.getUniqueId();
45c46
<             plugin.sendMessage(src, "cooldown");
---
>             plugin.sendMessage(cause, "cooldown");
49,51c50,51
<         Player receiver = (Player) src;
<         String targetSkin = args.<String>getOne("skin").get();
<         boolean keepSkin = args.hasAny("keep");
---
>         String targetSkin = (String) args.one("skin").get();
>         boolean keepSkin = args.one("keep").map(o -> (Boolean) o).orElse(false);
60c60
<             if (core.getConfig().getBoolean("skinPermission") && !plugin.hasSkinPermission(src, targetUUID, true)) {
---
>             if (core.getConfig().getBoolean("skinPermission") && !plugin.hasSkinPermission(cause, targetUUID, true)) {
64,65c64,65
<             plugin.sendMessage(src, "skin-change-queue");
<             Runnable skinDownloader = new SkinDownloader(plugin, src, receiver, targetUUID, keepSkin);
---
>             plugin.sendMessage(cause, "skin-change-queue");
>             Runnable skinDownloader = new SkinDownloader(plugin, cause, receiver, targetUUID, keepSkin);
70c70
<         Runnable nameResolver = new NameResolver(plugin, src, targetSkin, receiver, keepSkin);
---
>         Runnable nameResolver = new NameResolver(plugin, cause, targetSkin, receiver, keepSkin);
75,77c75,76
<     @Override
<     public CommandSpec buildSpec() {
<         return CommandSpec.builder()
---
>     public Command buildSpec() {
>         return Command.builder()
79,81c78,79
<                 .arguments(
<                         string(of("skin")),
<                         flags().flag("keep").buildWith(GenericArguments.none()))
---
>                 .addParameter(Parameter.string().key("skin").build())
>                 .addParameter(Parameter.builder(Boolean.class).key("keep").optional().build())
