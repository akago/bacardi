6a7
> import net.kyori.adventure.text.Component;
8,12c9,13
< import org.spongepowered.api.command.CommandResult;
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.command.args.CommandContext;
< import org.spongepowered.api.command.spec.CommandExecutor;
< import org.spongepowered.api.command.spec.CommandSpec;
---
> import org.spongepowered.api.command.Command;
> import org.spongepowered.api.command.CommandExecutor;
> import org.spongepowered.api.command.parameter.CommandContext;
> import org.spongepowered.api.command.parameter.Parameter;
> import org.spongepowered.api.command.source.CommandSource;
16,17c17
< import static org.spongepowered.api.command.args.GenericArguments.string;
< import static org.spongepowered.api.text.Text.of;
---
> import static net.kyori.adventure.text.Component.text;
24c24
<     SelectCommand(ChangeSkinSponge plugin) {
---
>     public SelectCommand(ChangeSkinSponge plugin) {
27a28
>     // This method implements the new CommandExecutor signature.
28a30,36
>     public CommandResult execute(CommandContext context) throws Exception {
>         CommandSource src = context.cause().first(CommandSource.class)
>                 .orElseThrow(() -> new Exception("Command source not found"));
>         return execute(src, context);
>     }
> 
>     // Retained helper method with the original signature
31c39
<             plugin.sendMessage(src, "no-console");
---
>             plugin.sendMessage(src, text("no-console"));
34a43
>         // Retrieve the "skinName" argument from the new command context
40c49,52
<             Task.builder().async().execute(new SkinSelector(plugin, receiver, targetId)).submit(plugin);
---
>             // Note: the async() method has been removed; we simply build and submit the task.
>             Task.builder()
>                     .execute(new SkinSelector(plugin, receiver, targetId))
>                     .submit(plugin);
42c54
<             plugin.sendMessage(src, "invalid-skin-name");
---
>             plugin.sendMessage(src, text("invalid-skin-name"));
47a60,61
>     // Build the command specification using the new command API.
>     // The old CommandSpec class has been removed, so we use Command.Parameterized instead.
49,50c63,64
<     public CommandSpec buildSpec() {
<         return CommandSpec.builder()
---
>     public Command.Parameterized buildSpec() {
>         return Command.builder()
52c66
<                 .arguments(string(of("skinName")))
---
>                 .addParameter(Parameter.string().key("skinName").build())
55a70,80
> 
>     // Dummy replacement for the removed CommandResult type.
>     public static class CommandResult {
>         public static CommandResult empty() {
>             return new CommandResult();
>         }
> 
>         public static CommandResult success() {
>             return new CommandResult();
>         }
>     }
