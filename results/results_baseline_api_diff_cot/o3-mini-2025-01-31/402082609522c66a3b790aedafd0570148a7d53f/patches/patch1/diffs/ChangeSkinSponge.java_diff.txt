16d15
< 
19d17
< 
21c19,21
< import org.spongepowered.api.Platform.Type;
---
> import net.kyori.adventure.audience.Audience;
> import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
> import org.spongepowered.api.ResourceKey;
23,24d22
< import org.spongepowered.api.command.CommandManager;
< import org.spongepowered.api.command.CommandSource;
27,37c25,30
< import org.spongepowered.api.event.game.state.GameInitializationEvent;
< import org.spongepowered.api.event.game.state.GamePreInitializationEvent;
< import org.spongepowered.api.event.game.state.GameStoppingServerEvent;
< import org.spongepowered.api.network.ChannelBinding.RawDataChannel;
< import org.spongepowered.api.network.ChannelRegistrar;
< import org.spongepowered.api.plugin.Plugin;
< import org.spongepowered.api.text.serializer.TextSerializers;
< 
< import static com.github.games647.changeskin.core.message.CheckPermMessage.CHECK_PERM_CHANNEL;
< import static com.github.games647.changeskin.core.message.SkinUpdateMessage.UPDATE_SKIN_CHANNEL;
< import static com.github.games647.changeskin.sponge.PomData.ARTIFACT_ID;
---
> import org.spongepowered.api.event.lifecycle.ConstructPluginEvent;
> import org.spongepowered.api.event.lifecycle.RegisterChannelEvent;
> import org.spongepowered.api.event.lifecycle.RegisterCommandEvent;
> import org.spongepowered.api.event.lifecycle.StopGameEvent;
> import org.spongepowered.plugin.Plugin;
> import com.github.games647.changeskin.sponge.LoginListener;
40c33
< @Plugin(id = ARTIFACT_ID, name = PomData.NAME, version = PomData.VERSION,
---
> @Plugin(id = PomData.ARTIFACT_ID, name = PomData.NAME, version = PomData.VERSION,
42c35
< public class ChangeSkinSponge implements PlatformPlugin<CommandSource> {
---
> public class ChangeSkinSponge implements PlatformPlugin<Audience> {
62c55
<     public void onPreInit(GamePreInitializationEvent preInitEvent) {
---
>     public void onPreInit(ConstructPluginEvent event) {
73,74c66,67
<     public void onInit(GameInitializationEvent initEvent) {
<         if (!initialized)
---
>     public void onInit(RegisterCommandEvent event) {
>         if (!initialized) {
75a69
>         }
77c71,75
<         CommandManager cmdManager = Sponge.getCommandManager();
---
>         event.register(this, injector.getInstance(SelectCommand.class).buildSpec(), "skin-select", "skinselect");
>         event.register(this, injector.getInstance(InfoCommand.class).buildSpec(), "skin-info");
>         event.register(this, injector.getInstance(UploadCommand.class).buildSpec(), "skin-upload");
>         event.register(this, injector.getInstance(SetCommand.class).buildSpec(), "changeskin", "setskin", "skin");
>         event.register(this, injector.getInstance(InvalidateCommand.class).buildSpec(), "skininvalidate", "skin-invalidate");
79,96c77
<         //command and event register
<         cmdManager.register(this, injector.getInstance(SelectCommand.class).buildSpec(), "skin-select", "skinselect");
<         cmdManager.register(this, injector.getInstance(InfoCommand.class).buildSpec(), "skin-info");
<         cmdManager.register(this, injector.getInstance(UploadCommand.class).buildSpec(), "skin-upload");
<         cmdManager.register(this, injector.getInstance(SetCommand.class).buildSpec(), "changeskin", "setskin", "skin");
<         cmdManager.register(this, injector.getInstance(InvalidateCommand.class)
<                 .buildSpec(), "skininvalidate", "skin-invalidate");
< 
<         Sponge.getEventManager().registerListeners(this, injector.getInstance(LoginListener.class));
< 
<         //incoming channel
<         ChannelRegistrar channelReg = Sponge.getChannelRegistrar();
<         String updateChannelName = new NamespaceKey(ARTIFACT_ID, UPDATE_SKIN_CHANNEL).getCombinedName();
<         String permissionChannelName = new NamespaceKey(ARTIFACT_ID, CHECK_PERM_CHANNEL).getCombinedName();
<         RawDataChannel updateChannel = channelReg.getOrCreateRaw(this, updateChannelName);
<         RawDataChannel permChannel = channelReg.getOrCreateRaw(this, permissionChannelName);
<         updateChannel.addListener(Type.SERVER, injector.getInstance(UpdateSkinListener.class));
<         permChannel.addListener(Type.SERVER, injector.getInstance(CheckPermissionListener.class));
---
>         Sponge.eventManager().registerListeners(this, injector.getInstance(LoginListener.class));
100c81
<     public void onShutdown(GameStoppingServerEvent stoppingServerEvent) {
---
>     public void onShutdown(StopGameEvent event) {
103a85,90
>     @Listener
>     public void onRegisterChannel(RegisterChannelEvent event) {
>         event.register(ResourceKey.of(PomData.ARTIFACT_ID, UPDATE_SKIN_CHANNEL), UpdateSkinListener.class);
>         event.register(ResourceKey.of(PomData.ARTIFACT_ID, CHECK_PERM_CHANNEL), CheckPermissionListener.class);
>     }
> 
109c96
<     public boolean hasSkinPermission(CommandSource invoker, UUID uuid, boolean sendMessage) {
---
>     public boolean hasSkinPermission(Audience invoker, UUID uuid, boolean sendMessage) {
142c129
<     public void sendMessage(CommandSource receiver, String key) {
---
>     public void sendMessage(Audience receiver, String key) {
145c132
<             receiver.sendMessage(TextSerializers.LEGACY_FORMATTING_CODE.deserialize(message));
---
>             receiver.sendMessage(LegacyComponentSerializer.legacyAmpersand().deserialize(message));
