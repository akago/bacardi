4d3
< import ch.qos.logback.classic.Logger;
32a32,33
> import java.lang.reflect.InvocationTargetException;
> import java.lang.reflect.Method;
82a84
>     
84a87
>     
111,113c114,128
<         Logger logger = (Logger) LoggerFactory.getLogger(EventMessageHandler.class);
<         logger.setLevel(Level.INFO);
<         logger.addAppender(mockLogAppender);
---
>         /*
>          * In previous versions the test configured the logger by casting it to
>          * ch.qos.logback.classic.Logger. With the new dependency update this type has been removed.
>          * Instead we use reflection on the logger returned by LoggerFactory so that we can
>          * still call setLevel and addAppender without a compile-time dependency on the removed type.
>          */
>         org.slf4j.Logger slf4jLogger = LoggerFactory.getLogger(EventMessageHandler.class);
>         try {
>             Method setLevelMethod = slf4jLogger.getClass().getMethod("setLevel", Level.class);
>             setLevelMethod.invoke(slf4jLogger, Level.INFO);
>             Method addAppenderMethod = slf4jLogger.getClass().getMethod("addAppender", Appender.class);
>             addAppenderMethod.invoke(slf4jLogger, mockLogAppender);
>         } catch (NoSuchMethodException | IllegalAccessException | InvocationTargetException e) {
>             throw new RuntimeException("Failed to configure logger", e);
>         }
