1,18d0
< /**
<  * Copyright (C) 2014 Premium Minds.
<  *
<  * This file is part of wicket-crudifier.
<  *
<  * wicket-crudifier is free software: you can redistribute it and/or modify it under
<  * the terms of the GNU Lesser General Public License as published by the Free
<  * Software Foundation, either version 3 of the License, or (at your option) any
<  * later version.
<  *
<  * wicket-crudifier is distributed in the hope that it will be useful, but WITHOUT ANY
<  * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
<  * A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
<  * details.
<  *
<  * You should have received a copy of the GNU Lesser General Public License
<  * along with wicket-crudifier. If not, see <http://www.gnu.org/licenses/>.
<  */
37,44c19,24
< import javax.validation.Validator;
< import javax.validation.constraints.NotBlank;
< import javax.validation.constraints.NotEmpty;
< import javax.validation.constraints.NotNull;
< import javax.validation.metadata.BeanDescriptor;
< import javax.validation.metadata.ConstraintDescriptor;
< import javax.validation.metadata.ElementDescriptor;
< 
---
> import jakarta.validation.Validator;
> import jakarta.validation.constraints.NotBlank;
> import jakarta.validation.constraints.NotEmpty;
> import jakarta.validation.constraints.NotNull;
> import jakarta.validation.metadata.BeanDescriptor;
> import jakarta.validation.metadata.ConstraintDescriptor;
133c113
<                         ElementDescriptor constraintDescriptor = constraintDescriptors.getConstraintsForProperty(descriptor.getName());
---
>                         jakarta.validation.metadata.PropertyDescriptor constraintDescriptor = constraintDescriptors.getConstraintsForProperty(descriptor.getName());
155,156c135,138
<                                                 if(objectProperty.type.isEnum()) typesControlGroup = EnumControlGroup.class;
<                                                 else typesControlGroup = ObjectChoiceControlGroup.class;
---
>                                                 if (objectProperty.type.isEnum())
>                                                         typesControlGroup = EnumControlGroup.class;
>                                                 else
>                                                         typesControlGroup = ObjectChoiceControlGroup.class;
161c143,144
<                                         controlGroup = (AbstractControlGroup<?>) constructor.newInstance(view.newChildId(), new PropertyModel<Object>(ListControlGroups.this.getModel(), objectProperty.name));
---
>                                         controlGroup = (AbstractControlGroup<?>) constructor.newInstance(view.newChildId(),
>                                                         new PropertyModel<Object>(ListControlGroups.this.getModel(), objectProperty.name));
165d147
< 
183,187c165,169
<                                         controlGroup = controlGroupProviders
<                                                         .get(objectProperty.type)
<                                                         .createControlGroup(view.newChildId()
<                                                                         , new PropertyModel<Object>(ListControlGroups.this.getModel(), objectProperty.name)
<                                                                         , objectProperty.name, getResourceBase(), objectProperty.required, objectProperty.type, entitySettings);
---
>                                         controlGroup = controlGroupProviders.get(objectProperty.type)
>                                                         .createControlGroup(view.newChildId(),
>                                                                         new PropertyModel<Object>(ListControlGroups.this.getModel(), objectProperty.name),
>                                                                         objectProperty.name, getResourceBase(), objectProperty.required, objectProperty.type,
>                                                                         entitySettings);
226c208,209
<                         if(type.isAssignableFrom(mapType)) return typesControlGroups.get(mapType);
---
>                         if (type.isAssignableFrom(mapType))
>                                 return typesControlGroups.get(mapType);
