12,17c12,15
< import javax.mvc.Controller;
< import javax.mvc.Models;
< import javax.mvc.View;
< import javax.mvc.binding.BindingResult;
< import javax.mvc.binding.ParamError;
< import javax.mvc.security.CsrfProtected;
---
> import jakarta.mvc.Controller;
> import jakarta.mvc.Models;
> import jakarta.mvc.View;
> import jakarta.mvc.security.CsrfProtected;
43,44c41,43
<     @Inject
<     private BindingResult validationResult;
---
>     // Removed BindingResult and ParamError because these classes were removed in the new API.
>     // @Inject
>     // private BindingResult validationResult;
66d64
< 
90d87
<     //@ValidateOnExecution(type = ExecutableType.NONE)
94,105c91
<         if (validationResult.isFailed()) {
<             AlertMessage alert = AlertMessage.danger("Validation voilations!");
<             validationResult.getAllErrors()
<                     .stream()
<                     .forEach((ParamError t) -> {
<                         alert.addError(t.getParamName(), "", t.getMessage());
<                     });
<             models.put("errors", alert);
<             models.put("task", form);
<             return Response.status(BAD_REQUEST).entity("add.xhtml").build();
<         }
< 
---
>         // Removed the previous validation handling as BindingResult is no longer available.
138,149c124
<         if (validationResult.isFailed()) {
<             AlertMessage alert = AlertMessage.danger("Validation voilations!");
<             validationResult.getAllErrors()
<                     .stream()
<                     .forEach((ParamError t) -> {
<                         alert.addError(t.getParamName(), "", t.getMessage());
<                     });
<             models.put("errors", alert);
<             models.put("task", form);
<             return Response.status(BAD_REQUEST).entity("edit.xhtml").build();
<         }
< 
---
>         // Removed the previous validation handling as BindingResult is no longer available.
164d138
<     //@CsrfProtected
