7a8
> import com.pubnub.api.UserId;
11,17c12
< import com.pubnub.api.models.consumer.pubsub.PNMessageResult;
< import com.pubnub.api.models.consumer.pubsub.PNPresenceEventResult;
< import com.pubnub.api.models.consumer.pubsub.PNSignalResult;
< import com.pubnub.api.models.consumer.pubsub.message_actions.PNMessageActionResult;
< import com.pubnub.api.models.consumer.pubsub.objects.PNMembershipResult;
< import com.pubnub.api.models.consumer.pubsub.objects.PNSpaceResult;
< import com.pubnub.api.models.consumer.pubsub.objects.PNUserResult;
---
> import com.pubnub.api.models.consumer.pubsub.files.PNFileEventResult;
40c35
<     PNConfiguration pnConfiguration = new PNConfiguration();
---
>     PNConfiguration pnConfiguration = new PNConfiguration(new UserId(publicKey));
47,50c42,43
<     return Completable.create(
<         e -> {
<           pubnub.addListener(
<               new SubscribeCallback() {
---
>     return Completable.create(e -> {
>       pubnub.addListener(new SubscribeCallback() {
54,57c47
<                   LOG.debug(
<                       "PubNub status: {} {}",
<                       pnStatusCategory.toString(),
<                       pnStatus.getStatusCode());
---
>           LOG.debug("PubNub status: {} {}", pnStatusCategory.toString(), pnStatus.getStatusCode());
66,111c56,57
<                 public void message(PubNub pubNub, PNMessageResult pnMessageResult) {
<                   String channelName = pnMessageResult.getChannel();
<                   ObservableEmitter<JsonNode> subscription = subscriptions.get(channelName);
<                   LOG.debug("PubNub Message: {}", pnMessageResult.toString());
<                   if (subscription != null) {
<                     JsonNode jsonMessage = null;
<                     try {
<                       jsonMessage = mapper.readTree(pnMessageResult.getMessage().toString());
<                     } catch (IOException ex) {
<                       ex.printStackTrace();
<                     }
<                     subscription.onNext(jsonMessage);
<                   } else {
<                     LOG.debug("No subscriber for channel {}.", channelName);
<                   }
<                 }
< 
<                 @Override
<                 public void presence(PubNub pubNub, PNPresenceEventResult pnPresenceEventResult) {
<                   LOG.debug("PubNub presence: {}", pnPresenceEventResult.toString());
<                 }
< 
<                 @Override
<                 public void signal(PubNub pubnub, PNSignalResult pnSignalResult) {
<                   LOG.debug("PubNub signal: {}", pnSignalResult.toString());
<                 }
< 
<                 @Override
<                 public void user(PubNub pubnub, PNUserResult pnUserResult) {
<                   LOG.debug("PubNub user: {}", pnUserResult.toString());
<                 }
< 
<                 @Override
<                 public void space(PubNub pubnub, PNSpaceResult pnSpaceResult) {
<                   LOG.debug("PubNub space: {}", pnSpaceResult.toString());
<                 }
< 
<                 @Override
<                 public void membership(PubNub pubnub, PNMembershipResult pnMembershipResult) {
<                   LOG.debug("PubNub membership: {}", pnMembershipResult.toString());
<                 }
< 
<                 @Override
<                 public void messageAction(
<                     PubNub pubnub, PNMessageActionResult pnMessageActionResult) {
<                   LOG.debug("PubNub messageAction: {}", pnMessageActionResult.toString());
---
>         public void file(PubNub pubnub, PNFileEventResult pnFileEventResult) {
>           LOG.debug("PubNub file event: {}", pnFileEventResult.toString());
120,121c66
<     return Observable.<JsonNode>create(
<             e -> {
---
>     return Observable.<JsonNode>create(e -> {
128,129c73
<         .doOnDispose(
<             () -> {
---
>     .doOnDispose(() -> {
137,138c81
<     return Completable.create(
<         completable -> {
---
>     return Completable.create(completable -> {
