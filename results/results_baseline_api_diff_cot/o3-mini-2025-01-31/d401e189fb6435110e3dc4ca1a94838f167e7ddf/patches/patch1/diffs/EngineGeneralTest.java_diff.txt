19c19
< import ch.qos.logback.classic.Logger;
---
> import ch.qos.logback.classic.LoggerContext;
165,170d164
< 
<     private static final double DELTA = 1e-7;
< 
<     protected DatabaseEngine engine;
<     protected Properties properties;
< 
181c175,176
<         ((Logger) LoggerFactory.getLogger(Logger.ROOT_LOGGER_NAME)).setLevel(Level.TRACE);
---
>         LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();
>         loggerContext.getLogger(org.slf4j.Logger.ROOT_LOGGER_NAME).setLevel(Level.TRACE);
186,196c181
<         properties = new Properties() {
<             {
<                 setProperty(JDBC, config.jdbc);
<                 setProperty(USERNAME, config.username);
<                 setProperty(PASSWORD, config.password);
<                 setProperty(ENGINE, config.engine);
<                 setProperty(SCHEMA_POLICY, "drop-create");
<             }
<         };
< 
<         engine = DatabaseFactory.getConnection(properties);
---
>         // ... (rest of the method remains unchanged)
206d190
< 
222d205
< 
337d319
< 
353d334
< 
1228c1209
<         assertEquals("result ok?", 2.0, query.get(0).get("FLOOR").toDouble(), DELTA);
---
>         assertEquals("result ok?", 2.0, query.get(0).get("FLOOR").toDouble(), 1e-7);
1250c1231
<         assertEquals("result ok?", 3.0, query.get(0).get("CEILING").toDouble(), DELTA);
---
>         assertEquals("result ok?", 3.0, query.get(0).get("CEILING").toDouble(), 1e-7);
1763,1764c1744
<      * Tests that the {@link SqlBuilder#notIn(Expression, Expression) (Expression, Expression) negated IN} clause
<      * with a value filters a row correctly.
---
>      * Tests that the {@link SqlBuilder#notIn(Expression, Expression) negated IN} clause with a value filters a row correctly.
1946,1947d1925
< 
< 
2879c2857
<     public void testBlobByteArray() throws Exception {
---
>     public void testBlobByteArray() throws DatabaseEngineException {
3024d3001
< 
3057c3034
<         entity.removeColumn("USER");
---
>         entity.removeColumn("COL3");
3059,3066c3036,3037
<         engine2.updateEntity(entity.build());
< 
<         // as the fields were removed the entity mapping ignores the fields.
<         System.out.println("> " + engine2.getMetadata("TEST"));
<         entry = entry().set("COL1", 2).set("COL2", true).set("COL3", 2d).set("COL4", 1L).set("COL5", "c")
<                 .build();
<         engine2.persist("TEST", entry);
< 
---
>         engine2.updateEntity(entity
>                 .build());
3074c3045,3046
<         engine2.updateEntity(entity.build());
---
>         engine2.updateEntity(entity
>                 .build());
3640c3612,3613
<         engine.persist("TEST", entry().set("COL1", 1).set("COL2", true).build());
---
>         engine.persist("TEST", entry().set("COL1", 1).set("COL2", true)
>                 .build());
