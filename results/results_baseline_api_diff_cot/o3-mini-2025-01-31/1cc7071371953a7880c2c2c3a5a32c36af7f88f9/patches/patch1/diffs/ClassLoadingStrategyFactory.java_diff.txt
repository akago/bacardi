1,12d0
< /*
<  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
<  * the License. You may obtain a copy of the License at
<  *
<  * http://www.apache.org/licenses/LICENSE-2.0
<  *
<  * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
<  * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
<  * specific language governing permissions and limitations under the License.
<  *
<  * Copyright 2017-2022 the original author or authors.
<  */
16,17c4
< import org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector;
< import org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy;
---
> import net.bytebuddy.dynamic.loading.ClassLoadingStrategy;
30c17,18
<         if (ClassInjector.UsingReflection.isAvailable()) {
---
>         // The previous dynamic strategies using ClassInjector have been removed from the dependency.
>         // We now always return ByteBuddyâ€™s default injection strategy.
32,40d19
<         } else if (ClassInjector.UsingLookup.isAvailable() && PRIVATE_LOOKUP_IN != null) {
<             try {
<                 return ClassLoadingStrategy.UsingLookup.of(PRIVATE_LOOKUP_IN.invoke(null, assertClass, LOOKUP));
<             } catch (Exception e) {
<                 throw new IllegalStateException("Could not access package of " + assertClass, e);
<             }
<         } else {
<             throw new IllegalStateException("No code generation strategy available");
<         }
