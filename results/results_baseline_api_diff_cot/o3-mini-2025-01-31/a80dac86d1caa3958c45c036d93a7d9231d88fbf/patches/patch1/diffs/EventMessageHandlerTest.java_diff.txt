4c4
< import ch.qos.logback.classic.Logger;
---
> import ch.qos.logback.classic.LoggerContext;
111,113c111,118
<         Logger logger = (Logger) LoggerFactory.getLogger(EventMessageHandler.class);
<         logger.setLevel(Level.INFO);
<         logger.addAppender(mockLogAppender);
---
>         LoggerContext loggerContext = (LoggerContext) LoggerFactory.getILoggerFactory();
>         Object logger = loggerContext.getLogger(EventMessageHandler.class.getName());
>         try {
>             logger.getClass().getMethod("setLevel", Level.class).invoke(logger, Level.INFO);
>             logger.getClass().getMethod("addAppender", Appender.class).invoke(logger, mockLogAppender);
>         } catch (Exception e) {
>             throw new RuntimeException("Failed to configure logger", e);
>         }
