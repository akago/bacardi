25,28d24
< import com.google.api.services.translate.Translate;
< import com.google.api.services.translate.model.DetectionsResourceItems;
< import com.google.api.services.translate.model.LanguagesResource;
< import com.google.api.services.translate.model.TranslationsResource;
32d27
< import com.google.common.base.Function;
35a31
> import java.util.ArrayList;
38a35,44
> // New v3 API imports
> import com.google.api.services.translate.v3.Translate;
> import com.google.api.services.translate.v3.model.DetectLanguageRequest;
> import com.google.api.services.translate.v3.model.DetectLanguageResponse;
> import com.google.api.services.translate.v3.model.SupportedLanguages;
> import com.google.api.services.translate.v3.model.SupportedLanguages.Language;
> import com.google.api.services.translate.v3.model.TranslateTextRequest;
> import com.google.api.services.translate.v3.model.TranslateTextResponse;
> import com.google.api.services.translate.v3.model.Translation;
> 
42a49
>   private static final String PARENT = "projects/-/locations/global";
61c68
<     GenericUrl genericUrl = new GenericUrl(translate.getBaseUrl() + "v2/" + path);
---
>     GenericUrl genericUrl = new GenericUrl(translate.getBaseUrl() + "v3/" + path);
71,73c78,95
<       List<List<DetectionsResourceItems>> detections =
<           translate.detections().list(texts).setKey(options.getApiKey()).execute().getDetections();
<       return detections != null ? detections : ImmutableList.<List<DetectionsResourceItems>>of();
---
>       List<List<DetectionsResourceItems>> detectionsResult = new ArrayList<>();
>       for (String text : texts) {
>         DetectLanguageRequest request = new DetectLanguageRequest();
>         request.setContent(text);
>         DetectLanguageResponse response =
>             translate
>                 .projects()
>                 .locations()
>                 .detectLanguage(PARENT, request)
>                 .setKey(options.getApiKey())
>                 .execute();
>         DetectionsResourceItems item = new DetectionsResourceItems();
>         item.setLanguage(response.getLanguage());
>         List<DetectionsResourceItems> innerList = new ArrayList<>();
>         innerList.add(item);
>         detectionsResult.add(innerList);
>       }
>       return detectionsResult != null ? detectionsResult : ImmutableList.<List<DetectionsResourceItems>>of();
82c104
<       List<LanguagesResource> languages =
---
>       SupportedLanguages response =
84,85c106,108
<               .languages()
<               .list()
---
>               .projects()
>               .locations()
>               .getSupportedLanguages(PARENT)
87,92c110,120
<               .setTarget(
<                   firstNonNull(
<                       Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage()))
<               .execute()
<               .getLanguages();
<       return languages != null ? languages : ImmutableList.<LanguagesResource>of();
---
>               .setTarget(firstNonNull(Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage()))
>               .execute();
>       List<LanguagesResource> languagesResult = new ArrayList<>();
>       if (response.getLanguages() != null) {
>         for (Language lang : response.getLanguages()) {
>           LanguagesResource lr = new LanguagesResource();
>           lr.setLanguage(lang.getLanguageCode());
>           languagesResult.add(lr);
>         }
>       }
>       return languagesResult != null ? languagesResult : ImmutableList.<LanguagesResource>of();
101,102c129
<       String targetLanguage =
<           firstNonNull(Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage());
---
>       String targetLanguage = firstNonNull(Option.TARGET_LANGUAGE.getString(optionMap), options.getTargetLanguage());
104c131,149
<       List<TranslationsResource> translations =
---
>       TranslateTextRequest request = new TranslateTextRequest();
>       request.setContents(texts);
>       request.setTargetLanguageCode(targetLanguage);
>       if (sourceLanguage != null) {
>         request.setSourceLanguageCode(sourceLanguage);
>       }
>       String model = Option.MODEL.getString(optionMap);
>       if (model != null) {
>         request.setModel(model);
>       }
>       String format = Option.FORMAT.getString(optionMap);
>       if (format != null) {
>         if ("html".equalsIgnoreCase(format)) {
>           request.setMimeType("text/html");
>         } else {
>           request.setMimeType("text/plain");
>         }
>       }
>       TranslateTextResponse response =
106,108c151,153
<               .translations()
<               .list(texts, targetLanguage)
<               .setSource(sourceLanguage)
---
>               .projects()
>               .locations()
>               .translateText(PARENT, request)
110,120c155,165
<               .setModel(Option.MODEL.getString(optionMap))
<               .setFormat(Option.FORMAT.getString(optionMap))
<               .execute()
<               .getTranslations();
<       return Lists.transform(
<           translations != null ? translations : ImmutableList.<TranslationsResource>of(),
<           new Function<TranslationsResource, TranslationsResource>() {
<             @Override
<             public TranslationsResource apply(TranslationsResource translationsResource) {
<               if (translationsResource.getDetectedSourceLanguage() == null) {
<                 translationsResource.setDetectedSourceLanguage(sourceLanguage);
---
>               .execute();
>       List<TranslationsResource> translationsResult = new ArrayList<>();
>       if (response.getTranslations() != null) {
>         for (Translation t : response.getTranslations()) {
>           TranslationsResource tr = new TranslationsResource();
>           tr.setTranslatedText(t.getTranslatedText());
>           String detected = t.getDetectedLanguageCode();
>           if (detected == null) {
>             tr.setDetectedSourceLanguage(sourceLanguage);
>           } else {
>             tr.setDetectedSourceLanguage(detected);
122c167
<               return translationsResource;
---
>           translationsResult.add(tr);
124c169,170
<           });
---
>       }
>       return translationsResult != null ? translationsResult : ImmutableList.<TranslationsResource>of();
128a175,211
> 
>   public static class DetectionsResourceItems {
>     private String language;
>     public String getLanguage() {
>       return language;
>     }
>     public void setLanguage(String language) {
>       this.language = language;
>     }
>   }
> 
>   public static class LanguagesResource {
>     private String language;
>     public String getLanguage() {
>       return language;
>     }
>     public void setLanguage(String language) {
>       this.language = language;
>     }
>   }
> 
>   public static class TranslationsResource {
>     private String translatedText;
>     private String detectedSourceLanguage;
>     public String getTranslatedText() {
>       return translatedText;
>     }
>     public void setTranslatedText(String translatedText) {
>       this.translatedText = translatedText;
>     }
>     public String getDetectedSourceLanguage() {
>       return detectedSourceLanguage;
>     }
>     public void setDetectedSourceLanguage(String detectedSourceLanguage) {
>       this.detectedSourceLanguage = detectedSourceLanguage;
>     }
>   }
