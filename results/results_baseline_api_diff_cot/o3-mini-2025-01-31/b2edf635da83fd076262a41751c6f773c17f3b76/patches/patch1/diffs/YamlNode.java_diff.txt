29d28
< import org.yaml.snakeyaml.constructor.Constructor;
41,67d39
< /**
<  * Serializes to the following
<  * 
<  * <pre>
<  *       id: cluster-1
<  *       name: cluster-1
<  *       description: xyz
<  *       hostname: cluster-1.mydomain.com
<  *       location_id: virginia
<  *       os_arch: x86
<  *       os_family: linux
<  *       os_description: redhat
<  *       os_version: 5.3
<  *       os_64bit: 5.3
<  *       login_port: 2022
<  *       group: hadoop
<  *       tags:
<  *           - vanilla
<  *       metadata:
<  *           key1: val1
<  *       username: kelvin
<  *       credential: password_or_rsa
<  *         or
<  *       credential_url: password_or_rsa_file ex. resource:///id_rsa will get the classpath /id_rsa; file://path/to/id_rsa
<  *       sudo_password: password
<  * </pre>
<  */
93,98c65,84
<          return Node.builder().id(arg0.id).name(arg0.name).description(arg0.description).locationId(arg0.location_id)
<                   .hostname(arg0.hostname).osArch(arg0.os_arch).osFamily(arg0.os_family).osDescription(
<                            arg0.os_description).osVersion(arg0.os_version).os64Bit(arg0.os_64bit).group(arg0.group)
<                   .loginPort(arg0.login_port).tags(arg0.tags).metadata(arg0.metadata).username(arg0.username).credential(arg0.credential).credentialUrl(
<                            arg0.credential_url != null ? URI.create(arg0.credential_url) : null).sudoPassword(
<                            arg0.sudo_password).build();
---
>          return Node.builder()
>                   .id(arg0.id)
>                   .name(arg0.name)
>                   .description(arg0.description)
>                   .locationId(arg0.location_id)
>                   .hostname(arg0.hostname)
>                   .osArch(arg0.os_arch)
>                   .osFamily(arg0.os_family)
>                   .osDescription(arg0.os_description)
>                   .osVersion(arg0.os_version)
>                   .os64Bit(arg0.os_64bit)
>                   .group(arg0.group)
>                   .loginPort(arg0.login_port)
>                   .tags(arg0.tags)
>                   .metadata(arg0.metadata)
>                   .username(arg0.username)
>                   .credential(arg0.credential)
>                   .credentialUrl(arg0.credential_url != null ? URI.create(arg0.credential_url) : null)
>                   .sudoPassword(arg0.sudo_password)
>                   .build();
114c100
<             return (YamlNode) new Yaml(new Constructor(YamlNode.class)).load(in);
---
>             return new Yaml().loadAs(in, YamlNode.class);
