3,6d2
< import ch.qos.logback.classic.Level;
< import ch.qos.logback.classic.Logger;
< import ch.qos.logback.classic.spi.ILoggingEvent;
< import ch.qos.logback.core.Appender;
83,86d78
<     @Mock
<     private Appender<ILoggingEvent> mockLogAppender;
<     @Captor
<     ArgumentCaptor<ILoggingEvent> loggingEventArgumentCaptor;
99c91,97
<         eventMessageHandler = new EventMessageHandler(mockEventSubscriberQueue, mockLedgerService, mockNotificationService, mockServiceFinder, mockUserServices, objectMapper);
---
>         eventMessageHandler = new EventMessageHandler(
>                 mockEventSubscriberQueue,
>                 mockLedgerService,
>                 mockNotificationService,
>                 mockServiceFinder,
>                 mockUserServices,
>                 objectMapper);
110,113c108
< 
<         Logger logger = (Logger) LoggerFactory.getLogger(EventMessageHandler.class);
<         logger.setLevel(Level.INFO);
<         logger.addAppender(mockLogAppender);
---
>         // Removed logback-specific logger configuration.
120c115,118
<                 .withEventDetails(objectMapper.valueToTree(Map.of("amount", 21000L, "evidence_due_date", "2022-03-07T13:00:00.001Z", "gateway_account_id", gatewayAccountId)))
---
>                 .withEventDetails(objectMapper.valueToTree(Map.of(
>                         "amount", 21000L,
>                         "evidence_due_date", "2022-03-07T13:00:00.001Z",
>                         "gateway_account_id", gatewayAccountId)))
141c139,143
<                 .withEventDetails(objectMapper.valueToTree(Map.of("amount", 21000L, "evidence_due_date", "2022-03-07T13:00:00.001Z", "gateway_account_id", gatewayAccountId, "reason", "fraudulent")))
---
>                 .withEventDetails(objectMapper.valueToTree(Map.of(
>                         "amount", 21000L,
>                         "evidence_due_date", "2022-03-07T13:00:00.001Z",
>                         "gateway_account_id", gatewayAccountId,
>                         "reason", "fraudulent")))
154c156,157
<         verify(mockNotificationService, atMostOnce()).sendStripeDisputeCreatedEmail(adminEmailsCaptor.capture(), personalisationCaptor.capture());
---
>         verify(mockNotificationService, atMostOnce())
>                 .sendStripeDisputeCreatedEmail(adminEmailsCaptor.capture(), personalisationCaptor.capture());
176,181d178
< 
<         verify(mockLogAppender, times(2)).doAppend(loggingEventArgumentCaptor.capture());
< 
<         List<ILoggingEvent> logStatement = loggingEventArgumentCaptor.getAllValues();
<         assertThat(logStatement.get(0).getFormattedMessage(), Is.is("Retrieved event queue message with id [queue-message-id] for resource external id [a-resource-external-id]"));
<         assertThat(logStatement.get(1).getFormattedMessage(), Is.is("Processed notification email for disputed transaction"));
189c186,190
<                 .withEventDetails(objectMapper.valueToTree(Map.of("net_amount", -4000L, "fee", 1500L, "amount", 2500L, "gateway_account_id", gatewayAccountId)))
---
>                 .withEventDetails(objectMapper.valueToTree(Map.of(
>                         "net_amount", -4000L,
>                         "fee", 1500L,
>                         "amount", 2500L,
>                         "gateway_account_id", gatewayAccountId)))
203c204,205
<         verify(mockNotificationService, atMostOnce()).sendStripeDisputeLostEmail(adminEmailsCaptor.capture(), personalisationCaptor.capture());
---
>         verify(mockNotificationService, atMostOnce())
>                 .sendStripeDisputeLostEmail(adminEmailsCaptor.capture(), personalisationCaptor.capture());
213,218d214
< 
<         verify(mockLogAppender, times(2)).doAppend(loggingEventArgumentCaptor.capture());
< 
<         List<ILoggingEvent> logStatement = loggingEventArgumentCaptor.getAllValues();
<         assertThat(logStatement.get(0).getFormattedMessage(), Is.is("Retrieved event queue message with id [queue-message-id] for resource external id [a-resource-external-id]"));
<         assertThat(logStatement.get(1).getFormattedMessage(), Is.is("Processed notification email for disputed transaction"));
240c236,237
<         verify(mockNotificationService, atMostOnce()).sendStripeDisputeWonEmail(adminEmailsCaptor.capture(), personalisationCaptor.capture());
---
>         verify(mockNotificationService, atMostOnce())
>                 .sendStripeDisputeWonEmail(adminEmailsCaptor.capture(), personalisationCaptor.capture());
250,255d246
< 
<         verify(mockLogAppender, times(2)).doAppend(loggingEventArgumentCaptor.capture());
< 
<         List<ILoggingEvent> logStatement = loggingEventArgumentCaptor.getAllValues();
<         assertThat(logStatement.get(0).getFormattedMessage(), Is.is("Retrieved event queue message with id [queue-message-id] for resource external id [a-resource-external-id]"));
<         assertThat(logStatement.get(1).getFormattedMessage(), Is.is("Processed notification email for disputed transaction"));
277c268,269
<         verify(mockNotificationService, atMostOnce()).sendStripeDisputeEvidenceSubmittedEmail(adminEmailsCaptor.capture(), personalisationCaptor.capture());
---
>         verify(mockNotificationService, atMostOnce())
>                 .sendStripeDisputeEvidenceSubmittedEmail(adminEmailsCaptor.capture(), personalisationCaptor.capture());
287,292d278
< 
<         verify(mockLogAppender, times(2)).doAppend(loggingEventArgumentCaptor.capture());
< 
<         List<ILoggingEvent> logStatement = loggingEventArgumentCaptor.getAllValues();
<         assertThat(logStatement.get(0).getFormattedMessage(), Is.is("Retrieved event queue message with id [queue-message-id] for resource external id [a-resource-external-id]"));
<         assertThat(logStatement.get(1).getFormattedMessage(), Is.is("Processed notification email for disputed transaction"));
300c286,290
<                 .withEventDetails(objectMapper.valueToTree(Map.of("amount", 21000L, "fee", 1500L, "evidence_due_date", "2022-03-07T13:00:00Z", "gateway_account_id", gatewayAccountId)))
---
>                 .withEventDetails(objectMapper.valueToTree(Map.of(
>                         "amount", 21000L,
>                         "fee", 1500L,
>                         "evidence_due_date", "2022-03-07T13:00:00Z",
>                         "gateway_account_id", gatewayAccountId)))
317c307,311
<                 .withEventDetails(objectMapper.valueToTree(Map.of("amount", 21000L, "fee", 1500L, "evidence_due_date", "2022-03-07T13:00:00.001Z", "gateway_account_id", gatewayAccountId)))
---
>                 .withEventDetails(objectMapper.valueToTree(Map.of(
>                         "amount", 21000L,
>                         "fee", 1500L,
>                         "evidence_due_date", "2022-03-07T13:00:00.001Z",
>                         "gateway_account_id", gatewayAccountId)))
335c329,333
<                 .withEventDetails(objectMapper.valueToTree(Map.of("amount", 21000L, "fee", 1500L, "evidence_due_date", "2022-03-07T13:00:00.001Z", "gateway_account_id", gatewayAccountId)))
---
>                 .withEventDetails(objectMapper.valueToTree(Map.of(
>                         "amount", 21000L,
>                         "fee", 1500L,
>                         "evidence_due_date", "2022-03-07T13:00:00.001Z",
>                         "gateway_account_id", gatewayAccountId)))
