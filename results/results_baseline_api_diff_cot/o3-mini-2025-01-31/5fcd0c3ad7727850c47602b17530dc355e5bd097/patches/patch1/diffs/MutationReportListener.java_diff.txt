11a12,13
> import org.pitest.classinfo.ClassInfoVisitor;
> import org.pitest.classinfo.ClassName;
12a15
> import java.io.ByteArrayOutputStream;
14a18
> import java.io.InputStream;
18a23,24
> import java.util.HashMap;
> import java.util.Map;
56,57c62
<     this.jsonParser = new JsonParser(
<         new HashSet<>(Arrays.asList(locators)));
---
>     this.jsonParser = new JsonParser(new HashSet<>(Arrays.asList(locators)));
78,79c83
<     final String content =
<         "document.querySelector('mutation-test-report-app').report = " + json;
---
>     final String content = "document.querySelector('mutation-test-report-app').report = " + json;
102,105c106,122
<   private MutationTestSummaryData createSummaryData(
<       final CoverageDatabase coverage, final ClassMutationResults data) {
<     return new MutationTestSummaryData(data.getFileName(),
<         data.getMutations(), coverage.getClassInfo(Collections.singleton(data.getMutatedClass())));
---
>   private MutationTestSummaryData createSummaryData(final CoverageDatabase coverage, final ClassMutationResults data) {
>     try {
>       // Load the class bytes for the mutated class.
>       byte[] classBytes = loadClassBytes(data.getMutatedClass());
>       
>       // Use the new API method to obtain class information.
>       ClassInfoVisitor visitor = new ClassInfoVisitor();
>       Object classInfo = visitor.getClassInfo(data.getMutatedClass(), classBytes, 0L);
>       
>       // Wrap the obtained class info into a map as expected by MutationTestSummaryData.
>       Map<ClassName, Object> classInfoMap = new HashMap<>();
>       classInfoMap.put(data.getMutatedClass(), classInfo);
>       
>       return new MutationTestSummaryData(data.getFileName(), data.getMutations(), classInfoMap);
>     } catch (IOException ex) {
>       throw new RuntimeException("Unable to load class bytes for " + data.getMutatedClass(), ex);
>     }
108,109c125
<   private void updatePackageSummary(
<       final ClassMutationResults mutationMetaData) {
---
>   private void updatePackageSummary(final ClassMutationResults mutationMetaData) {
112,113c128
<     this.packageSummaryData.update(packageName,
<         createSummaryData(this.coverage, mutationMetaData));
---
>     this.packageSummaryData.update(packageName, createSummaryData(this.coverage, mutationMetaData));
136a152,167
>   
>   private byte[] loadClassBytes(ClassName className) throws IOException {
>     String resourcePath = className.asJavaName().replace('.', '/') + ".class";
>     InputStream in = this.getClass().getClassLoader().getResourceAsStream(resourcePath);
>     if (in == null) {
>       throw new IOException("Class resource not found: " + resourcePath);
>     }
>     ByteArrayOutputStream buffer = new ByteArrayOutputStream();
>     int nRead;
>     byte[] data = new byte[16384];
>     while ((nRead = in.read(data)) != -1) {
>       buffer.write(data, 0, nRead);
>     }
>     in.close();
>     return buffer.toByteArray();
>   }
