1,23d0
< /*
<  * The MIT License (MIT)
<  *
<  * Copyright (c) 2018-2023 Yegor Bugayenko
<  *
<  * Permission is hereby granted, free of charge, to any person obtaining a copy
<  * of this software and associated documentation files (the "Software"), to deal
<  * in the Software without restriction, including without limitation the rights
<  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
<  * copies of the Software, and to permit persons to whom the Software is
<  * furnished to do so, subject to the following conditions:
<  *
<  * The above copyright notice and this permission notice shall be included
<  * in all copies or substantial portions of the Software.
<  *
<  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
<  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
<  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
<  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
<  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
<  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
<  * SOFTWARE.
<  */
36c13
< import org.cactoos.scalar.CheckedScalar;
---
> import org.cactoos.scalar.Unchecked;
38d14
< import org.cactoos.scalar.UncheckedScalar;
40c16
< import org.cactoos.text.SplitText;
---
> import org.cactoos.text.Split;
156c132,143
<             return this.id;
---
>             return new Unchecked<>(
>                 () -> Long.parseUnsignedLong(
>                     new ListOf<>(
>                         new Split(
>                             new TextOf(this.path),
>                             "\n"
>                         )
>                     ).get(2).asString(),
>                     // @checkstyle MagicNumber (1 line)
>                     16
>                 )
>             ).value();
201c188
<             return new CheckedScalar<>(
---
>             return new Unchecked<>(
204c191
<                         new SplitText(
---
>                         new Split(
211,212c198
<                 ),
<                 e -> new IOException(e)
---
>                 )
249c235
<                     origin -> new UncheckedScalar<>(
---
>                     origin -> new Unchecked<>(
275c261
<                         new SplitText(
---
>                         new Split(
