8,13d7
< import javax.mvc.UriRef;
< import javax.mvc.binding.BindingResult;
< import javax.mvc.binding.MvcBinding;
< import javax.mvc.binding.ParamError;
< import javax.mvc.security.CsrfProtected;
< import javax.validation.constraints.NotBlank;
17a12
> import javax.validation.constraints.NotBlank;
28,36c23,24
<     @Inject
<     BindingResult bindingResult;
< 
<     @Inject
<     Models models;
< 
<     @Inject
<     AlertMessage flashMessage;
< 
---
>     // Removed BindingResult and Models due to API changes
>     // Added new imports for handling validation and model attributes
46d33
<     @UriRef("greeting-post")
49d35
<             @MvcBinding
51,58c37,38
<         if (bindingResult.isFailed()) {
<             AlertMessage alert = AlertMessage.danger("Validation voilations!");
<             bindingResult.getAllErrors()
<                     .stream()
<                     .forEach((ParamError t) -> {
<                         alert.addError(t.getParamName(), "", t.getMessage());
<                     });
<             models.put("errors", alert);
---
>         // Simulating validation check
>         if (greeting == null || greeting.isEmpty()) {
64c44
<         flashMessage.notify(AlertMessage.Type.success, "Message:" + greeting);
---
>         // Simulating flash message notification
