39:detect(java.util.List<java.lang.String>) in com.google.cloud.translate.spi.v2.HttpTranslateRpc cannot implement detect(java.util.List<java.lang.String>) in com.google.cloud.translate.spi.v2.TranslateRpc  return type java.util.List<java.util.List<com.google.cloud.translate.spi.v2.HttpTranslateRpc.DetectionsResourceItems>> is not compatible with java.util.List<java.util.List<com.google.cloud.translate.spi.v2.TranslateRpc.DetectionsResourceItems>> 
70:name clash: translate(java.util.List<java.lang.String>,java.util.Map<com.google.cloud.translate.spi.v2.HttpTranslateRpc.Option,?>) in com.google.cloud.translate.spi.v2.HttpTranslateRpc and translate(java.util.List<java.lang.String>,java.util.Map<com.google.cloud.translate.spi.v2.TranslateRpc.Option,?>) in com.google.cloud.translate.spi.v2.TranslateRpc have the same erasure, yet neither overrides the other
59:method listSupportedLanguages in interface com.google.cloud.translate.Translate cannot be applied to given types;  required: com.google.cloud.translate.Translate.LanguageListOption[]   found: com.google.cloud.translate.Translate.TranslateOption   reason: varargs mismatch; com.google.cloud.translate.Translate.TranslateOption cannot be converted to com.google.cloud.translate.Translate.LanguageListOption 
100:incompatible types: java.lang.Exception cannot be converted to java.io.IOException
66:incompatible types: java.lang.Exception cannot be converted to java.io.IOException
17:com.google.cloud.translate.spi.v2.HttpTranslateRpc is not abstract and does not override abstract method translate(java.util.List<java.lang.String>,java.util.Map<com.google.cloud.translate.spi.v2.TranslateRpc.Option,?>) in com.google.cloud.translate.spi.v2.TranslateRpc
54:name clash: listSupportedLanguages(java.util.Map<com.google.cloud.translate.spi.v2.HttpTranslateRpc.Option,?>) in com.google.cloud.translate.spi.v2.HttpTranslateRpc and listSupportedLanguages(java.util.Map<com.google.cloud.translate.spi.v2.TranslateRpc.Option,?>) in com.google.cloud.translate.spi.v2.TranslateRpc have the same erasure, yet neither overrides the other
50:incompatible types: java.lang.Exception cannot be converted to java.io.IOException
