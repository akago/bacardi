26,27d25
< import org.tinspin.index.PointDistanceFunction;
< import org.tinspin.index.PointEntryDist;
158c156
<          *         the center point and .z represents radius.
---
>          *         the center point, and .z represents the radius.
226c224
<                         final PointEntryDist<PVector> nn = tree.query1NN(new double[] { p.x, p.y, largestR }); // find nearest-neighbour circle
---
>                         final CoverTree.Entry<PVector> nn = tree.query1NN(new double[] { p.x, p.y, largestR }); // find nearest-neighbour circle
229c227
<                          * nn.dist() does not return the radius (since it's a distance metric used to
---
>                          * nn.distance() does not return the radius (since it's a distance metric used to
645,646c643
<         private static final PointDistanceFunction circleDistanceMetric = (p1, p2) -> {
<                 // from https://stackoverflow.com/a/21975136/
---
>         private static final CoverTree.DistanceFunction circleDistanceMetric = (p1, p2) -> {
650d646
< 
653c649
<                 return euclideanDistance + absZDifference; // negative if inside
---
>                 return euclideanDistance + absZDifference;
