0a1,7
> package it.geosolutions.geostore.core.security.password;
> 
> import org.apache.commons.codec.binary.Base64;
> import org.jasypt.digest.StandardByteDigester;
> import org.jasypt.util.password.StrongPasswordEncryptor;
> import static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;
> 
20,32d26
< package it.geosolutions.geostore.core.security.password;
< 
< import org.apache.commons.codec.binary.Base64;
< import org.jasypt.digest.StandardByteDigester;
< import org.jasypt.spring.security.PasswordEncoder;
< import org.jasypt.util.password.StrongPasswordEncryptor;
< import static it.geosolutions.geostore.core.security.password.SecurityUtils.toBytes;
< 
< /**
<  * This Encoder provide encription and check of password using a digest
<  * @author Lorenzo Natali (lorenzo.natali at geo-solutions.it)
<  *
<  */
35,38d28
< 
<                 /**
<                  * The digest is not reversible
<                  */
76a67,81
>     public static class PasswordEncoder {
>         private StrongPasswordEncryptor passwordEncryptor;
> 
>         public void setPasswordEncryptor(StrongPasswordEncryptor passwordEncryptor) {
>             this.passwordEncryptor = passwordEncryptor;
>         }
> 
>         public String encodePassword(String rawPassword) {
>             return this.passwordEncryptor.encryptPassword(rawPassword);
>         }
> 
>         public boolean isPasswordValid(String encodedPassword, String rawPassword) {
>             return this.passwordEncryptor.checkPassword(rawPassword, encodedPassword);
>         }
>     }
