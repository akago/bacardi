1,15d0
< /*
<  * Copyright (C) 1999-2009 Jive Software. All rights reserved.
<  *
<  * Licensed under the Apache License, Version 2.0 (the "License");
<  * you may not use this file except in compliance with the License.
<  * You may obtain a copy of the License at
<  *
<  *     http://www.apache.org/licenses/LICENSE-2.0
<  *
<  * Unless required by applicable law or agreed to in writing, software
<  * distributed under the License is distributed on an "AS IS" BASIS,
<  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<  * See the License for the specific language governing permissions and
<  * limitations under the License.
<  */
19,21c4,6
< import com.hazelcast.core.EntryListener;
< import com.hazelcast.core.IMap;
< import com.hazelcast.core.MapEvent;
---
> import com.hazelcast.map.IMap;
> import com.hazelcast.map.listener.EntryListener;
> import com.hazelcast.map.listener.MapEvent;
23d7
< import com.hazelcast.monitor.LocalMapStats;
45,48d28
< /**
<  * Clustered implementation of the Cache interface using Hazelcast.
<  *
<  */
85,86c65
<     public String addClusteredCacheEntryListener(@Nonnull final ClusteredCacheEntryListener<K, V> clusteredCacheEntryListener, final boolean includeValues, final boolean includeEventsFromLocalNode)
<     {
---
>     public String addClusteredCacheEntryListener(@Nonnull final ClusteredCacheEntryListener<K, V> clusteredCacheEntryListener, final boolean includeValues, final boolean includeEventsFromLocalNode) {
168c147,149
<         if (object == null) { return null; }
---
>         if (object == null) {
>             return null;
>         }
192,193c173
<         final LocalMapStats stats = map.getLocalMapStats();
<         return (int) (stats.getOwnedEntryCount() + stats.getBackupEntryCount());
---
>         return map.size();
224,227c204
< 
<         // Instances are likely all loaded by the same class loader. For resource usage optimization, let's test just one, not all.
<         entries.entrySet().stream().findAny().ifPresent(
<             e -> {
---
>         entries.entrySet().stream().findAny().ifPresent(e -> {
230,231c207
<             }
<         );
---
>         });
241c217
<         return map.getLocalMapStats().getHits();
---
>         return 0;
246,247c222
<         final long hits = map.getLocalMapStats().getHits();
<         return numberOfGets > hits ? numberOfGets - hits : 0;
---
>         return numberOfGets;
257,258c232
<         final LocalMapStats stats = map.getLocalMapStats();
<         return stats.getOwnedEntryMemoryCost() + stats.getBackupEntryMemoryCost();
---
>         return map.size();
327,329c301
<             && lastPluginClassLoaderWarning.isBefore(Instant.now().minus(pluginClassLoaderWarningSupression)) )
<         {
<             // Try to determine what plugin loaded the offending class.
---
>             && lastPluginClassLoaderWarning.isBefore(Instant.now().minus(pluginClassLoaderWarningSupression))) {
