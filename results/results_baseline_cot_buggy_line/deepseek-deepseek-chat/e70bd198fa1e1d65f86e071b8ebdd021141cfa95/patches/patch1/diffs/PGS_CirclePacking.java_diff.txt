26,27c26,27
< import org.tinspin.index.PointDistanceFunction;
< import org.tinspin.index.PointEntryDist;
---
> import org.tinspin.index.PointDistance;
> import org.tinspin.index.PointEntry;
226c226
<                         final PointEntryDist<PVector> nn = tree.query1NN(new double[] { p.x, p.y, largestR }); // find nearest-neighbour circle
---
>                         final PointEntry<PVector> nn = tree.query1NN(new double[] { p.x, p.y, largestR }); // find nearest-neighbour circle
342c342
<         public static List<PVector> maximumInscribedPack(PShape shape, double minRadius, double tolerance) {
---
>         public static List<PVector) maximumInscribedPack(PShape shape, double minRadius, double tolerance) {
645c645
<         private static final PointDistanceFunction circleDistanceMetric = (p1, p2) -> {
---
>         private static final PointDistance circleDistanceMetric = (p1, p2) -> {
