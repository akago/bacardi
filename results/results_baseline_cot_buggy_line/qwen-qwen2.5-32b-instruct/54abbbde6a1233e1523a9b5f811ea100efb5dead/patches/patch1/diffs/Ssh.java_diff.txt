1,29d0
< /*
<  * Copyright (c) 2014-2022, jcabi.com
<  * All rights reserved.
<  *
<  * Redistribution and use in source and binary forms, with or without
<  * modification, are permitted provided that the following conditions
<  * are met: 1) Redistributions of source code must retain the above
<  * copyright notice, this list of conditions and the following
<  * disclaimer. 2) Redistributions in binary form must reproduce the above
<  * copyright notice, this list of conditions and the following
<  * disclaimer in the documentation and/or other materials provided
<  * with the distribution. 3) Neither the name of the jcabi.com nor
<  * the names of its contributors may be used to endorse or promote
<  * products derived from this software without specific prior written
<  * permission.
<  *
<  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
<  * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
<  * NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
<  * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL
<  * THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
<  * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
<  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
<  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
<  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
<  * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
<  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
<  * OF THE POSSIBILITY OF SUCH DAMAGE.
<  */
47d17
< import java.util.concurrent.TimeUnit;
52,54c22,23
< import org.cactoos.scalar.Unchecked;
< import org.cactoos.text.TextOf;
< import org.cactoos.text.UncheckedText;
---
> import org.cactoos.TextOf;
> import org.cactoos.UncheckedText;
80,82c49
<  * @todo #30:30min Refactor this class into smaller ones to avoid null
<  *  checking of passphrase. There should probably be separate classes for
<  *  encrypted/unencrypted private key.
---
>  * @checkstyle ParameterNumberCheck (6 lines)
86c53
< @SuppressWarnings("PMD.TooManyMethods")
---
> @SuppressWarnings("PMD.ProhibitPublicStaticMethods")
211d177
<      * @checkstyle ParameterNumberCheck (6 lines)
233d198
<     @Override
235c200
<         attempts = Tv.SEVEN,
---
>         attempts = 7,
249c214
<                         this.key.replaceAll("\r", "")
---
>                         (this.key.replaceAll("\r", "")
251c216
<                             .trim(),
---
>                             .trim()),
254d218
<                 )
269,271c233,234
<                 "Opening SSH session to %s@%s:%s (%d bytes in RSA key)...",
<                 this.getLogin(), this.getAddr(), this.getPort(),
<                 file.length()
---
>                 "Opening SSH session to %s@%s:%s",
>                 this.getLogin(), this.getAddr(), this.getPort()
292c255
<         session.setTimeout((int) TimeUnit.MINUTES.toMillis(1L));
---
>         session.setTimeout((int) TimeUnit.SECONDS.toMillis(10L));
294c257
<         session.setServerAliveCountMax(Tv.MILLION);
---
>         session.setServerAliveCountMax(1000000);
