3a4
> import org.flywaydb.core.api.configuration.FlywayConfiguration;
108,112c109,114
<                 final org.flywaydb.core.Flyway flyway = new Flyway();
<                 flyway.setDataSource(this.dataSource());
<                 flyway.setClassLoader(NisAppConfig.class.getClassLoader());
<                 flyway.setLocations(prop.getProperty("flyway.locations"));
<                 flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
---
>                 final FlywayConfiguration configuration = FlywayConfiguration.defaultConfiguration()
>                                 .dataSource(this.dataSource())
>                                 .locations(prop.getProperty("flyway.locations"))
>                                 .validateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
> 
>                 final Flyway flyway = new Flyway(configuration);
117d118
<         @DependsOn("flyway")
169c170
<         // region observers + validators
---
>         // region mappers
334,335c335,336
<                                 this.put(BlockChainFeature.WB_TIME_BASED_VESTING, () -> TimeBasedVestingWeightedBalances::new);
<                                 this.put(BlockChainFeature.WB_IMMEDIATE_VESTING, () -> AlwaysVestedBalances::new);
---
>                                 this.put(BlockChainFeature.WB_TIME_BASED_VESTINGING, () -> TimeBasedVestingWeightedBalances::new);
>                                 this.put(BlockChainFeature.WB_IMMEDIATE_VESTINGING, () -> AlwaysVestedBalances::new);
