30,31d29
< import org.acegisecurity.providers.encoding.PasswordEncoder;
< import org.jasypt.encryption.pbe.StandardPBEByteEncryptor;
33c31,39
< import org.jasypt.spring.security.PBEPasswordEncoder;
---
> import org.jasypt.encryption.pbe.StandardPBEByteEncryptor;
> import org.jasypt.spring.security.PBEStringEncryptor;
> import org.jasypt.spring.security.PBEByteEncryptor;
> 
> import it.geosolutions.geostore.core.security.password.CharArrayPasswordEncoder;
> import it.geosolutions.geostore.core.security.password.PasswordEncodingType;
> import it.geosolutions.geostore.core.security.password.KeyStoreProviderImpl;
> import it.geosolutions.geostore.core.security.password.KeyStoreProvider;
> 
89,112d94
<         protected PasswordEncoder createStringEncoder() {
<                 byte[] password = lookupPasswordFromKeyStore();
< 
<                 char[] chars = toChars(password);
<                 try {
<                         stringEncrypter = new StandardPBEStringEncryptor();
<                         stringEncrypter.setPasswordCharArray(chars);
< 
<                         if (getProviderName() != null && !getProviderName().isEmpty()) {
<                                 stringEncrypter.setProviderName(getProviderName());
<                         }
<                         stringEncrypter.setAlgorithm(getAlgorithm());
< 
<                         PBEPasswordEncoder encoder = new PBEPasswordEncoder();
<                         encoder.setPbeStringEncryptor(stringEncrypter);
< 
<                         return encoder;
<                 } finally {
<                         scramble(password);
<                         scramble(chars);
<                 }
<         }
< 
<         @Override
153a136,178
>         @Override
>         protected CharArrayPasswordEncoder createStringEncoder() {
>                 byte[] password = lookupPasswordFromKeyStore();
> 
>                 char[] chars = toChars(password);
>                 try {
>                         stringEncrypter = new StandardPBEStringEncryptor();
>                         stringEncrypter.setPasswordCharArray(chars);
> 
>                         if (getProviderName() != null && !getProviderName().isEmpty()) {
>                                 stringEncrypter.setProviderName(getProviderName());
>                         }
>                         stringEncrypter.setAlgorithm(getAlgorithm());
> 
>                         return new CharArrayPasswordEncoder() {
>                                 @Override
>                                 public boolean isPasswordValid(String encPass, char[] rawPass,
>                                                 Object salt) {
>                                         String decrypted = stringEncrypter.decrypt(encPass);
>                                         char[] chars = toChars(decrypted.getBytes());
>                                         try {
>                                                 return Arrays.equals(chars, rawPass);
>                                         } finally {
>                                                 scramble(chars);
>                                         }
>                                 }
> 
>                                 @Override
>                                 public String encodePassword(char[] rawPass, Object salt) {
>                                         byte[] bytes = toBytes(rawPass);
>                                         try {
>                                                 return stringEncrypter.encrypt(new String(bytes));
>                                         } finally {
>                                                 scramble(bytes);
>                                         }
>                                 }
>                         };
>                 } finally {
>                         scramble(password);
>                         scramble(chars);
>                 }
>         }
> 
178c203
<                         getStringEncoder();
---
>                         createStringEncoder();
189c214
<                         getCharEncoder();
---
>                         createCharEncoder();
200d224
<         
