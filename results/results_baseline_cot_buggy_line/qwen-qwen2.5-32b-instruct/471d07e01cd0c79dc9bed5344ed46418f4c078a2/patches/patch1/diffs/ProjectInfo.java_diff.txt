1,16d0
< /*
<  * Copyright 2015 Google LLC
<  *
<  * Licensed under the Apache License, Version 2.0 (the "License");
<  * you may not use this file except in compliance with the License.
<  * You may obtain a copy of the License at
<  *
<  *       http://www.apache.org/licenses/LICENSE-2.0
<  *
<  * Unless required by applicable law or agreed to in writing, software
<  * distributed under the License is distributed on an "AS IS" BASIS,
<  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<  * See the License for the specific language governing permissions and
<  * limitations under the License.
<  */
< 
57d40
<   /** The project lifecycle states. */
71d53
<     /** Only used/useful for distinguishing unset values. */
75d56
<     /** The normal and active state. */
78,81d58
<     /**
<      * The project has been marked for deletion by the user or by the system (Google Cloud
<      * Platform). This can generally be reversed by calling {@link ResourceManager#undelete}.
<      */
84,86d60
<     /**
<      * The process of deleting the project has begun. Reversing the deletion is no longer possible.
<      */
93,96d66
<     /**
<      * Get the State for the given String constant, and throw an exception if the constant is not
<      * recognized.
<      */
101d70
<     /** Get the State for the given String constant, and allow unrecognized values. */
106d74
<     /** Return the known values for State. */
138c106,109
<       return obj instanceof ResourceId && Objects.equals(toPb(), ((ResourceId) obj).toPb());
---
>       return obj == this
>           || obj != null
>               && obj.getClass().equals(ResourceId.class)
>               && Objects.equals(toPb(), ((ResourceId) obj).toPb());
146,279c117,125
<     com.google.api.services.cloudresourcemanager.model.ResourceId toPb() {
<       com.google.api.services.cloudresourcemanager.model.ResourceId resourceIdPb =
<           new com.google.api.services.cloudresourcemanager.model.ResourceId();
<       resourceIdPb.setId(id);
<       resourceIdPb.setType(type.toLowerCase());
<       return resourceIdPb;
<     }
< 
<     static ResourceId fromPb(
<         com.google.api.services.cloudresourcemanager.model.ResourceId resourceIdPb) {
<       return new ResourceId(resourceIdPb.getId(), resourceIdPb.getType());
<     }
<   }
< 
<   /** Builder for {@code ProjectInfo}. */
<   public abstract static class Builder {
< 
<     /**
<      * Set the user-assigned name of the project.
<      *
<      * <p>This field is optional and can remain unset. Allowed characters are: lowercase and
<      * uppercase letters, numbers, hyphen, single-quote, double-quote, space, and exclamation point.
<      * This field can be changed after project creation.
<      */
<     public abstract Builder setName(String name);
< 
<     /**
<      * Set the unique, user-assigned ID of the project.
<      *
<      * <p>The ID must be 6 to 30 lowercase letters, digits, or hyphens. It must start with a letter.
<      * Trailing hyphens are prohibited. This field cannot be changed after the server creates the
<      * project.
<      */
<     public abstract Builder setProjectId(String projectId);
< 
<     /**
<      * Add a label associated with this project.
<      *
<      * <p>See {@link #labels} for label restrictions.
<      */
<     public abstract Builder addLabel(String key, String value);
< 
<     /** Remove a label associated with this project. */
<     public abstract Builder removeLabel(String key);
< 
<     /** Clear the labels associated with this project. */
<     public abstract Builder clearLabels();
< 
<     /**
<      * Set the labels associated with this project.
<      *
<      * <p>Label keys must be between 1 and 63 characters long and must conform to the following
<      * regular expression: [a-z]([-a-z0-9]*[a-z0-9])?. Label values must be between 0 and 63
<      * characters long and must conform to the regular expression ([a-z]([-a-z0-9]*[a-z0-9])?)?. No
<      * more than 256 labels can be associated with a given resource. This field can be changed after
<      * project creation.
<      */
<     public abstract Builder setLabels(Map<String, String> labels);
< 
<     abstract Builder setProjectNumber(Long projectNumber);
< 
<     abstract Builder setState(State state);
< 
<     abstract Builder setCreateTimeMillis(Long createTimeMillis);
< 
<     public abstract Builder setParent(ResourceId parent);
< 
<     public abstract ProjectInfo build();
<   }
< 
<   static class BuilderImpl extends Builder {
< 
<     private String name;
<     private String projectId;
<     private Map<String, String> labels = new HashMap<>();
<     private Long projectNumber;
<     private State state;
<     private Long createTimeMillis;
<     private ResourceId parent;
< 
<     BuilderImpl(String projectId) {
<       this.projectId = projectId;
<     }
< 
<     BuilderImpl(ProjectInfo info) {
<       this.name = info.name;
<       this.projectId = info.projectId;
<       this.labels.putAll(info.labels);
<       this.projectNumber = info.projectNumber;
<       this.state = info.state;
<       this.createTimeMillis = info.createTimeMillis;
<       this.parent = info.parent;
<     }
< 
<     @Override
<     public Builder setName(String name) {
<       this.name = firstNonNull(name, Data.<String>nullOf(String.class));
<       return this;
<     }
< 
<     @Override
<     public Builder setProjectId(String projectId) {
<       this.projectId = checkNotNull(projectId);
<       return this;
<     }
< 
<     @Override
<     public Builder addLabel(String key, String value) {
<       this.labels.put(key, value);
<       return this;
<     }
< 
<     @Override
<     public Builder removeLabel(String key) {
<       this.labels.remove(key);
<       return this;
<     }
< 
<     @Override
<     public Builder clearLabels() {
<       this.labels.clear();
<       return this;
<     }
< 
<     @Override
<     public Builder setLabels(Map<String, String> labels) {
<       this.labels = Maps.newHashMap(checkNotNull(labels));
<       return this;
<     }
< 
<     @Override
<     Builder setProjectNumber(Long projectNumber) {
<       this.projectNumber = projectNumber;
<       return this;
---
>     com.google.cloud.resourcemanager.v3.Project toPb() {
>       com.google.cloud.resourcemanager.v3.Project projectPb =
>           new com.google.cloud.resourcemanager.v3.Project();
>       projectPb.setName(name);
>       projectPb.setProjectId(projectId);
>       projectPb.setLabels(labels);
>       projectPb.setProjectNumber(projectNumber);
>       if (state != null) {
>         projectPb.setLifecycleState(state.toString());
281,285c127,129
< 
<     @Override
<     Builder setState(State state) {
<       this.state = state;
<       return this;
---
>       if (createTimeMillis != null) {
>         projectPb.setCreateTime(
>             DATE_TIME_FORMATTER.format(Instant.ofEpochMilli(createTimeMillis));
287,291c131,132
< 
<     @Override
<     Builder setCreateTimeMillis(Long createTimeMillis) {
<       this.createTimeMillis = createTimeMillis;
<       return this;
---
>       if (parent != null) {
>         projectPb.setParent(parent.toPb());
293,297c134
< 
<     @Override
<     public Builder setParent(ResourceId parent) {
<       this.parent = parent;
<       return this;
---
>       return projectPb;
300,302c137,138
<     @Override
<     public ProjectInfo build() {
<       return new ProjectInfo(this);
---
>     static ResourceId fromPb(com.google.cloud.resourcemanager.v3.ResourceId resourceIdPb) {
>       return new ResourceId(resourceIdPb.getId(), resourceIdPb.getType());
316,320d151
<   /**
<    * Get the unique, user-assigned ID of the project.
<    *
<    * <p>This field cannot be changed after the server creates the project.
<    */
325,329d155
<   /**
<    * Get the user-assigned name of the project.
<    *
<    * <p>This field is optional, can remain unset, and can be changed after project creation.
<    */
334,338d159
<   /**
<    * Get number uniquely identifying the project.
<    *
<    * <p>This field is set by the server and is read-only.
<    */
343d163
<   /** Get the immutable map of labels associated with this project. */
348,353d167
<   /**
<    * Get the project's lifecycle state.
<    *
<    * <p>This is a read-only field. To change the lifecycle state of your project, use the {@code
<    * delete} or {@code undelete} method.
<    */
362,366d175
<   /**
<    * Get the project's creation time (in milliseconds).
<    *
<    * <p>This field is set by the server and is read-only.
<    */
392,394c201,203
<   com.google.api.services.cloudresourcemanager.model.Project toPb() {
<     com.google.api.services.cloudresourcemanager.model.Project projectPb =
<         new com.google.api.services.cloudresourcemanager.model.Project();
---
>   com.google.cloud.resourcemanager.v3.Project toPb() {
>     com.google.cloud.resourcemanager.v3.Project projectPb =
>         new com.google.cloud.resourcemanager.v3.Project();
404,406c213
<           DateTimeFormatter.ISO_DATE_TIME
<               .withZone(ZoneOffset.UTC)
<               .format(Instant.ofEpochMilli(createTimeMillis)));
---
>           DATE_TIME_FORMATTER.format(Instant.ofEpochMilli(createTimeMillis)));
414c221
<   static ProjectInfo fromPb(com.google.api.services.cloudresourcemanager.model.Project projectPb) {
---
>   static ProjectInfo fromPb(com.google.cloud.resourcemanager.v3.Project projectPb) {
