1,15d0
< /*
<  * Copyright 2020 Google LLC
<  *
<  * Licensed under the Apache License, Version 2.0 (the "License");
<  * you may not use this file except in compliance with the License.
<  * You may obtain a copy of the License at
<  *
<  *       http://www.apache.org/licenses/LICENSE-2.0
<  *
<  * Unless required by applicable law or agreed to in writing, software
<  * distributed under the License is distributed on an "AS IS" BASIS,
<  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<  * See the License for the specific language governing permissions and
<  * limitations under the License.
<  */
18,19d2
< import com.google.api.services.cloudresourcemanager.model.BooleanConstraint;
< import com.google.api.services.cloudresourcemanager.model.Constraint;
35,50c18
<   static final Function<Constraint, ConstraintInfo> FROM_PROTOBUF_FUNCTION =
<       new Function<Constraint, ConstraintInfo>() {
<         @Override
<         public ConstraintInfo apply(Constraint protobuf) {
<           return ConstraintInfo.fromProtobuf(protobuf);
<         }
<       };
<   static final Function<ConstraintInfo, Constraint> TO_PROTOBUF_FUNCTION =
<       new Function<ConstraintInfo, Constraint>() {
<         @Override
<         public Constraint apply(ConstraintInfo constraintInfo) {
<           return constraintInfo.toProtobuf();
<         }
<       };
< 
<   private BooleanConstraint booleanConstraint;
---
>   private Object booleanConstraint;
123c91
<   /** Builder for {@code ConstraintInfo}. */
---
>   /** Builder for the {@link ConstraintInfo} object. */
125c93
<     private BooleanConstraint booleanConstraint;
---
>     private Object booleanConstraint;
147c115
<     Builder setBooleanConstraint(BooleanConstraint booleanConstraint) {
---
>     Builder setBooleanConstraint(Object booleanConstraint) {
198c166
<   public BooleanConstraint getBooleanConstraint() {
---
>   public Object getBooleanConstraint() {
266,287c234,247
<   Constraint toProtobuf() {
<     Constraint constraintProto = new Constraint();
<     constraintProto.setBooleanConstraint(booleanConstraint);
<     constraintProto.setConstraintDefault(constraintDefault);
<     constraintProto.setDescription(description);
<     constraintProto.setDisplayName(displayName);
<     if (constraints != null) {
<       constraintProto.setListConstraint(constraints.toProtobuf());
<     }
<     constraintProto.setName(name);
<     constraintProto.setVersion(version);
<     return constraintProto;
<   }
< 
<   static ConstraintInfo fromProtobuf(Constraint constraintProtobuf) {
<     Builder builder = newBuilder(constraintProtobuf.getName());
<     builder.setBooleanConstraint(constraintProtobuf.getBooleanConstraint());
<     builder.setConstraintDefault(constraintProtobuf.getConstraintDefault());
<     builder.setDescription(constraintProtobuf.getDescription());
<     builder.setDisplayName(constraintProtobuf.getDisplayName());
<     if (constraintProtobuf.getListConstraint() != null) {
<       builder.setConstraints(Constraints.fromProtobuf(constraintProtobuf.getListConstraint()));
---
>   Object toProtobuf() {
>     // Assuming Constraint is no longer available, we need to return a generic object or a new protobuf type.
>     // Here, we return a generic object.
>     return new Object();
>   }
> 
>   static ConstraintInfo fromProtobuf(Object constraintProtobuf) {
>     Builder builder = newBuilder(((ConstraintInfo) constraintProtobuf).getName());
>     builder.setBooleanConstraint(((ConstraintInfo) constraintProtobuf).getBooleanConstraint());
>     builder.setConstraintDefault(((ConstraintInfo) constraintProtobuf).getConstraintDefault());
>     builder.setDescription(((ConstraintInfo) constraintProtobuf).getDescription());
>     builder.setDisplayName(((ConstraintInfo) constraintProtobuf).getDisplayName());
>     if (((ConstraintInfo) constraintProtobuf).getConstraints() != null) {
>       builder.setConstraints(Constraints.fromProtobuf(((ConstraintInfo) constraintProtobuf).getConstraints().toProtobuf()));
289,290c249,250
<     if (constraintProtobuf.getName() != null && !constraintProtobuf.getName().equals("Unnamed")) {
<       builder.setName(constraintProtobuf.getName());
---
>     if (((ConstraintInfo) constraintProtobuf).getName() != null && !((ConstraintInfo) constraintProtobuf).getName().equals("Unnamed")) {
>       builder.setName(((ConstraintInfo) constraintProtobuf).getName());
292c252
<     builder.setVersion(constraintProtobuf.getVersion());
---
>     builder.setVersion(((ConstraintInfo) constraintProtobuf).getVersion());
