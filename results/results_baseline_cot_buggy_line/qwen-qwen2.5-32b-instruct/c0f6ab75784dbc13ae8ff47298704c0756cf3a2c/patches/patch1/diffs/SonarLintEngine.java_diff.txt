36,37d35
< import org.sonarsource.sonarlint.core.client.api.standalone.StandaloneAnalysisConfiguration;
< import org.sonarsource.sonarlint.core.client.api.standalone.StandaloneGlobalConfiguration;
45,46d42
< import org.sonarsource.sonarlint.core.plugin.commons.PluginsLoader;
< import org.sonarsource.sonarlint.core.plugin.commons.PluginsLoader.Configuration;
49d44
< import org.sonarsource.sonarlint.core.plugin.commons.loading.PluginRequirementsCheckResult;
67c62
<     // The only instance of this singleton class
---
>     // The only instance of this class
70c65,66
<     // We need to reinitialise it before starting analysis of any source files on any rules.
---
>     // We need to reinitialize the analysis engine as it is stopped after each analysis executed by {@link
>     // SonarStaticAnalyzer}.
77c73
<         this.analysisEngine = new AnalysisEngine(analysisGlobalConfig, loadedPlugins, null);
---
>         this.analysisEngine = new AnalysisEngine(analysisGlobalConfig, loadedPlugins, logOutput);
123d118
<                 .addEnabledLanguage(Language.JAVA)
135c130
<         // Default loaded result stops the loader. The following code prevents that.
---
>         // Default loaded result stops the loader.
163,165d157
<                 .addEnabledLanguages(globalConfig.getEnabledLanguages())
<                 .setClientPid(globalConfig.getClientPid())
<                 .setExtraProperties(globalConfig.extraProperties())
223d214
<                                             logOutput),
