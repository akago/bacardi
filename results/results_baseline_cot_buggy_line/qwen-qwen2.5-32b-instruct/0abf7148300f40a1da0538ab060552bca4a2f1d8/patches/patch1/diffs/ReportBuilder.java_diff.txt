55a56
> import xdev.tableexport.export.ExportException;
59d59
< 
75d74
<         
81d79
<         
91d88
<         
101d97
<         
121d116
<         
155,159d149
<         
<         /**
<          * 
<          * @return
<          */
162d151
<                 
169,171c158,159
<                         final Font font = style.getFont();
<                         lbl.setFont(font);
<                         //get the normal height of the label
---
>                         final Font f = style.getFont();
>                         lbl.setFont(f);
173d160
<                         //add the column border width
175d161
<                         //Add padding
189d174
<                 
196,197c181,182
<                         final Font font = style.getFont();
<                         lbl.setFont(font);
---
>                         final Font f = style.getFont();
>                         lbl.setFont(f);
199d183
<                         //Add border width
201d184
<                         //Add padding
213d195
<         
238d219
<         
255d235
<         
268,269d247
<                 final boolean createHeader = this.config.hasAnyHeader();
<                 
275c253
<                         if(createHeader)
---
>                         if(this.config.hasAnyHeader())
295d272
<                                         
330,333d306
<                         if(this.config.isBlankWhenNullValue())
<                         {
<                                 textField.setBlankWhenNull(true);
<                         }
350d322
<                 txtField.setItalic(Boolean.valueOf(f.isItalic()));
360d331
<         
369c340
<                 textField.getLineBox().getPen().setLineWidth(border.getLineWidth());
---
>                 textField.getLineBox().getPen().setLineWidth((float)border.getLineWidth());
379d349
<                 
386d355
<         
393a363,388
>         /**
>          * 
>          * @return
>          */
>         private int calcMaxHeaderHeight()
>         {
>                 final JLabel lbl = new JLabel("a");
>                 int maxHeight = 0;
> 
>                 for(final TemplateColumn col : this.config.getColumns())
>                 {
>                         final ColumnStyle style = col.getHeaderColumn().getStyle();
>                         final Font font = style.getFont();
>                         lbl.setFont(font);
>                         int lblHeigh = (int)lbl.getPreferredSize().getHeight();
>                         lblHeigh+= style.getColBorder().getLineWidth()*2;
>                         lblHeigh+= style.getColumnPadding().getTopWidth() + style.getColumnPadding().getBottomWidth();
> 
>                         if(lblHeigh > maxHeight)
>                         {
>                                 maxHeight = lblHeigh;
>                         }
>                 }
> 
>                 return maxHeight;
>         }
397,398c392,417
<          * Assemble and compile a {@link JasperReport} based on the information of
<          * the {@link TemplateConfig} object.
---
>          * @return
>          */
>         private int calcMaxContentHeight()
>         {
>                 final JLabel lbl = new JLabel("a");
>                 int maxHeight = 0;
> 
>                 for(final TemplateColumn col : this.config.getColumns())
>                 {
>                         final ColumnStyle style = col.getContentColumn().getStyle();
>                         final Font font = style.getFont();
>                         lbl.setFont(font);
>                         int lblHeigh = (int)lbl.getPreferredSize().getHeight();
>                         lblHeigh+= style.getColBorder().getLineWidth()*2;
>                         lblHeigh+= style.getColumnPadding().getTopWidth() + style.getColumnPadding().getBottomWidth();
> 
>                         if(lblHeigh > maxHeight)
>                         {
>                                 maxHeight = lblHeigh;
>                         }
>                 }
> 
>                 return maxHeight;
>         }
> 
>         /**
400,401c419
<          * @return the compiled {@link JasperReport}
<          * @throws ExportException
---
>          * @return
428d445
<         
