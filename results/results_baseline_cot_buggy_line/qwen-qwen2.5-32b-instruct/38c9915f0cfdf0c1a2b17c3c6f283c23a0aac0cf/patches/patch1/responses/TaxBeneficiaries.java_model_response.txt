<code_analysis>
1. Examine the error message:
   - The error indicates that the class `LengthOf` cannot be found in the package `org.cactoos.iterable`.
   - This suggests that the `LengthOf` class has been removed or renamed in the updated version of the `org.cactoos` dependency.

2. Review the client code:
   - The `LengthOf` class is used to check the length of the `score` suffixes of `Remote` nodes.
   - The error occurs in the `TaxBeneficiaries` constructor where `LengthOf` is used to filter nodes based on the length of their `score` suffixes.

3. Consider potential fixes:
   - Since `LengthOf` is no longer available, we need to find an alternative way to calculate the length of the `score` suffixes.
   - We can directly use the `score` method of the `Remote` class to get the length of the suffixes.

4. Plan the necessary changes:
   - Replace the usage of `LengthOf` with a direct call to the `score` method and calculate the length of the suffixes.
   - Ensure that the logic remains the same, i.e., filtering nodes where the length of the `score` suffixes is greater than or equal to 16.
</code_analysis>

```java
package io.zold.api;

import java.util.Comparator;
import org.cactoos.iterable.Filtered;
import org.cactoos.iterable.IterableEnvelope;
import org.cactoos.iterable.Sorted;

/**
 * {@link Remote} nodes that should receive taxes.
 *
 * @since 1.0
 */
public final class TaxBeneficiaries extends IterableEnvelope<Remote> {

    /**
     * Ctor.
     *
     * @param nodes Remote nodes to select from.
     */
    public TaxBeneficiaries(final Iterable<Remote> nodes) {
        super(() -> new Sorted<>(
            Comparator.comparing(Remote::score),
            new Filtered<>(
                n -> n.score().suffixes().size() >= 16,
                nodes
            )
        ));
    }
}
```

In this fix, the `LengthOf` class is replaced with a direct call to `n.score().suffixes().size()` to calculate the length of the suffixes, ensuring the code remains compatible with the updated dependency.
