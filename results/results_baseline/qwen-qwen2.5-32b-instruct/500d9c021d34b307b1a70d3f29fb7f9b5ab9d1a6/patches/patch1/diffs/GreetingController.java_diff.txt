6,13c6,7
< import javax.mvc.Controller;
< import javax.mvc.Models;
< import javax.mvc.UriRef;
< import javax.mvc.binding.BindingResult;
< import javax.mvc.binding.MvcBinding;
< import javax.mvc.binding.ParamError;
< import javax.mvc.security.CsrfProtected;
< import javax.validation.constraints.NotBlank;
---
> import javax.validation.ConstraintViolation;
> import javax.validation.Validator;
17a12,13
> import javax.ws.rs.core.Response;
> import java.util.Set;
24d19
< @Controller
29c24
<     BindingResult bindingResult;
---
>     private Validator validator;
32c27
<     Models models;
---
>     private Logger log;
35,38c30
<     AlertMessage flashMessage;
< 
<     @Inject
<     Logger log;
---
>     private AlertMessage flashMessage;
46,47c38
<     @UriRef("greeting-post")
<     public String post(
---
>     public Response post(
49d39
<             @MvcBinding
51c41,42
<         if (bindingResult.isFailed()) {
---
>         Set<ConstraintViolation<String>> violations = validator.validate(greeting);
>         if (!violations.isEmpty()) {
53,56c44,45
<             bindingResult.getAllErrors()
<                     .stream()
<                     .forEach((ParamError t) -> {
<                         alert.addError(t.getParamName(), "", t.getMessage());
---
>             violations.forEach(violation -> {
>                 alert.addError("greeting", "", violation.getMessage());
58d46
<             models.put("errors", alert);
60c48
<             return "greeting.xhtml";
---
>             return Response.status(Response.Status.BAD_REQUEST).entity(alert).build();
65c53
<         return "redirect:greeting";
---
>         return Response.seeOther(java.net.URI.create("greeting")).build();
