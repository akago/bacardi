1,23d0
< /*
<  * The MIT License (MIT)
<  *
<  * Copyright (c) 2018-2023 Yegor Bugayenko
<  *
<  * Permission is hereby granted, free of charge, to any person obtaining a copy
<  * of this software and associated documentation files (the "Software"), to deal
<  * in the Software without restriction, including without limitation the rights
<  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
<  * copies of the Software, and to permit persons to whom the Software is
<  * furnished to do so, subject to the following conditions:
<  *
<  * The above copyright notice and this permission notice shall be included
<  * in all copies or substantial portions of the Software.
<  *
<  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
<  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
<  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
<  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
<  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
<  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
<  * SOFTWARE.
<  */
29a7,8
> import org.cactoos.Scalar;
> import org.cactoos.Text;
34d12
< import org.cactoos.iterable.Skipped;
36,38d13
< import org.cactoos.scalar.CheckedScalar;
< import org.cactoos.scalar.Or;
< import org.cactoos.scalar.UncheckedScalar;
96,102c71,73
<      * @todo #65:30min Complete Wallet implementations with id, public RSA
<      *  key and network id. Wallets.create(Long, String, String) must
<      *  create a Wallet with these strings set and a constructor must be
<      *  added to all Walletl realizations (Wallet(final long id, final String
<      *  pubkey, final String network, final Transaction... transactions). After
<      *  completing these implementations fix tests that uses Wallets.create()
<      *  and all Wallet realizations.
---
>      * @todo #65:30min Implement key method. This should return the
>      *  public RSA key of the wallet owner in Base64. Also add a unit test
>      *  to replace WalletTest.keyIsNotYetImplemented().
134c105
<          * Constructor.
---
>          * Ctor.
201c172
<             return new CheckedScalar<>(
---
>             return new Scalar<>(
209c180
<                     // @checkstyle MagicNumber (1 line)
---
>                     // @checkstyle MagicNumberCheck (1 line)
237c208
<                     new UncheckedText(
---
>                     (new UncheckedText(
249,250c220
<                     origin -> new UncheckedScalar<>(
<                         new Or(
---
>                     origin -> new Scalar<>(
257d226
<                         )
