1,18d0
< /**
<  * Copyright (C) 2014 Premium Minds.
<  *
<  * This file is part of wicket-crudifier.
<  *
<  * wicket-crudifier is free software: you can redistribute it and/or modify it under
<  * the terms of the GNU Lesser General Public License as published by the Free
<  * Software Foundation, either version 3 of the License, or (at your option) any
<  * later version.
<  *
<  * wicket-crudifier is distributed in the hope that it will be useful, but WITHOUT ANY
<  * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
<  * A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
<  * details.
<  *
<  * You should have received a copy of the GNU Lesser General Public License
<  * along with wicket-crudifier. If not, see <http://www.gnu.org/licenses/>.
<  */
36a19
> 
38,40d20
< import javax.validation.constraints.NotBlank;
< import javax.validation.constraints.NotEmpty;
< import javax.validation.constraints.NotNull;
43a24,26
> import javax.validation.constraints.NotBlank;
> import javax.validation.constraints.NotEmpty;
> import javax.validation.constraints.NotNull;
85,86d67
<                 typesControlGroups.put(Boolean.class, CheckboxControlGroup.class);
<                 typesControlGroups.put(boolean.class, CheckboxControlGroup.class);
111,112d91
<         protected abstract EntityProvider<?> getEntityProvider(String name);
< 
133,135c112,114
<                         ElementDescriptor constraintDescriptor = constraintDescriptors.getConstraintsForProperty(descriptor.getName());
<                         if(constraintDescriptor!=null){
<                                 Set<ConstraintDescriptor<?>> constraintsSet = constraintDescriptor.getConstraintDescriptors();
---
>             ElementDescriptor elementDescriptor = constraintDescriptors.getConstraintsForProperty(descriptor.getName());
>             if(elementDescriptor != null){
>                 Set<ConstraintDescriptor<?>> constraintsSet = elementDescriptor.getConstraintDescriptors();
153c132
<                                         Class<? extends Panel> typesControlGroup = getControlGroupByType(objectProperty.type);
---
>                     Class<? extends AbstractControlGroup> typesControlGroup = getControlGroupByType(objectProperty.type);
165d143
< 
192,202c170
<                         } catch (SecurityException e) {
<                                 throw new RuntimeException(e);
<                         } catch (NoSuchMethodException e) {
<                                 throw new RuntimeException(e);
<                         } catch (IllegalArgumentException e) {
<                                 throw new RuntimeException(e);
<                         } catch (InstantiationException e) {
<                                 throw new RuntimeException(e);
<                         } catch (IllegalAccessException e) {
<                                 throw new RuntimeException(e);
<                         } catch (InvocationTargetException e) {
---
>             } catch (SecurityException | NoSuchMethodException | IllegalArgumentException | InstantiationException | IllegalAccessException | InvocationTargetException e) {
250a219
>     @SuppressWarnings("rawtypes")
