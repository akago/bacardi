3d2
< import develop.p2p.lib.WaveCreator;
116c115
<      * @param p    パーティクル
---
>      * @param particle パーティクル
118c117
<     public static void line(Location path, Location to, Particle p)
---
>     public static void line(Location path, Location to, Particle particle)
130c129
<             particle(vP.toLocation(path.getWorld()), 1, p);
---
>             particle(vP.toLocation(path.getWorld()), 1, particle);
140a140
>      * @param particle ぱーてぃくる
142c142
<     public static void circle(Location center, int count, double radius)
---
>     public static void circle(Location center, int count, double radius, Particle particle)
144a145
>             (
151c152
<         particle(n);
---
>         particle(n, 5, particle);
161d161
<      * @param particle ぱーてぃくる
163c163
<     public static void circle(Location center, int count, double radius, Particle particle)
---
>     public static void circle(Location center, int count, double radius)
165a166
>             (
172c173
<         particle(n, 5, particle);
---
>         particle(n, 5);
180,239d180
<      * @param seconds 秒数
<      */
<     public static void magic(Player player, int seconds)
<     {
<         final int[] count = {0};
<         WaveCreator wave = new WaveCreator(0.8, 1.8, 0.1);
< 
<         BukkitRunnable runnable = new BukkitRunnable()
<         {
<             @Override
<             public void run()
<             {
<                 for (double i = 0; i < Math.PI * 2; i++)
<                 {
<                     Location center = player.getLocation();
< 
<                     circle(center.clone().add(0, 0.9, 0), count[0], 3, Particle.CRIT);
< 
<                     circle(center.add(0, 0.7, 0), count[0], 2.7, Particle.ENCHANTMENT_TABLE);
< 
<                     circle(center.clone().add(0, wave.get(0.01, false), 0), count[0], wave.getStatic());
< 
<                     circle(center.clone().add(3.2, 0.7, 3.2), count[0], 1.5);
<                     circle(center.clone().add(-3.2, 0.7, -3.2), count[0], 1.5);
<                     circle(center.clone().add(-3.2, 0.7, 3.2), count[0], 1.5);
<                     circle(center.clone().add(3.2, 0.7, -3.2), count[0], 1.5);
< 
<                     circle(center.clone().add(0, 1.5, 0), count[0], 5, Particle.SPELL_WITCH);
< 
<                     count[0]++;
<                 }
< 
<                 Location center = player.getLocation();
< 
<                 line(center.clone().add(3, 0.7, 0), center.clone().add(-1.5, 0.7, 2.3));
<                 line(center.clone().add(-1.5, 0.7, 2.3), center.clone().add(-1.5, 0.7, -2.3)); //三角
<                 line(center.clone().add(3, 0.7, 0), center.clone().add(-1.5, 0.7, -2.3));
< 
<                 line(center.clone().add(-3, 0.7, 0), center.clone().add(1.5, 0.7, -2.3));
<                 line(center.clone().add(1.5, 0.7, -2.3), center.clone().add(1.5, 0.7, 2.3)); //三角(反転)
<                 line(center.clone().add(-3, 0.7, 0), center.clone().add(1.5, 0.7, 2.3));
<             }
<         };
< 
<         runnable.runTaskTimer(PeyangSuperbAntiCheat.getPlugin(), 0L, 1L);
<         new BukkitRunnable()
<         {
<             @Override
<             public void run()
<             {
<                 runnable.cancel();
<             }
<         }.runTaskLater(PeyangSuperbAntiCheat.getPlugin(), seconds);
< 
<     }
< 
<     /**
<      * ガーディアンビーム
<      *
<      * @param player 餌食
242c183
<     public static void laser(Player player, int sec)
---
>     public static void magic(Player player, int sec)
244d184
< 
246,247d185
<         final double radius = 2.5;
< 
254c192
<                 Location X = new Location(c.getWorld(), particle_x(time[0], radius) + c.getX(), 5.0 + c.getY(), particle_z(time[0], radius) + c.getZ());
---
>                 Location X = new Location(c.getWorld(), particle_x(time[0], 2.5) + c.getX(), 5.0 + c.getY(), particle_z(time[0], 2.5) + c.getZ());
311a250,285
>     /**
>      * ガーディアンビーム
>      *
>      * @param player 被験者
>      * @param sec    秒数
>      */
>     public static void laser(Player player, int sec)
>     {
> 
>         final double[] time = {0.0};
>         final double radius = 2.5;
> 
>         BukkitRunnable runnable = new BukkitRunnable()
>         {
>             @Override
>             public void run()
>             {
>                 Location c = player.getLocation().clone();
>                 Location X = new Location(c.getWorld(), particle_x(time[0], radius) + c.getX(), 5.0 + c.getY(), particle_z(time[0], radius) + c.getZ());
> 
>                 for (int i = 0; i < 10; i++)
>                     line(c, X, Particle.TOWN_AURA);
>                 time[0] += Math.E;
>             }
>         };
> 
>         runnable.runTaskTimer(PeyangSuperbAntiCheat.getPlugin(), 0L, 1L);
>         new BukkitRunnable()
>         {
>             @Override
>             public void run()
>             {
>                 runnable.cancel();
>             }
>         }.runTaskLater(PeyangSuperbAntiCheat.getPlugin(), sec);
>     }
