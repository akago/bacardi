1,82c1,10
< /*
<  * Copyright (c) 2012 - 2016 Jadler contributors
<  * This program is made available under the terms of the MIT License.
<  */
< package net.jadler.stubbing.server.jetty;
< 
< import net.jadler.RequestManager;
< import net.jadler.stubbing.server.StubHttpServer;
< import org.eclipse.jetty.server.Server;
< import org.slf4j.Logger;
< import org.slf4j.LoggerFactory;
< import org.apache.commons.lang.Validate;
< import org.eclipse.jetty.server.Connector;
< import org.eclipse.jetty.server.nio.SelectChannelConnector;
< 
< 
< /**
<  * Default stub http server implementation using Jetty as an http server.
<  */
< public class JettyStubHttpServer implements StubHttpServer {
< 
<     private static final Logger logger = LoggerFactory.getLogger(JettyStubHttpServer.class);
<     private final Server server;
<     private final Connector httpConnector;
< 
<     public JettyStubHttpServer() {
<         this(0);
<     }
<     
< 
<     public JettyStubHttpServer(final int port) {
<         this.server = new Server();
<         this.server.setSendServerVersion(false);
<         this.server.setSendDateHeader(true);
<         
<         this.httpConnector = new SelectChannelConnector();
<         this.httpConnector.setPort(port);
<         server.addConnector(this.httpConnector);
<     }
<     
< 
<     /**
<      * {@inheritDoc}
<      */
<     @Override
<     public void registerRequestManager(final RequestManager ruleProvider) {
<         Validate.notNull(ruleProvider, "ruleProvider cannot be null");
< 
<         server.setHandler(new JadlerHandler(ruleProvider));
<     }
<     
< 
<     /**
<      * {@inheritDoc}
<      */
<     @Override
<     public void start() throws Exception {
<         logger.debug("starting jetty");
<         server.start();
<         logger.debug("jetty started");
<     }
< 
< 
<     /**
<      * {@inheritDoc}
<      */
<     @Override
<     public void stop() throws Exception {
<         logger.debug("stopping jetty");
<         server.stop();
<         logger.debug("jetty stopped");
<     }
<     
< 
<     /**
<      * {@inheritDoc}
<      */
<     @Override
<     public int getPort() {
<         return httpConnector.getLocalPort();
<     }
< }
\ No newline at end of file
---
> <repair_strategy>
> 1. The errors indicate that the `SelectChannelConnector` class and its methods are no longer available in the newer version of Jetty.
> 2. In the newer version of Jetty, `SelectChannelConnector` has been replaced by `ServerConnector`.
> 3. The `setPort` method and `getLocalPort` method need to be updated to use the new `ServerConnector` class.
> 4. The `Server` class in the newer version of Jetty does not have `setSendServerVersion` and `setSendDateHeader` methods, so these lines need to be removed or replaced with equivalent functionality if available.
> 5. The minimal changes needed are to replace `SelectChannelConnector` with `ServerConnector` and adjust the method calls accordingly.
> 6. The changes should not affect the overall functionality of the class.
> 7. Ensure that the class compiles and adheres to the constraints.
> 8. The `org.eclipse.jetty.server.ServerConnector` import is needed.
> </repair_strategy>
\ No newline at end of file
