```java
package com.premiumminds.billy.portugal.services.export.saftpt.v1_03_01.schema;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString2;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy2;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "header",
    "masterFiles",
    "generalLedgerEntries",
    "sourceDocuments"
})
@XmlRootElement(name = "AuditFile")
public class AuditFile implements ToString2
{

    @XmlElement(name = "Header", required = true)
    protected Header header;
    @XmlElement(name极 "MasterFiles", required = true)
    protected AuditFile.MasterFiles masterFiles;
    @XmlElement(name = "GeneralLedgerEntries")
    protected GeneralLedgerEntries generalLedgerEntries;
    @XmlElement(name = "SourceDocuments")
    protected SourceDocuments sourceDocuments;

    public Header getHeader() {
        return header;
    }

    public void setHeader(Header value) {
        this.header = value;
    }

    public AuditFile.MasterFiles getMasterFiles() {
        return masterFiles;
    }

    public void setMasterFiles(AuditFile.MasterFiles value) {
        this.masterFiles = value;
    }

    public GeneralLedgerEntries getGeneralLedgerEntries() {
        return generalLedgerEntries;
    }

    public void setGeneralLedgerEntries(GeneralLedgerEntries value) {
        this.generalLedgerEntries = value;
    }

    public SourceDocuments getSourceDocuments() {
        return sourceDocuments;
    }

    public void setSourceDocuments(SourceDocuments value) {
        this.sourceDocuments = value;
    }

    @Override
    public String toString() {
        final ToStringStrategy2 strategy = new JAXBToStringStrategy();
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    @Override
    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(l极ocator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    @Override
    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
        {
            Header theHeader;
            theHeader = this.getHeader();
            strategy.appendField(locator, this, "header", buffer, theHeader, (this.header!= null));
        }
        {
            AuditFile.MasterFiles theMasterFiles;
            theMasterFiles = this.getMasterFiles();
            strategy.appendField(locator, this, "masterFiles", buffer, theMasterFiles, (this.masterFiles!= null));
        }
        {
            GeneralLedgerEntries theGeneralLedgerEntries;
            theGeneralLedgerEntries = this.getGeneralLedgerEntries();
            strategy.appendField(locator, this, "generalLedgerEntries", buffer, theGeneralLedgerEntries, (this.generalLedgerEntries!= null));
        }
        {
            SourceDocuments theSourceDocuments;
            theSourceDocuments = this.getSourceDocuments();
            strategy.appendField(locator, this, "sourceDocuments", buffer, theSourceDocuments, (this.sourceDocuments!= null));
        }
        return buffer;
    }

    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = {
        "generalLedger",
        "customer",
        "supplier",
        "product",
        "taxTable"
    })
    public static class MasterFiles implements ToString2
    {

        @XmlElement(name = "GeneralLedger")
        protected List<GeneralLedger> generalLedger;
        @XmlElement(name = "Customer")
        protected List<Customer> customer;
        @XmlElement(name = "Supplier")
        protected List<Supplier> supplier;
        @XmlElement(name = "Product")
        protected List<Product> product;
        @XmlElement(name = "TaxTable")
        protected TaxTable taxTable;

        public List<GeneralLedger> getGeneralLedger() {
            if (generalLedger == null) {
                generalLedger = new ArrayList<GeneralLedger>();
            }
            return this.generalLedger;
        }

        public List<Customer> getCustomer() {
            if (customer == null) {
                customer = new ArrayList<Customer>();
            }
            return this.customer;
        }

        public List<Supplier> getSupplier() {
            if (supplier == null) {
                supplier = new ArrayList<Supplier>();
            }
            return this.supplier;
        }

        public List<Product> getProduct() {
            if (product == null) {
                product = new ArrayList<Product>();
            }
            return this.product;
        }

        public TaxTable getTaxTable() {
            return taxTable;
        }

        public void setTaxTable(TaxTable value) {
            this.taxTable = value;
        }

        @Override
        public String toString() {
            final ToStringStrategy2 strategy = new JAXBToStringStrategy();
            final StringBuilder buffer = new StringBuilder();
            append(null, buffer, strategy);
            return buffer.toString();
        }

        @Override
        public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            strategy.appendStart(locator, this, buffer);
            appendFields(locator, buffer, strategy);
            strategy.appendEnd(locator, this, buffer);
            return buffer;
        }

        @Override
        public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy2 strategy) {
            {
                List<GeneralLedger> theGeneralLedger;
                theGeneralLedger = (((this.generalLedger!= null)&&(!this.generalLedger.isEmpty()))?this.getGeneralLedger():null);
                strategy.appendField(locator, this, "generalLedger", buffer, theGeneralLedger, ((this.generalLedger!= null)&&(!this.generalLedger.isEmpty())));
            }
            {
                List<Customer> theCustomer;
                theCustomer = (((this.customer!= null)&&(!this.customer.isEmpty()))?this.getCustomer():null);
                strategy.appendField(locator, this, "customer", buffer, theCustomer, ((this.customer!= null)&&(!this.customer.isEmpty())));
            }
            {
                List<Supplier> theSupplier;
                theSupplier = (((this.supplier!= null)&&(!this.supplier.isEmpty()))?this.getSupplier():null);
                strategy.appendField(locator, this, "supplier", buffer, theSupplier, ((this.s极upplier!= null)&&(!this.supplier.isEmpty())));
            }
            {
                List<Product> theProduct;
                theProduct = (((this.product!= null)&&(!this.product.isEmpty()))?this.getProduct():null);
                strategy.appendField(locator, this, "product", buffer, theProduct, ((this.product!= null)&&(!this.product.isEmpty())));
            }
            {
                TaxTable theTaxTable;
                theTaxTable = this极.getTaxTable();
                strategy.appendField(locator, this, "taxTable", buffer, theTaxTable, (this.taxTable!= null));
            }
            return buffer;
        }
    }
}
```
