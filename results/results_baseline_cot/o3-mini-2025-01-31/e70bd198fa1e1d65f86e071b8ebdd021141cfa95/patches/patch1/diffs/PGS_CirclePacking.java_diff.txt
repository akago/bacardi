26,27c26,27
< import org.tinspin.index.PointDistanceFunction;
< import org.tinspin.index.PointEntryDist;
---
> import org.tinspin.index.DistanceFunction;
> import org.tinspin.index.PointEntry;
226c226
<                         final PointEntryDist<PVector> nn = tree.query1NN(new double[] { p.x, p.y, largestR }); // find nearest-neighbour circle
---
>                         final PointEntry<PVector> nn = tree.query1NN(new double[] { p.x, p.y, largestR }); // find nearest-neighbour circle
229c229
<                          * nn.dist() does not return the radius (since it's a distance metric used to
---
>                          * nn.distance() does not return the radius (since it's a distance metric used to
645c645
<         private static final PointDistanceFunction circleDistanceMetric = (p1, p2) -> {
---
>         private static final DistanceFunction circleDistanceMetric = (p1, p2) -> {
