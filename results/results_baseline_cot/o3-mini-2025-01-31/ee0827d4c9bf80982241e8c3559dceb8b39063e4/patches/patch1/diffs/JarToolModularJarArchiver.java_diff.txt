1,16d0
< /**
<  *
<  * Copyright 2018 The Apache Software Foundation
<  *
<  * Licensed under the Apache License, Version 2.0 (the "License");
<  * you may not use this file except in compliance with the License.
<  * You may obtain a copy of the License at
<  *
<  * http://www.apache.org/licenses/LICENSE-2.0
<  *
<  * Unless required by applicable law or agreed to in writing, software
<  * distributed under the License is distributed on an "AS IS" BASIS,
<  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<  * See the License for the specific language governing permissions and
<  * limitations under the License.
<  */
23a8
> import java.io.OutputStream;
41d25
< import org.apache.commons.io.output.NullPrintStream;
46,62d29
< /**
<  * A {@link ModularJarArchiver} implementation that uses
<  * the {@code jar} tool provided by
<  * {@code java.util.spi.ToolProvider} to create
<  * modular JAR files.
<  *
<  * <p>
<  * The basic JAR archive is created by {@link JarArchiver}
<  * and the {@code jar} tool is used to upgrade it to modular JAR.
<  *
<  * <p>
<  * If the JAR file does not contain module descriptor
<  * or the JDK does not provide the {@code jar} tool
<  * (for example JDK prior to Java 9), then the
<  * archive created by {@link JarArchiver}
<  * is left unchanged.
<  */
152,153d118
<                 // --date option not supported, fallback to rewrite the JAR file
<                 // https://github.com/codehaus-plexus/plexus-archiver/issues/164
164,166d128
<     /**
<      * Fallback to rewrite the JAR file with the correct timestamp if the {@code --date} option is not available.
<      */
180,181d141
<                 // Not using setLastModifiedTime(FileTime) as it sets the extended timestamp
<                 // which is not compatible with the jar tool output.
194,197d153
<     /**
<      * Returns {@code true} if {@code path}
<      * is a module descriptor.
<      */
205,207d160
<             // the path is a module descriptor if it located
<             // into the root of the archive or into the
<             // version area of a multi-release JAR file
217,221d169
<     /**
<      * Prepares the arguments for the jar tool.
<      * It takes into account the module version,
<      * main class, etc.
<      */
225,233d172
<         // We add empty temporary directory to the JAR file.
<         // It may look strange at first, but to update a JAR file
<         // you need to add new files[1]. If we add empty directory
<         // it will be ignored (not added to the archive), but
<         // the module descriptor will be updated and validated.
<         //
<         // [1] There are some exceptions (such as when the main class
<         // is updated) but we need at least empty directory
<         // to ensure it will work in all cases.
266d204
<             // The --date option already normalize the time, so revert to the local time
288,292d225
<     /**
<      * Check support for {@code --date} option introduced since Java 17.0.3 (JDK-8279925).
<      *
<      * @return true if the JAR tool supports the {@code --date} option
<      */
297d229
<             // Test the output code validating the --date option.
300c232
<             PrintStream nullPrintStream = NullPrintStream.NULL_PRINT_STREAM;
---
>             PrintStream nullPrintStream = new PrintStream(OutputStream.nullOutputStream());
