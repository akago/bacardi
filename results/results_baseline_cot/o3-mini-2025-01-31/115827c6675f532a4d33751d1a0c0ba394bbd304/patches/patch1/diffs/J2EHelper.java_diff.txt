2a3
> import java.io.IOException;
5,6c6,13
< import javax.servlet.DispatcherType;
< import javax.servlet.FilterRegistration;
---
> import jakarta.servlet.DispatcherType;
> import jakarta.servlet.Filter;
> import jakarta.servlet.FilterChain;
> import jakarta.servlet.FilterConfig;
> import jakarta.servlet.FilterRegistration;
> import jakarta.servlet.ServletException;
> import jakarta.servlet.ServletRequest;
> import jakarta.servlet.ServletResponse;
77c84
<                 .servlets().addFilter(filter.getClass().getName(), filter);
---
>                 .servlets().addFilter(filter.getClass().getName(), new JakartaFilterAdapter(filter));
81a89,113
> 
>     private static class JakartaFilterAdapter implements Filter {
> 
>         private final AbstractConfigFilter delegate;
> 
>         JakartaFilterAdapter(AbstractConfigFilter delegate) {
>             this.delegate = delegate;
>         }
> 
>         @Override
>         public void init(FilterConfig filterConfig) throws ServletException {
>             delegate.init(filterConfig);
>         }
> 
>         @Override
>         public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)
>                 throws IOException, ServletException {
>             delegate.doFilter(request, response, chain);
>         }
> 
>         @Override
>         public void destroy() {
>             delegate.destroy();
>         }
>     }
