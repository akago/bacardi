7c7
< 
---
> import org.spongepowered.api.command.Command;
9,12c9,10
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.command.args.CommandContext;
< import org.spongepowered.api.command.spec.CommandExecutor;
< import org.spongepowered.api.command.spec.CommandSpec;
---
> import org.spongepowered.api.command.parameter.CommandContext;
> import org.spongepowered.api.command.parameter.Parameter;
14a13,24
> import com.github.games647.changeskin.sponge.ChangeSkinSponge;
> import com.github.games647.changeskin.sponge.PomData;
> import com.github.games647.changeskin.sponge.task.SkinSelector;
> import com.google.inject.Inject;
> import org.spongepowered.api.command.Command;
> import org.spongepowered.api.command.CommandResult;
> import org.spongepowered.api.command.exception.CommandException;
> import org.spongepowered.api.command.parameter.CommandContext;
> import org.spongepowered.api.command.parameter.Parameter;
> import org.spongepowered.api.entity.living.player.Player;
> import org.spongepowered.api.scheduler.Task;
> import java.util.Optional;
16,19c26
< import static org.spongepowered.api.command.args.GenericArguments.string;
< import static org.spongepowered.api.text.Text.of;
< 
< public class SelectCommand implements CommandExecutor, ChangeSkinCommand {
---
> public class SelectCommand implements Command, ChangeSkinCommand {
29c36,37
<     public CommandResult execute(CommandSource src, CommandContext args) {
---
>     public CommandResult execute(org.spongepowered.api.command.CommandCause cause, CommandContext args) throws CommandException {
>         org.spongepowered.api.command.CommandSource src = cause.cause().first(org.spongepowered.api.command.CommandSource.class).orElse(null);
35c43,51
<         String skinName = args.<String>getOne("skinName").get().toLowerCase().replace("skin-", "");
---
>         Parameter.Key<String> skinNameKey = Parameter.key("skinName", String.class);
>         Optional<String> skinNameOptional = args.one(skinNameKey);
> 
>         if (!skinNameOptional.isPresent()) {
>             plugin.sendMessage(src, "invalid-skin-name");
>             return CommandResult.empty();
>         }
> 
>         String skinName = skinNameOptional.get().toLowerCase().replace("skin-", "");
49,50c65,68
<     public CommandSpec buildSpec() {
<         return CommandSpec.builder()
---
>     public org.spongepowered.api.command.Command.Builder build() {
>         Parameter skinNameParameter = Parameter.string().key("skinName").build();
> 
>         return org.spongepowered.api.command.Command.builder()
52,54c70,76
<                 .arguments(string(of("skinName")))
<                 .permission(PomData.ARTIFACT_ID + ".command.skinselect.base")
<                 .build();
---
>                 .addParameter(skinNameParameter)
>                 .permission(PomData.ARTIFACT_ID + ".command.skinselect.base");
>     }
> 
>     @Override
>     public String getShortDescription() {
>         return "Selects a skin by ID.";
