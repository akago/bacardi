22c22,23
< import com.hazelcast.config.MaxSizeConfig;
---
> import com.hazelcast.config.EvictionConfig;
> import com.hazelcast.config.EvictionPolicy;
27c28
< import com.hazelcast.core.Cluster;
---
> import com.hazelcast.cluster.Cluster;
30c31
< import com.hazelcast.core.Member;
---
> import com.hazelcast.cluster.Member;
146c147
<     private static Map<String, Map<String, long[]>> cacheStats;
---
>     private static Map<String, Map<String, long[]]] cacheStats;
288c289,292
<             dynamicConfig.setMaxSizeConfig(new MaxSizeConfig(hazelcastMaxCacheSizeInMegaBytes, MaxSizeConfig.MaxSizePolicy.USED_HEAP_SIZE));
---
>             EvictionConfig evictionConfig = new EvictionConfig()
>                 .setSize(hazelcastMaxCacheSizeInMegaBytes)
>                 .setEvictionPolicy(EvictionPolicy.LRU);
>             dynamicConfig.setEvictionConfig(evictionConfig);
378d381
< 
656c659
<         return NodeID.getInstance(member.getStringAttribute(HazelcastClusterNodeInfo.NODE_ID_ATTRIBUTE).getBytes(StandardCharsets.UTF_8));
---
>         return NodeID.getInstance(member.getAttribute(HazelcastClusterNodeInfo.NODE_ID_ATTRIBUTE).toString().getBytes(StandardCharsets.UTF_8));
695,703c698
<         } finally {
<             ClusterManager.removeListener(clusterEventListener);
<         }
<     }
< 
< }
< 
< 
< 
---
>         } finally
