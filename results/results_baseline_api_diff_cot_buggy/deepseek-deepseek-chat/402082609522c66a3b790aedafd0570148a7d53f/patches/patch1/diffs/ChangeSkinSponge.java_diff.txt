23,25d22
< import org.spongepowered.api.command.CommandManager;
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.config.ConfigDir;
27,33c24,32
< import org.spongepowered.api.event.game.state.GameInitializationEvent;
< import org.spongepowered.api.event.game.state.GamePreInitializationEvent;
< import org.spongepowered.api.event.game.state.GameStoppingServerEvent;
< import org.spongepowered.api.network.ChannelBinding.RawDataChannel;
< import org.spongepowered.api.network.ChannelRegistrar;
< import org.spongepowered.api.plugin.Plugin;
< import org.spongepowered.api.text.serializer.TextSerializers;
---
> import org.spongepowered.api.event.lifecycle.RegisterCommandEvent;
> import org.spongepowered.api.event.lifecycle.StartedEngineEvent;
> import org.spongepowered.api.event.lifecycle.StoppingEngineEvent;
> import org.spongepowered.api.network.channel.packet.PacketChannel;
> import org.spongepowered.api.network.channel.raw.RawDataChannel;
> import org.spongepowered.api.plugin.PluginContainer;
> import org.spongepowered.api.service.permission.Subject;
> import org.spongepowered.api.text.Text;
> import org.spongepowered.api.text.serializer.TextSerializer;
40c39
< @Plugin(id = ARTIFACT_ID, name = PomData.NAME, version = PomData.VERSION,
---
> @PluginContainer(id = ARTIFACT_ID, name = PomData.NAME, version = PomData.VERSION,
42c41
< public class ChangeSkinSponge implements PlatformPlugin<CommandSource> {
---
> public class ChangeSkinSponge implements PlatformPlugin<Subject> {
53d51
<     //We will place more than one config there (i.e. H2/SQLite database) -> sharedRoot = false
62,63c60
<     public void onPreInit(GamePreInitializationEvent preInitEvent) {
<         //load config and database
---
>     public void onPreInit(StartedEngineEvent<Server> preInitEvent) {
73c70
<     public void onInit(GameInitializationEvent initEvent) {
---
>     public void onInit(RegisterCommandEvent<Server> initEvent) {
77c74
<         CommandManager cmdManager = Sponge.getCommandManager();
---
>         CommandManager cmdManager = Sponge.getServer().getCommandManager();
79d75
<         //command and event register
89,90d84
<         //incoming channel
<         ChannelRegistrar channelReg = Sponge.getChannelRegistrar();
93,94c87,88
<         RawDataChannel updateChannel = channelReg.getOrCreateRaw(this, updateChannelName);
<         RawDataChannel permChannel = channelReg.getOrCreateRaw(this, permissionChannelName);
---
>         RawDataChannel updateChannel = Sponge.getChannelManager().createRawChannel(this, updateChannelName);
>         RawDataChannel permChannel = Sponge.getChannelManager().createRawChannel(this, permissionChannelName);
100c94
<     public void onShutdown(GameStoppingServerEvent stoppingServerEvent) {
---
>     public void onShutdown(StoppingEngineEvent<Server> stoppingServerEvent) {
108,109c102
<     @Override
<     public boolean hasSkinPermission(CommandSource invoker, UUID uuid, boolean sendMessage) {
---
>     public boolean hasSkinPermission(Subject invoker, UUID uuid, boolean sendMessage) {
114d106
<         //disallow - not whitelisted or blacklisted
126d117
<     @Override
131d121
<     @Override
136d125
<     @Override
141,142c130
<     @Override
<     public void sendMessage(CommandSource receiver, String key) {
---
>     public void sendMessage(Subject receiver, String key) {
145c133
<             receiver.sendMessage(TextSerializers.LEGACY_FORMATTING_CODE.deserialize(message));
---
>             receiver.sendMessage(Text.of(message));
