31a32
> import java.util.function.Supplier;
33c34
< import org.cactoos.iterable.LengthOf;
---
> import org.cactoos.scalar.LengthOf;
35d35
< import org.cactoos.scalar.IoCheckedScalar;
37,38d36
< import org.cactoos.scalar.StickyScalar;
< import org.cactoos.scalar.UncheckedScalar;
40d37
< import org.cactoos.text.SplitText;
42,43d38
< import org.cactoos.text.TrimmedText;
< import org.cactoos.text.UncheckedText;
88c83
<     private final IoCheckedScalar<String> transaction;
---
>     private final Supplier<String> transaction;
95,103c90,92
<         this.transaction = new IoCheckedScalar<>(
<             new StickyScalar<>(
<                 () -> {
<                     if (
<                         new TrimmedText(
<                             new TextOf(trnsct)
<                         ).asString().isEmpty()
<                     ) {
<                         throw new IOException(
---
>         this.transaction = () -> {
>             if (trnsct.trim().isEmpty()) {
>                 throw new IllegalArgumentException(
107,115c96,99
<                     final List<Text> pieces =
<                         new ListOf<>(
<                             new SplitText(trnsct, ";")
<                         );
<                     // @checkstyle MagicNumberCheck (1 line)
<                     if (new LengthOf(pieces).intValue() != 7) {
<                         throw new IOException(
<                             new FormattedText(
<                                 // @checkstyle LineLength (1 line)
---
>             final List<String> pieces = List.of(trnsct.split(";"));
>             if (pieces.size() != 7) {
>                 throw new IllegalArgumentException(
>                     String.format(
118c102
<                             ).asString()
---
>                     )
122,124c106
<                 }
<             )
<         );
---
>         };
130,136c112
<         final String ident = new UncheckedText(
<             new IoCheckedScalar<>(
<                 new ItemAt<>(
<                     0, new SplitText(this.transaction.value(), ";")
<                 )
<             ).value()
<         ).asString();
---
>         final String ident = List.of(this.transaction.get().split(";")).get(0);
139,141c115
<                 new UncheckedText(
<                     new FormattedText(
<                         // @checkstyle LineLength (1 line)
---
>                 String.format(
145d118
<                 ).asString()
148d120
<         // @checkstyle MagicNumber (1 line)
155,161c127
<             new UncheckedText(
<                 new IoCheckedScalar<>(
<                     new ItemAt<>(
<                         1, new SplitText(this.transaction.value(), ";")
<                     )
<                 ).value()
<             ).asString(),
---
>             List.of(this.transaction.get().split(";")).get(1),
168,174c134
<         final String amnt = new UncheckedText(
<             new IoCheckedScalar<>(
<                 new ItemAt<>(
<                     2, new SplitText(this.transaction.value(), ";")
<                 )
<             ).value()
<         ).asString();
---
>         final String amnt = List.of(this.transaction.get().split(";")).get(2);
177,179c137
<                 new UncheckedText(
<                     new FormattedText(
<                         // @checkstyle LineLength (1 line)
---
>                 String.format(
183d140
<                 ).asString()
186d142
<         // @checkstyle MagicNumber (1 line)
192,200c148
<         final String prefix = new UncheckedText(
<             new IoCheckedScalar<>(
<                 new ItemAt<>(
<                     //@checkstyle MagicNumberCheck (1 line)
<                     3, new SplitText(this.transaction.value(), ";")
<                 )
<             ).value()
<         ).asString();
<         //@checkstyle MagicNumberCheck (1 line)
---
>         final String prefix = List.of(this.transaction.get().split(";")).get(3);
212,219c160
<         final String bnf = new UncheckedText(
<             new IoCheckedScalar<>(
<                 new ItemAt<>(
<                     //@checkstyle MagicNumberCheck (1 line)
<                     4, new SplitText(this.transaction.value(), ";")
<                 )
<             ).value()
<         ).asString();
---
>         final String bnf = List.of(this.transaction.get().split(";")).get(4);
222,224c163
<                 new UncheckedText(
<                     new FormattedText(
<                         // @checkstyle LineLength (1 line)
---
>                 String.format(
228d166
<                 ).asString()
236,243c174
<         final String dtls = new UncheckedText(
<             new IoCheckedScalar<>(
<                 new ItemAt<>(
<                     //@checkstyle MagicNumberCheck (1 line)
<                     5, new SplitText(this.transaction.value(), ";")
<                 )
<             ).value()
<         ).asString();
---
>         final String dtls = List.of(this.transaction.get().split(";")).get(5);
246,248c177
<                 new UncheckedText(
<                     new FormattedText(
<                         // @checkstyle LineLength (1 line)
---
>                 String.format(
252d180
<                 ).asString()
260,270c188,189
<         final String sign = new UncheckedText(
<             new IoCheckedScalar<>(
<                 new ItemAt<>(
<                     //@checkstyle MagicNumberCheck (1 line)
<                     6, new SplitText(this.transaction.value(), ";")
<                 )
<             ).value()
<         ).asString();
<         // @checkstyle MagicNumber (1 line)
<         if (sign.length() != 684
<             || !RtTransaction.SIGN.matcher(sign).matches()) {
---
>         final String sign = List.of(this.transaction.get().split(";")).get(6);
>         if (sign.length() != 684 || !RtTransaction.SIGN.matcher(sign).matches()) {
272,274c191
<                 new UncheckedText(
<                     new FormattedText(
<                         // @checkstyle LineLength (1 line)
---
>                 String.format(
278d194
<                 ).asString()
286c202
<         return new UncheckedScalar<>(this.transaction).value();
---
>         return this.transaction.get();
299c215
<         return this.transaction.equals(that.transaction);
---
>         return this.transaction.get().equals(that.transaction.get());
304c220
<         return this.transaction.hashCode();
---
>         return this.transaction.get().hashCode();
