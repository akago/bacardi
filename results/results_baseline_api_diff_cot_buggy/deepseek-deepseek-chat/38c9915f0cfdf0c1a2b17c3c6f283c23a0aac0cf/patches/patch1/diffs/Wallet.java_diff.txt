30c30
< import org.cactoos.collection.Filtered;
---
> import org.cactoos.iterable.Filtered;
36d35
< import org.cactoos.scalar.CheckedScalar;
38d36
< import org.cactoos.scalar.UncheckedScalar;
40d37
< import org.cactoos.text.SplitText;
201,202c198
<             return new CheckedScalar<>(
<                 () -> Long.parseUnsignedLong(
---
>             return Long.parseUnsignedLong(
204c200
<                         new SplitText(
---
>                     new org.cactoos.text.Split(
211,213c207
<                 ),
<                 e -> new IOException(e)
<             ).value();
---
>             );
224,232d217
<         // @todo #16:30min Following transactions should be ignored according
<         //  to the whitepaper:
<         //  a) If the transaction is negative and its signature is not valid,
<         //  it is ignored;
<         //  b) If the transaction makes the balance of the wallet negative,
<         //  it is ignored;
<         //  c) If the transaction is positive and it’s absent in the paying
<         //  wallet (which exists at the node), it’s ignored; If the paying
<         //  wallet doesn’t exist at the node, the transaction is ignored;
249,250c234
<                     origin -> new UncheckedScalar<>(
<                         new Or(
---
>                     origin -> new Or(
257d240
<                         )
275c258
<                         new SplitText(
---
>                         new org.cactoos.text.Split(
286,288d268
<         // @todo #54:30min Implement key method. This should return the
<         //  public RSA key of the wallet owner in Base64. Also add a unit test
<         //  to replace WalletTest.keyIsNotYetImplemented().
