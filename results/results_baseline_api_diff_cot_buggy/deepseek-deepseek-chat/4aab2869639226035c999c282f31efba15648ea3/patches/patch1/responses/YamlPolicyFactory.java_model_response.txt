<fix_planning>
1. **Analysis of the Problem:**
   - The class `com.artipie.asto.factory.Storages` has been removed in the new version of the dependency.
   - The method `newStorage(String, YamlMapping)` from `Storages` is no longer available.
   - The new API introduces `StorageFactory.newStorage(Config)` as a replacement.

2. **Affected Lines:**
   - Line 43: `new Storages().newStorage(...)`
   - Line 9: `import com.artipie.asto.factory.Storages;`

3. **Proposed Fixes:**
   - Replace the `Storages` class usage with the new `StorageFactory` class.
   - Update the import statement to use the new `StorageFactory` class.
   - Modify the `newStorage` call to use the new method signature.

4. **Potential Side Effects:**
   - The new `StorageFactory` class might require a different configuration format or additional setup.
   - The `Config` object might need to be created differently than the previous `YamlMapping`.

5. **Adherence to Constraints:**
   - The function signature of `getPolicy` remains unchanged.
   - No existing code is removed, only modified.
   - The fix addresses the missing imports and API changes.

6. **Final Summary:**
   - The best solution is to replace the `Storages` class with the new `StorageFactory` class and update the `newStorage` call to use the new method signature. This adheres to the constraints and resolves the compilation errors.

**Chosen Fix:**
- Replace `import com.artipie.asto.factory.Storages;` with `import com.artipie.asto.factory.StorageFactory;`.
- Replace `new Storages().newStorage(...)` with `new StorageFactory().newStorage(...)`.
</fix_planning>

```java
/*
 * The MIT License (MIT) Copyright (c) 2020-2022 artipie.com
 * https://github.com/artipie/http/blob/master/LICENSE.txt
 */
package com.artipie.security.policy;

import com.amihaiemil.eoyaml.Yaml;
import com.artipie.asto.blocking.BlockingStorage;
import com.artipie.asto.factory.StorageFactory;
import java.io.IOException;
import java.io.UncheckedIOException;

/**
 * Policy factory to create {@link YamlPolicy}. Yaml policy is read from storage, and it's required
 * to describe this storage in the configuration. Configuration format is the following:
 *
 * policy:
 *   type: yaml_policy
 *   storage:
 *     type: fs
 *     path: /some/path
 *
 * The storage itself is expected to have yaml files with permissions in the following structure:
 *
 * ..
 * ├── roles.yaml
 * ├── users
 * │   ├── david.yaml
 * │   ├── jane.yaml
 * │   ├── ...
 *
 * @since 1.2
 */
@ArtipiePolicyFactory("yaml_policy")
public final class YamlPolicyFactory implements PolicyFactory {

    @Override
    public Policy<?> getPolicy(final PolicyConfig config) {
        final PolicyConfig sub = config.config("storage");
        try {
            return new YamlPolicy(
                new BlockingStorage(
                    new StorageFactory().newStorage(
                        Yaml.createYamlInput(sub.toString()).readYamlMapping()
                    )
                )
            );
        } catch (final IOException err) {
            throw new UncheckedIOException(err);
        }
    }
}
```
