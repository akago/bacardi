3a4
> import org.flywaydb.core.api.configuration.ClassicConfiguration;
9,30c10,31
< import org.nem.deploy.*;
< import org.nem.nis.*;
< import org.nem.nis.audit.AuditCollection;
< import org.nem.nis.boot.*;
< import org.nem.nis.cache.*;
< import org.nem.nis.connect.*;
< import org.nem.nis.controller.interceptors.LocalHostDetector;
< import org.nem.nis.dao.*;
< import org.nem.nis.harvesting.*;
< import org.nem.nis.mappers.*;
< import org.nem.nis.pox.ImportanceCalculator;
< import org.nem.nis.pox.poi.*;
< import org.nem.nis.pox.pos.PosImportanceCalculator;
< import org.nem.nis.secret.*;
< import org.nem.nis.service.BlockChainLastBlockLayer;
< import org.nem.nis.state.*;
< import org.nem.nis.sync.*;
< import org.nem.nis.validators.*;
< import org.nem.peer.connect.CommunicationMode;
< import org.nem.peer.node.*;
< import org.nem.peer.services.ChainServices;
< import org.nem.peer.trust.*;
---
> import org.nis.deploy.*;
> import org.nis.nis.*;
> import org.nis.nis.audit.AuditCollection;
> import org.nis.nis.boot.*;
> import org.nis.nis.cache.*;
> import org.nis.nis.connect.*;
> import org.nis.nis.controller.interceptors.LocalHostDetector;
> import org.nis.nis.dao.*;
> import org.nis.nis.harvesting.*;
> import org.nis.nis.mappers.*;
> import org.nis.nis.pox.ImportanceCalculator;
> import org.nis.nis.pox.poi.*;
> import org.nis.nis.pox.pos.PosImportanceCalculator;
> import org.nis.nis.secret.*;
> import org.nis.nis.service.BlockChainLastBlockLayer;
> import org.nis.nis.state.*;
> import org.nis.nis.sync.*;
> import org.nis.nis.validators.*;
> import org.nis.peer.connect.CommunicationMode;
> import org.nis.peer.node.*;
> import org.nis.peer.services.ChainServices;
> import org.nis.peer.trust.*;
45c46
<                 "org.nem.nis"
---
>                 "org.nis.nis"
49c50
<                                 "org.nem.nis.websocket.*"
---
>                                 "org.nis.nis.websocket.*"
103c104
<         @Bean(initMethod = "migrate")
---
>         @Bean
108,113c109,115
<                 final org.flywaydb.core.Flyway flyway = new Flyway();
<                 flyway.setDataSource(this.dataSource());
<                 flyway.setClassLoader(NisAppConfig.class.getClassLoader());
<                 flyway.setLocations(prop.getProperty("flyway.locations"));
<                 flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
<                 return flyway;
---
>                 final ClassicConfiguration configuration = new ClassicConfiguration();
>                 configuration.setDataSource(this.dataSource());
>                 configuration.setLocations(prop.getProperty("flyway.locations").split(","));
>                 configuration.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
>                 configuration.setClassLoader(NisAppConfig.class.getClassLoader());
> 
>                 return new Flyway(configuration);
196a199,200
>         // region harvester
> 
270c274
<         private static org.nem.nis.pox.poi.PoiOptions getBlockDependentPoiOptions(final BlockHeight height) {
---
>         private static org.nis.nis.pox.poi.PoiOptions getBlockDependentPoiOptions(final BlockHeight height) {
329c333
<                                 this.put(BlockChainFeature.WB_TIME_BASED_VESTING, () -> TimeBasedVestingWeightedBalances::new);
---
>                                 this.put(BlockChainFeature.WB_TIME_BASED_VESTINGING, () -> TimeBasedVestingWeightedBalances::new);
