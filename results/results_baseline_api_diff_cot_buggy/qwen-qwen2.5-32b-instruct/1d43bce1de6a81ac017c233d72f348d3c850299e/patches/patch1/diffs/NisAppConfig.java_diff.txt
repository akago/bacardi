3a4
> import org.flywaydb.core.api.configuration.ClassicConfiguration;
92c93
<                 final String jdbcUrl = prop.getProperty("jdbc.url").replace("${nem.folder}", nemFolder).replace("${nem.network}",
---
>                 final String jdbcUrl = prop.getProperty("jdbc.url").replace("${nem.folder}", nemFolder).replace("${nem.network",
108,112c109,115
<                 final org.flywaydb.core.Flyway flyway = new Flyway();
<                 flyway.setDataSource(this.dataSource());
<                 flyway.setClassLoader(NisAppConfig.class.getClassLoader());
<                 flyway.setLocations(prop.getProperty("flyway.locations"));
<                 flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
---
>                 final ClassicConfiguration config = new ClassicConfiguration();
>                 config.setDataSource(this.dataSource());
>                 config.setLocations(prop.getProperty("flyway.locations").split(","));
>                 config.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
>                 config.setClassLoader(NisAppConfig.class.getClassLoader());
> 
>                 final Flyway flyway = new Flyway(config);
117d119
<         @DependsOn("flyway")
