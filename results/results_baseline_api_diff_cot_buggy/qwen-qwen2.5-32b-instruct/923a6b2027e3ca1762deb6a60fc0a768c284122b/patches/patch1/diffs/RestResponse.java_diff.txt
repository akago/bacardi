45d44
< import org.hamcrest.CustomMatcher;
48d46
< import org.hamcrest.Matchers;
65,67d62
<  * <p>Method {@link #jump(URI)} creates a new instance of class
<  * {@link Request} with all cookies transferred from the current one.
<  *
92c87,90
<             String.format("HTTP response is not valid: %s", this),
---
>             String.format(
>                 "HTTP response is not valid: %s",
>                 this
>             ),
103c101
<      * @return The same object
---
>      * @return This object
114,115c112
<             this,
<             new RestResponse.StatusMatch(message, status)
---
>             this.status(), Matchers.equalTo(status)
123c120
<      * @param matcher Matcher to validate status code
---
>      * @param matcher The matcher to use
210c207
<         return this.assertHeader(name, Matchers.hasItems(value));
---
>         return this.assertHeader(name, org.hamcrest.Matchers.hasItems(value));
226c223
<                 for (final HttpCookie cookie : HttpCookie.parse(header)) {
---
>                 for (final HttpCookie candidate : HttpCookie.parse(header)) {
230c227
<                             "%s=%s", cookie.getName(), cookie.getValue()
---
>                             "%s=%s", candidate.getName(), candidate.getValue()
246c243
<             Matchers.not(Matchers.emptyIterableOf(String.class))
---
>             org.hamcrest.Matchers.not(org.hamcrest.Matchers.emptyIterable())
284c281
<             Matchers.notNullValue()
---
>             org.hamcrest.Matchers.notNull()
