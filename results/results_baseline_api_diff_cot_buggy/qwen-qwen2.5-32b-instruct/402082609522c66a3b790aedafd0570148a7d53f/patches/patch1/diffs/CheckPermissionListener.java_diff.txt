17,21c17,20
< import org.spongepowered.api.network.ChannelBinding.RawDataChannel;
< import org.spongepowered.api.network.ChannelBuf;
< import org.spongepowered.api.network.ChannelRegistrar;
< import org.spongepowered.api.network.RawDataListener;
< import org.spongepowered.api.network.RemoteConnection;
---
> import org.spongepowered.api.network.channel.raw.handshake.RawHandshakeDataChannel;
> import org.spongepowered.api.network.channel.raw.play.RawPlayDataChannel;
> import org.spongepowered.api.network.channel.ChannelRegistrar;
> import org.spongepowered.api.network.channel.packet.PacketDispatcher;
23,26c22
< import static com.github.games647.changeskin.core.message.PermResultMessage.PERMISSION_RESULT_CHANNEL;
< import static com.github.games647.changeskin.sponge.PomData.ARTIFACT_ID;
< 
< public class CheckPermissionListener implements RawDataListener {
---
> public class CheckPermissionListener {
29c25
<     private final RawDataChannel permissionsResultChannel;
---
>     private final RawHandshakeDataChannel permissionsResultChannel;
36c32
<         permissionsResultChannel = channelRegistrar.getOrCreateRaw(plugin, combinedName);
---
>         permissionsResultChannel = channelRegistrar.createRawChannel(combinedName);
39,42c35,36
<     @Override
<     public void handlePayload(ChannelBuf data, RemoteConnection connection, Type side) {
< 
<         ByteArrayDataInput dataInput = ByteStreams.newDataInput(data.array());
---
>     public void handlePayload(byte[] data, RemoteConnection connection, Type side) {
>         ByteArrayDataInput dataInput = ByteStreams.newDataInput(data);
