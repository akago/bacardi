1,23d0
< /*
<  * The MIT License (MIT)
<  *
<  * Copyright (c) 2018-2023 Yegor Bugayenko
<  *
<  * Permission is hereby granted, free of charge, to any person obtaining a copy
<  * of this software and associated documentation files (the "Software"), to deal
<  * in the Software without restriction, including without limitation the rights
<  * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
<  * copies of the Software, and to permit persons to whom the Software is
<  * furnished to do so, subject to the following conditions:
<  *
<  * The above copyright notice and this permission notice shall be included
<  * in all copies or substantial portions of the Software.
<  *
<  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
<  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
<  * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
<  * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
<  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
<  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
<  * SOFTWARE.
<  */
35d11
< import org.cactoos.scalar.IoCheckedScalar;
37d12
< import org.cactoos.scalar.StickyScalar;
40d14
< import org.cactoos.text.SplitText;
43d16
< import org.cactoos.text.UncheckedText;
88c61
<     private final IoCheckedScalar<String> transaction;
---
>     private final String transaction;
95,97d67
<         this.transaction = new IoCheckedScalar<>(
<             new StickyScalar<>(
<                 () -> {
109c79
<                             new SplitText(trnsct, ";")
---
>                 new org.cactoos.scalar.LengthOf(new TextOf(trnsct), ";")
121,124c91
<                     return trnsct;
<                 }
<             )
<         );
---
>         this.transaction = trnsct;
130,131c97
<         final String ident = new UncheckedText(
<             new IoCheckedScalar<>(
---
>         final String ident = new UncheckedScalar<>(
133c99
<                     0, new SplitText(this.transaction.value(), ";")
---
>                 0, new org.cactoos.scalar.LengthOf(new TextOf(this.transaction), ";")
135,136c101
<             ).value()
<         ).asString();
---
>         ).value();
156d120
<                 new IoCheckedScalar<>(
158,159c122
<                         1, new SplitText(this.transaction.value(), ";")
<                     )
---
>                     1, new org.cactoos.scalar.LengthOf(new TextOf(this.transaction), ";")
169d131
<             new IoCheckedScalar<>(
171,172c133
<                     2, new SplitText(this.transaction.value(), ";")
<                 )
---
>                 2, new org.cactoos.scalar.LengthOf(new TextOf(this.transaction), ";")
193d153
<             new IoCheckedScalar<>(
195,197c155
<                     //@checkstyle MagicNumberCheck (1 line)
<                     3, new SplitText(this.transaction.value(), ";")
<                 )
---
>                 3, new org.cactoos.scalar.LengthOf(new TextOf(this.transaction), ";")
213d170
<             new IoCheckedScalar<>(
215,217c172
<                     //@checkstyle MagicNumberCheck (1 line)
<                     4, new SplitText(this.transaction.value(), ";")
<                 )
---
>                 4, new org.cactoos.scalar.LengthOf(new TextOf(this.transaction), ";")
237d191
<             new IoCheckedScalar<>(
239,241c193
<                     //@checkstyle MagicNumberCheck (1 line)
<                     5, new SplitText(this.transaction.value(), ";")
<                 )
---
>                 5, new org.cactoos.scalar.LengthOf(new TextOf(this.transaction), ";")
261d212
<             new IoCheckedScalar<>(
263,265c214
<                     //@checkstyle MagicNumberCheck (1 line)
<                     6, new SplitText(this.transaction.value(), ";")
<                 )
---
>                 6, new org.cactoos.scalar.LengthOf(new TextOf(this.transaction), ";")
286c235
<         return new UncheckedScalar<>(this.transaction).value();
---
>         return this.transaction;
