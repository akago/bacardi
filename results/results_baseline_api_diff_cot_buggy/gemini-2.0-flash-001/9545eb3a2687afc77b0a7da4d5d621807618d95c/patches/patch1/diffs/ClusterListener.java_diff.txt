11c11
<  * distributed under the License is distributed on an "AS IS" BASIS,
---
>  * is distributed on an "AS IS" BASIS,
18,26c18,21
< import com.hazelcast.core.Cluster;
< import com.hazelcast.core.EntryListener;
< import com.hazelcast.core.LifecycleEvent;
< import com.hazelcast.core.LifecycleEvent.LifecycleState;
< import com.hazelcast.core.LifecycleListener;
< import com.hazelcast.core.Member;
< import com.hazelcast.core.MemberAttributeEvent;
< import com.hazelcast.core.MembershipEvent;
< import com.hazelcast.core.MembershipListener;
---
> import com.hazelcast.cluster.Cluster;
> import com.hazelcast.cluster.MembershipEvent;
> import com.hazelcast.cluster.MembershipListener;
> import com.hazelcast.cluster.Member;
52c47
< public class ClusterListener implements MembershipListener, LifecycleListener {
---
> public class ClusterListener implements MembershipListener {
58c53
<     private final Map<Cache<?,?>, EntryListener> entryListeners = new HashMap<>();
---
>     private final Map<Cache<?,?>, com.hazelcast.core.EntryListener> entryListeners = new HashMap<>();
60c55
<     private final Cluster cluster;
---
>     private final com.hazelcast.cluster.Cluster cluster;
75c70
<     ClusterListener(final Cluster cluster) {
---
>     ClusterListener(final com.hazelcast.cluster.Cluster cluster) {
84c79
<     private void addEntryListener(final Cache<?, ?> cache, final EntryListener listener) {
---
>     private void addEntryListener(final Cache<?, ?> cache, final com.hazelcast.core.EntryListener listener) {
154,155c149
<     @Override
<     public void memberAdded(final MembershipEvent event) {
---
>     public void memberAdded(final com.hazelcast.cluster.MembershipEvent event) {
227,228c221
<     @Override
<     public void memberRemoved(final MembershipEvent event) {
---
>     public void memberRemoved(final com.hazelcast.cluster.MembershipEvent event) {
260a254
>     /*
268a263
>     */
269a265
>     /*
277a274
>     */
