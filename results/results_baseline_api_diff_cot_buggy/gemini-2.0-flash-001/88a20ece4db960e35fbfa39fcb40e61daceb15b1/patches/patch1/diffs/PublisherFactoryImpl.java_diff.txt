20d19
< import com.google.cloud.pubsublite.PublishMetadata;
27a27
> import com.google.cloud.pubsublite.internal.wire.PublisherFactory;
35,36c35
<   @Override
<   public Publisher<PublishMetadata> newPublisher(Map<String, String> params) {
---
>   public Publisher<byte[]> newPublisher(Map<String, String> params) {
39,46c38,42
<     TopicPath topic =
<         TopicPath.newBuilder()
<             .setProject(
<                 ProjectPath.parse("projects/" + config.get(ConfigDefs.PROJECT_FLAG).value())
<                     .project())
<             .setLocation(CloudZone.parse(config.get(ConfigDefs.LOCATION_FLAG).value().toString()))
<             .setName(TopicName.of(config.get(ConfigDefs.TOPIC_NAME_FLAG).value().toString()))
<             .build();
---
>     String project = ProjectPath.parse("projects/" + config.get(ConfigDefs.PROJECT_FLAG).value()).project().value();
>     String location = CloudZone.parse(config.get(ConfigDefs.LOCATION_FLAG).value().toString()).value();
>     String topicName = TopicName.of(config.get(ConfigDefs.TOPIC_NAME_FLAG).value().toString()).value();
> 
>     TopicPath topic = TopicPath.of(project, location, topicName);
49,50c45,48
<         partition ->
<             SinglePartitionPublisherBuilder.newBuilder()
---
>         new PublisherFactory() {
>           @Override
>           public Publisher<byte[]> newPublisher(long partition) {
>             return SinglePartitionPublisherBuilder.newBuilder()
53,54c51,53
<                 .setContext(PubsubContext.of(FRAMEWORK))
<                 .build());
---
>                 .build();
>           }
>         });
