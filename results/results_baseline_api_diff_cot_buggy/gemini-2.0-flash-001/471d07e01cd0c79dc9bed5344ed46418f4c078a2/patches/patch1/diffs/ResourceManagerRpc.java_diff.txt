19,22c19,20
< import com.google.api.services.cloudresourcemanager.model.Constraint;
< import com.google.api.services.cloudresourcemanager.model.OrgPolicy;
< import com.google.api.services.cloudresourcemanager.model.Policy;
< import com.google.api.services.cloudresourcemanager.model.Project;
---
> import com.google.api.services.cloudresourcemanager.v3.model.Policy;
> import com.google.api.services.cloudresourcemanager.v3.model.Project;
92c90
<   Project create(Project project);
---
>   com.google.api.services.cloudresourcemanager.v3.model.Project create(com.google.api.services.cloudresourcemanager.v3.model.Project project);
107c105
<   Project get(String projectId, Map<Option, ?> options);
---
>   com.google.api.services.cloudresourcemanager.v3.model.Project get(String projectId, Map<Option, ?> options);
114c112
<   Tuple<String, Iterable<Project>> list(Map<Option, ?> options);
---
>   Tuple<String, Iterable<com.google.api.services.cloudresourcemanager.v3.model.Project>> list(Map<Option, ?> options);
131c129
<   Project replace(Project project);
---
>   com.google.api.services.cloudresourcemanager.v3.model.Project replace(com.google.api.services.cloudresourcemanager.v3.model.Project project);
138c136
<   Policy getPolicy(String projectId);
---
>   com.google.api.services.cloudresourcemanager.v3.model.Policy getPolicy(String projectId);
145c143
<   Policy replacePolicy(String projectId, Policy newPolicy);
---
>   com.google.api.services.cloudresourcemanager.v3.model.Policy replacePolicy(String projectId, com.google.api.services.cloudresourcemanager.v3.model.Policy newPolicy);
166,168d163
<   /** Clears the Policy from a resource. */
<   void clearOrgPolicy(String resource, OrgPolicy orgPolicy) throws IOException;
< 
178,189d172
<   OrgPolicy getEffectiveOrgPolicy(String resource, String constraint) throws IOException;
< 
<   /**
<    * Gets the Policy on a resource.
<    *
<    * <p>If no Policy is set on the resource, a Policy is returned with default values including
<    * POLICY_TYPE_NOT_SET for the policy_type oneof. The etag value can be used with
<    * projects.setOrgPolicy() to create or update a Policy during read-modify-write.
<    *
<    * @throws ResourceManagerException upon failure
<    */
<   OrgPolicy getOrgPolicy(String resource, String constraint) throws IOException;
196,197d178
<   ListResult<Constraint> listAvailableOrgPolicyConstraints(String resource, Map<Option, ?> options)
<       throws IOException;
204d184
<   ListResult<OrgPolicy> listOrgPolicies(String resource, Map<Option, ?> options) throws IOException;
214d193
<   OrgPolicy replaceOrgPolicy(String resource, OrgPolicy orgPolicy) throws IOException;
