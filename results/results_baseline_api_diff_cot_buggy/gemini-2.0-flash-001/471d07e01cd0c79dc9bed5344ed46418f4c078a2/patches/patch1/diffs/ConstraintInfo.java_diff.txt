18,21d17
< import com.google.api.services.cloudresourcemanager.model.BooleanConstraint;
< import com.google.api.services.cloudresourcemanager.model.Constraint;
< import com.google.api.services.cloudresourcemanager.model.ListConstraint;
< import com.google.common.base.Function;
35,50d30
<   static final Function<Constraint, ConstraintInfo> FROM_PROTOBUF_FUNCTION =
<       new Function<Constraint, ConstraintInfo>() {
<         @Override
<         public ConstraintInfo apply(Constraint protobuf) {
<           return ConstraintInfo.fromProtobuf(protobuf);
<         }
<       };
<   static final Function<ConstraintInfo, Constraint> TO_PROTOBUF_FUNCTION =
<       new Function<ConstraintInfo, Constraint>() {
<         @Override
<         public Constraint apply(ConstraintInfo constraintInfo) {
<           return constraintInfo.toProtobuf();
<         }
<       };
< 
<   private BooleanConstraint booleanConstraint;
113,120d92
< 
<     ListConstraint toProtobuf() {
<       return new ListConstraint().setSuggestedValue(suggestedValue).setSupportsUnder(supportsUnder);
<     }
< 
<     static Constraints fromProtobuf(ListConstraint listConstraint) {
<       return new Constraints(listConstraint.getSuggestedValue(), listConstraint.getSupportsUnder());
<     }
125d96
<     private BooleanConstraint booleanConstraint;
138d108
<       this.booleanConstraint = info.booleanConstraint;
147,151d116
<     Builder setBooleanConstraint(BooleanConstraint booleanConstraint) {
<       this.booleanConstraint = booleanConstraint;
<       return this;
<     }
< 
188d152
<     this.booleanConstraint = builder.booleanConstraint;
197,201d160
<   /** Returns the boolean constraint to check whether the constraint is enforced or not. */
<   public BooleanConstraint getBooleanConstraint() {
<     return booleanConstraint;
<   }
< 
241,242c200
<     return Objects.equals(booleanConstraint, that.booleanConstraint)
<         && Objects.equals(constraintDefault, that.constraintDefault)
---
>     return Objects.equals(constraintDefault, that.constraintDefault)
252,253c210
<     return Objects.hash(
<         booleanConstraint, constraintDefault, description, displayName, constraints, name, version);
---
>     return Objects.hash(constraintDefault, description, displayName, constraints, name, version);
264,293d220
<   }
< 
<   Constraint toProtobuf() {
<     Constraint constraintProto = new Constraint();
<     constraintProto.setBooleanConstraint(booleanConstraint);
<     constraintProto.setConstraintDefault(constraintDefault);
<     constraintProto.setDescription(description);
<     constraintProto.setDisplayName(displayName);
<     if (constraints != null) {
<       constraintProto.setListConstraint(constraints.toProtobuf());
<     }
<     constraintProto.setName(name);
<     constraintProto.setVersion(version);
<     return constraintProto;
<   }
< 
<   static ConstraintInfo fromProtobuf(Constraint constraintProtobuf) {
<     Builder builder = newBuilder(constraintProtobuf.getName());
<     builder.setBooleanConstraint(constraintProtobuf.getBooleanConstraint());
<     builder.setConstraintDefault(constraintProtobuf.getConstraintDefault());
<     builder.setDescription(constraintProtobuf.getDescription());
<     builder.setDisplayName(constraintProtobuf.getDisplayName());
<     if (constraintProtobuf.getListConstraint() != null) {
<       builder.setConstraints(Constraints.fromProtobuf(constraintProtobuf.getListConstraint()));
<     }
<     if (constraintProtobuf.getName() != null && !constraintProtobuf.getName().equals("Unnamed")) {
<       builder.setName(constraintProtobuf.getName());
<     }
<     builder.setVersion(constraintProtobuf.getVersion());
<     return builder.build();
