36a37
> import org.flywaydb.core.api.Location;
108,112c109,122
<                 final org.flywaydb.core.Flyway flyway = new Flyway();
<                 flyway.setDataSource(this.dataSource());
<                 flyway.setClassLoader(NisAppConfig.class.getClassLoader());
<                 flyway.setLocations(prop.getProperty("flyway.locations"));
<                 flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
---
>                 final org.flywaydb.core.api.configuration.ClassicConfiguration flywayConfig = new org.flywaydb.core.api.configuration.ClassicConfiguration();
>                 final org.flywaydb.core.Flyway flyway = new org.flywaydb.core.Flyway(flywayConfig);
>                 flywayConfig.setDataSource(this.dataSource());
>                 flywayConfig.setClassLoader(NisAppConfig.class.getClassLoader());
> 
>                 String locationsString = prop.getProperty("flyway.locations");
>                 String[] locationsArray = locationsString.split(",");
>                 Location[] locations = new Location[locationsArray.length];
>                 for (int i = 0; i < locationsArray.length; i++) {
>                         locations[i] = new Location(locationsArray[i]);
>                 }
> 
>                 flywayConfig.setLocations(locations);
>                 flywayConfig.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
