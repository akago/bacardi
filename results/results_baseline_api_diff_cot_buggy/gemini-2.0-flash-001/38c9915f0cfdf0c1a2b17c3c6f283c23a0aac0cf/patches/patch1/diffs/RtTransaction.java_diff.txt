29a30
> import java.util.Arrays;
33d33
< import org.cactoos.iterable.LengthOf;
35d34
< import org.cactoos.scalar.IoCheckedScalar;
37,38d35
< import org.cactoos.scalar.StickyScalar;
< import org.cactoos.scalar.UncheckedScalar;
40d36
< import org.cactoos.text.SplitText;
42d37
< import org.cactoos.text.TrimmedText;
88c83
<     private final IoCheckedScalar<String> transaction;
---
>     private final String transaction;
95,102c90,91
<         this.transaction = new IoCheckedScalar<>(
<             new StickyScalar<>(
<                 () -> {
<                     if (
<                         new TrimmedText(
<                             new TextOf(trnsct)
<                         ).asString().isEmpty()
<                     ) {
---
>         try {
>             if (trnsct.trim().isEmpty()) {
107,110c96,97
<                     final List<Text> pieces =
<                         new ListOf<>(
<                             new SplitText(trnsct, ";")
<                         );
---
>             final List<String> pieces =
>                 Arrays.asList(trnsct.split(";"));
112c99
<                     if (new LengthOf(pieces).intValue() != 7) {
---
>             if (pieces.size() != 7) {
121c108,110
<                     return trnsct;
---
>             this.transaction = trnsct;
>         } catch (final IOException ex) {
>             throw new IllegalArgumentException(ex);
123,124d111
<             )
<         );
130,136c117,118
<         final String ident = new UncheckedText(
<             new IoCheckedScalar<>(
<                 new ItemAt<>(
<                     0, new SplitText(this.transaction.value(), ";")
<                 )
<             ).value()
<         ).asString();
---
>         final String[] parts = this.transaction.split(";");
>         final String ident = parts[0];
153a136
>         final String[] parts = this.transaction.split(";");
155,161c138
<             new UncheckedText(
<                 new IoCheckedScalar<>(
<                     new ItemAt<>(
<                         1, new SplitText(this.transaction.value(), ";")
<                     )
<                 ).value()
<             ).asString(),
---
>             parts[1],
168,174c145,146
<         final String amnt = new UncheckedText(
<             new IoCheckedScalar<>(
<                 new ItemAt<>(
<                     2, new SplitText(this.transaction.value(), ";")
<                 )
<             ).value()
<         ).asString();
---
>         final String[] parts = this.transaction.split(";");
>         final String amnt = parts[2];
192,199c164,165
<         final String prefix = new UncheckedText(
<             new IoCheckedScalar<>(
<                 new ItemAt<>(
<                     //@checkstyle MagicNumberCheck (1 line)
<                     3, new SplitText(this.transaction.value(), ";")
<                 )
<             ).value()
<         ).asString();
---
>         final String[] parts = this.transaction.split(";");
>         final String prefix = parts[3];
212,219c178,179
<         final String bnf = new UncheckedText(
<             new IoCheckedScalar<>(
<                 new ItemAt<>(
<                     //@checkstyle MagicNumberCheck (1 line)
<                     4, new SplitText(this.transaction.value(), ";")
<                 )
<             ).value()
<         ).asString();
---
>         final String[] parts = this.transaction.split(";");
>         final String bnf = parts[4];
236,243c196,197
<         final String dtls = new UncheckedText(
<             new IoCheckedScalar<>(
<                 new ItemAt<>(
<                     //@checkstyle MagicNumberCheck (1 line)
<                     5, new SplitText(this.transaction.value(), ";")
<                 )
<             ).value()
<         ).asString();
---
>         final String[] parts = this.transaction.split(";");
>         final String dtls = parts[5];
260,267c214,215
<         final String sign = new UncheckedText(
<             new IoCheckedScalar<>(
<                 new ItemAt<>(
<                     //@checkstyle MagicNumberCheck (1 line)
<                     6, new SplitText(this.transaction.value(), ";")
<                 )
<             ).value()
<         ).asString();
---
>         final String[] parts = this.transaction.split(";");
>         final String sign = parts[6];
286c234
<         return new UncheckedScalar<>(this.transaction).value();
---
>         return this.transaction;
