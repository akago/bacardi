4,17c4,17
< import javax.enterprise.context.RequestScoped;
< import javax.inject.Inject;
< import javax.mvc.Controller;
< import javax.mvc.Models;
< import javax.mvc.UriRef;
< import javax.mvc.binding.BindingResult;
< import javax.mvc.binding.MvcBinding;
< import javax.mvc.binding.ParamError;
< import javax.mvc.security.CsrfProtected;
< import javax.validation.constraints.NotBlank;
< import javax.ws.rs.FormParam;
< import javax.ws.rs.GET;
< import javax.ws.rs.POST;
< import javax.ws.rs.Path;
---
> import jakarta.enterprise.context.RequestScoped;
> import jakarta.inject.Inject;
> import jakarta.mvc.Controller;
> import jakarta.mvc.Models;
> import jakarta.mvc.UriRef;
> import jakarta.mvc.binding.BindingResult;
> import jakarta.mvc.binding.MvcBinding;
> import jakarta.validation.ConstraintViolation;
> import jakarta.validation.constraints.NotBlank;
> import jakarta.ws.rs.FormParam;
> import jakarta.ws.rs.GET;
> import jakarta.ws.rs.POST;
> import jakarta.ws.rs.Path;
> import java.util.Set;
53,56c53,56
<             bindingResult.getAllErrors()
<                     .stream()
<                     .forEach((ParamError t) -> {
<                         alert.addError(t.getParamName(), "", t.getMessage());
---
>             Set<ConstraintViolation<?>> violations = bindingResult.getConstraintViolations();
> 
>             violations.forEach(t -> {
>                 alert.addError(t.getPropertyPath().toString(), "", t.getMessage());
