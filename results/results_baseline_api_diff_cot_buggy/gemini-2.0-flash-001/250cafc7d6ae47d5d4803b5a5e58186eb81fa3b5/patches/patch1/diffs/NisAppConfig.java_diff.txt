41a42,43
> import org.flywaydb.core.api.configuration.ClassicConfiguration;
> import org.flywaydb.core.api.Location;
108,112c110,123
<                 final org.flywaydb.core.Flyway flyway = new Flyway();
<                 flyway.setDataSource(this.dataSource());
<                 flyway.setClassLoader(NisAppConfig.class.getClassLoader());
<                 flyway.setLocations(prop.getProperty("flyway.locations"));
<                 flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
---
>                 final ClassicConfiguration configuration = new ClassicConfiguration();
>                 configuration.setDataSource(this.dataSource());
>                 configuration.setClassLoader(NisAppConfig.class.getClassLoader());
> 
>                 String locations = prop.getProperty("flyway.locations");
>                 String[] locationArray = locations.split(",");
>                 Location[] flywayLocations = new Location[locationArray.length];
>                 for (int i = 0; i < locationArray.length; i++) {
>                         flywayLocations[i] = new Location(locationArray[i]);
>                 }
>                 configuration.setLocations(flywayLocations);
>                 configuration.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
> 
>                 final org.flywaydb.core.Flyway flyway = new Flyway(configuration);
