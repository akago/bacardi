12,16c12,16
< import org.spongepowered.api.command.CommandResult;
< import org.spongepowered.api.command.CommandSource;
< import org.spongepowered.api.command.args.CommandContext;
< import org.spongepowered.api.command.spec.CommandExecutor;
< import org.spongepowered.api.command.spec.CommandSpec;
---
> import org.spongepowered.api.command.Command;
> import org.spongepowered.api.command.CommandCause;
> import org.spongepowered.api.command.CommandExecutor;
> import org.spongepowered.api.command.parameter.CommandContext;
> import org.spongepowered.api.command.parameter.Parameter;
19,20c19,21
< import static org.spongepowered.api.command.args.GenericArguments.string;
< import static org.spongepowered.api.text.Text.of;
---
> import net.kyori.adventure.text.Component;
> 
> import static org.spongepowered.api.command.parameter.Parameter.key;
33,36c34,36
<     @Override
<     public CommandResult execute(CommandSource src, CommandContext args) {
<         String url = args.<String>getOne("url").get();
<         if (url.startsWith("http://") || url.startsWith("https://")) {
---
>     public org.spongepowered.api.command.result.CommandResult execute(CommandCause src, CommandContext args) {
>         String url = args.one(Parameter.<String>key(Component.text("url"), String.class)).orElse(null);
>         if (url != null && (url.startsWith("http://") || url.startsWith("https://"))) {
43c43
<                 Task.builder().async().execute(skinUploader).submit(plugin);
---
>                 Task.builder().execute(skinUploader).submit(plugin);
49c49
<         return CommandResult.success();
---
>         return org.spongepowered.api.command.result.CommandResult.success();
53,56c53,56
<     public CommandSpec buildSpec() {
<         return CommandSpec.builder()
<                 .executor(this)
<                 .arguments(string(of("url")))
---
>     public Command buildSpec() {
>         return Command.builder()
>                 .executor(cause -> this.execute(cause, (CommandContext) cause.context()))
>                 .addParameter(Parameter.string().key(Component.text("url")).build())
