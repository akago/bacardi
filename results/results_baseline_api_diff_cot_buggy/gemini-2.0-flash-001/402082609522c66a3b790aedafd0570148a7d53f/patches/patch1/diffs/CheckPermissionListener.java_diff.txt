13a14
> import java.util.function.Consumer;
17,20c18
< import org.spongepowered.api.network.ChannelBinding.RawDataChannel;
< import org.spongepowered.api.network.ChannelBuf;
< import org.spongepowered.api.network.ChannelRegistrar;
< import org.spongepowered.api.network.RawDataListener;
---
> import org.spongepowered.api.entity.living.player.server.ServerPlayer;
21a20,26
> import org.spongepowered.api.network.channel.Channel;
> import org.spongepowered.api.network.channel.ChannelBuf;
> import org.spongepowered.api.network.channel.ChannelRegistry;
> import org.spongepowered.api.network.channel.RawDataChannel;
> import org.spongepowered.api.ResourceKey;
> import org.spongepowered.api.Sponge;
> import org.spongepowered.api.util.Identifiable;
26c31
< public class CheckPermissionListener implements RawDataListener {
---
> public class CheckPermissionListener implements java.util.function.BiConsumer<RemoteConnection, ChannelBuf> {
32c37
<     CheckPermissionListener(ChangeSkinSponge plugin, ChannelRegistrar channelRegistrar) {
---
>     CheckPermissionListener(ChangeSkinSponge plugin, ChannelRegistry channelRegistry) {
35,36c40,41
<         String combinedName = new NamespaceKey(ARTIFACT_ID, PERMISSION_RESULT_CHANNEL).getCombinedName();
<         permissionsResultChannel = channelRegistrar.getOrCreateRaw(plugin, combinedName);
---
>         ResourceKey channelKey = ResourceKey.of(ARTIFACT_ID, PERMISSION_RESULT_CHANNEL);
>         permissionsResultChannel = channelRegistry.getOrCreate(channelKey, RawDataChannel.class);
39,42c44,45
<     @Override
<     public void handlePayload(ChannelBuf data, RemoteConnection connection, Type side) {
< 
<         ByteArrayDataInput dataInput = ByteStreams.newDataInput(data.array());
---
>     public void accept(RemoteConnection connection, ChannelBuf data) {
>         ByteArrayDataInput dataInput = ByteStreams.newDataInput(data.readByteArray());
83c86,88
<         permissionsResultChannel.sendTo(receiver, buf -> buf.writeByteArray(dataOutput.toByteArray()));
---
>         byte[] bytes = dataOutput.toByteArray();
> 
>         permissionsResultChannel.sendTo((ServerPlayer) receiver, channelBuf -> channelBuf.writeByteArray(bytes));
