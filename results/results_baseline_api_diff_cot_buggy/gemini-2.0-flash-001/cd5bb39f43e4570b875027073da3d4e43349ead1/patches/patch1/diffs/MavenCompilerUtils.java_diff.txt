21d20
< import org.codehaus.plexus.util.xml.Xpp3Dom;
24a24,27
> import java.util.stream.Stream;
> import org.w3c.dom.Element;
> import org.w3c.dom.NodeList;
> import org.w3c.dom.Node;
70,72c73,75
<         if (config instanceof Xpp3Dom) {
<             return stream(((Xpp3Dom) config).getChildren("annotationProcessorPaths"))
<                     .flatMap(aggregate -> stream(aggregate.getChildren("path")))
---
>         if (config instanceof Element) {
>             return toStream(((Element) config).getElementsByTagName("annotationProcessorPaths"))
>                     .flatMap(aggregate -> toStream(aggregate.getElementsByTagName("path")))
91a95,102
>     private static Stream<Element> toStream(NodeList nodeList) {
>         return stream(new Node[nodeList.getLength()])
>                 .map(n -> nodeList.item(0))
>                 .filter(Element.class::isInstance)
>                 .map(Element.class::cast)
>                 .limit(nodeList.getLength());
>     }
> 
99,101c110,124
<     private static String extractChildValue(Xpp3Dom node, String name) {
<         final Xpp3Dom child = node.getChild(name);
<         return child == null ? "" : child.getValue();
---
>     private static String extractChildValue(Element node, String name) {
>         final Element child = getChildElement(node, name);
>         return child == null ? "" : child.getTextContent();
>     }
> 
>     private static Element getChildElement(Element parent, String name) {
>         NodeList nodeList = parent.getElementsByTagName(name);
>         if (nodeList.getLength() == 0) {
>             return null;
>         }
>         Node node = nodeList.item(0);
>         if (node instanceof Element) {
>             return (Element) node;
>         }
>         return null;
