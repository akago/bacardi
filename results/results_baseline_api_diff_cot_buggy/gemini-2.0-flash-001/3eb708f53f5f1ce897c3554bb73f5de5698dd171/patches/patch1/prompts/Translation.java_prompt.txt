You are an Automatic Program Repair (APR) tool specialized in fixing Java code issues caused by breaking dependency updates. Your task is to analyze the provided code, error information, and API changes, then propose and apply a patch to fix the issue while adhering to specific constraints.

Here is the Java code that is failing:

```java
/*
 * Copyright 2016 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.translate;

import com.google.api.services.translate.model.TranslationsResource;
import com.google.common.base.Function;
import com.google.common.base.MoreObjects;
import java.io.Serializable;
import java.util.List;
import java.util.Objects;

/**
 * Information about a translation. Objects of this class contain the translated text and the source
 * language's code. The source language's code can be optionally specified by the user or
 * automatically detected by the Google Translation service.
 *
 * @see <a href="https://cloud.google.com/translate/v2/translating-text-with-rest">Translating
 *     Text</a>
 */
public class Translation implements Serializable {

  private static final long serialVersionUID = 2556017420486245581L;
  static final Function<TranslationsResource, Translation> FROM_PB_FUNCTION =
      new Function<TranslationsResource, Translation>() {
        @Override
        public Translation apply(TranslationsResource translationPb) {
          return Translation.fromPb(translationPb);
        }
      };

  private final String translatedText;
  private final String sourceLanguage;
  private final String model;

  private Translation(String translatedText, String sourceLanguage, String model) {
    this.translatedText = translatedText;
    this.sourceLanguage = sourceLanguage;
    this.model = model;
  }

  /** Returns the translated text. */
  public String getTranslatedText() {
    return translatedText;
  }

  /**
   * Returns the language code of the source text. If no source language was provided this value is
   * the source language as detected by the Google Translation service.
   */
  public String getSourceLanguage() {
    return sourceLanguage;
  }

  /**
   * Returns the translation model used to translate the text. This value is only available if a
   * result from {@link Translate.TranslateOption#model(String)} was passed to {@link
   * Translate#translate(List, Translate.TranslateOption...)}.
   *
   * <p>Please note that you must be whitelisted to use the {@link
   * Translate.TranslateOption#model(String)} option, otherwise translation will fail.
   */
  public String getModel() {
    return model;
  }

  @Override
  public String toString() {
    return MoreObjects.toStringHelper(this)
        .add("translatedText", translatedText)
        .add("sourceLanguage", sourceLanguage)
        .toString();
  }

  @Override
  public final int hashCode() {
    return Objects.hash(translatedText, sourceLanguage);
  }

  @Override
  public final boolean equals(Object obj) {
    if (obj == this) {
      return true;
    }
    if (obj == null || !obj.getClass().equals(Translation.class)) {
      return false;
    }
    Translation other = (Translation) obj;
    return Objects.equals(translatedText, other.translatedText)
        && Objects.equals(sourceLanguage, other.sourceLanguage);
  }

  static Translation fromPb(TranslationsResource translationPb) {
    return new Translation(
        translationPb.getTranslatedText(),
        translationPb.getDetectedSourceLanguage(),
        translationPb.getModel());
  }
}

```

The errors are triggered in the following specific line:

<error_lines>
```java
static Translation fromPb(TranslationsResource translationPb) {
```
```java
static Translation fromPb(TranslationsResource translationPb) {
```
```java
public Translation apply(TranslationsResource translationPb) {
```
```java
static final Function<TranslationsResource, Translation> FROM_PB_FUNCTION =
```
```java
static Translation fromPb(TranslationsResource translationPb) {
```
```java
static Translation fromPb(TranslationsResource translationPb) {
```
```java
import com.google.api.services.translate.model.TranslationsResource;
```
```java
new Function<TranslationsResource, Translation>() {
```
</error_lines>

The API of the dependency has changed. Here are the relevant changes:

     Method com.google.api.services.translate.model.TranslationsResource.getDetectedSourceLanguage() has been removed in the new version of the dependency.
     Constructor com.google.api.services.translate.model.TranslationsResource() has been removed in the new version of the dependency.
     Class com.google.api.services.translate.model.TranslationsResource has been removed in the new version of the dependency.
     Method com.google.api.services.translate.v3.model.Translation.getTranslatedText() has been added in the new version of the dependency.
     Method com.google.api.services.translate.model.TranslationsResource.getTranslatedText() has been removed in the new version of the dependency.
     Method com.google.api.services.translate.Translate$Languages$List.getModel() has been removed in the new version of the dependency.
     Method com.google.api.services.translate.Translate$Translations$List.getModel() has been removed in the new version of the dependency.
     Method com.google.api.services.translate.v3.Translate$Projects$Locations$GetSupportedLanguages.getModel() has been added in the new version of the dependency.
     Method com.google.api.services.translate.model.TranslationsResource.getModel() has been removed in the new version of the dependency.
     Method com.google.api.services.translate.v3.model.TranslateTextRequest.getModel() has been added in the new version of the dependency.
     Method com.google.api.services.translate.model.TranslateTextRequest.getModel() has been removed in the new version of the dependency.
     Method com.google.api.services.translate.v3.model.TranslateDocumentRequest.getModel() has been added in the new version of the dependency.
     Method com.google.api.services.translate.v3.model.TranslateDocumentResponse.getModel() has been added in the new version of the dependency.
     Method com.google.api.services.translate.v3.Translate$Projects$GetSupportedLanguages.getModel() has been added in the new version of the dependency.
     Method com.google.api.services.translate.v3.model.DetectLanguageRequest.getModel() has been added in the new version of the dependency.
     Method com.google.api.services.translate.v3.model.Translation.getModel() has been added in the new version of the dependency.

Additional error information:

<error_information>
[ERROR] /google-cloud-java/java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java:[106,29] cannot find symbol
  symbol:   class TranslationsResource
  location: class com.google.cloud.translate.Translation

[ERROR] /google-cloud-java/java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java:[106,29] cannot find symbol
  symbol:   class TranslationsResource
  location: class com.google.cloud.translate.Translation

[ERROR] /google-cloud-java/java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java:[40,34] cannot find symbol
  symbol: class TranslationsResource

[ERROR] /google-cloud-java/java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java:[37,25] cannot find symbol
  symbol:   class TranslationsResource
  location: class com.google.cloud.translate.Translation

[ERROR] /google-cloud-java/java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java:[106,29] cannot find symbol
  symbol:   class TranslationsResource
  location: class com.google.cloud.translate.Translation

[ERROR] /google-cloud-java/java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java:[106,29] cannot find symbol
  symbol:   class TranslationsResource
  location: class com.google.cloud.translate.Translation

[ERROR] /google-cloud-java/java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java:[19,47] package com.google.api.services.translate.model does not exist

[ERROR] /google-cloud-java/java-translate/google-cloud-translate/src/main/java/com/google/cloud/translate/Translation.java:[38,20] cannot find symbol
  symbol:   class TranslationsResource
  location: class com.google.cloud.translate.Translation
<error_information>

Your task is to fix the issue by modifying only the client code. Follow these steps:

1. Analyze the problem and propose changes by wrapping the work inside fix_planning tags. This analysis is for your internal use only and will not be included in the final output. In your analysis:
   a. Quote relevant parts of the code and API changes
   b. Identify the specific API changes causing the issue
   c. List the affected lines of code
   d. Propose potential fixes for each affected line
   e. Consider any potential side effects of the proposed changes
   f. Explicitly check if the proposed changes adhere to all the given constraints
   g. Provide a final summary of the chosen fix and why it's the best solution

2. Apply the fix to the Java code.

3. Output the complete, fixed Java class in a fenced code block. This should be the only visible output in your response.

Constraints:
1. Do not change the function signature of any method.
2. You may create variables if it simplifies the code.
3. Remove the @Override annotation if and only if the method no longer overrides a method in the updated dependency version.
4. If fixing the issue requires addressing missing imports, ensure the correct package or class is used in accordance with the newer dependency version.
5. Do not remove any existing code unless it directly causes a compilation or functionality error.
6. Include all code, even unchanged portions, in your final output.
7. Do not use placeholder comments like "// ... (rest of the code remains unchanged)".

Your final output should only contain the complete, fixed Java class in a fenced code block, without any explanations or analysis visible. The <fix_planning> section is for your internal use only.

Example output structure:

```java
[Complete, fixed Java class]
```

Please proceed with your analysis and solution.
