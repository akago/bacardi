41a42,43
> import org.flywaydb.core.api.configuration.ClassicConfiguration;
> import org.flywaydb.core.api.Location;
108,112c110,130
<                 final org.flywaydb.core.Flyway flyway = new Flyway();
<                 flyway.setDataSource(this.dataSource());
<                 flyway.setClassLoader(NisAppConfig.class.getClassLoader());
<                 flyway.setLocations(prop.getProperty("flyway.locations"));
<                 flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
---
>                 final ClassicConfiguration configuration = new ClassicConfiguration();
> 
>                 final DriverManagerDataSource dataSource = (DriverManagerDataSource)this.dataSource();
>                 final String url = dataSource.getUrl();
>                 final String username = dataSource.getUsername();
>                 final String password = dataSource.getPassword();
> 
>                 configuration.setDataSource(url, username, password);
>                 configuration.setClassLoader(NisAppConfig.class.getClassLoader());
> 
>                 final String locationsString = prop.getProperty("flyway.locations");
>                 final String[] locationsArray = locationsString.split(",");
>                 final Location[] locations = new Location[locationsArray.length];
>                 for (int i = 0; i < locationsArray.length; i++) {
>                         locations[i] = new Location(locationsArray[i]);
>                 }
>                 configuration.setLocations(locations);
> 
>                 configuration.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
> 
>                 final org.flywaydb.core.Flyway flyway = new Flyway(configuration);
