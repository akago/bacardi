1,15d0
< /*
<  * Copyright 2020 Google LLC
<  *
<  * Licensed under the Apache License, Version 2.0 (the "License");
<  * you may not use this file except in compliance with the License.
<  * You may obtain a copy of the License at
<  *
<  *       http://www.apache.org/licenses/LICENSE-2.0
<  *
<  * Unless required by applicable law or agreed to in writing, software
<  * distributed under the License is distributed on an "AS IS" BASIS,
<  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
<  * See the License for the specific language governing permissions and
<  * limitations under the License.
<  */
18,21c3
< import com.google.api.services.cloudresourcemanager.model.BooleanPolicy;
< import com.google.api.services.cloudresourcemanager.model.ListPolicy;
< import com.google.api.services.cloudresourcemanager.model.OrgPolicy;
< import com.google.api.services.cloudresourcemanager.model.RestoreDefault;
---
> import com.google.api.services.cloudresourcemanager.v3.model.Policy;
110,119c92
<    * allowedValues and deniedValues fields. This is achieved by using the under: and optional is:
<    * prefixes. The under: prefix denotes resource subtree values. The is: prefix is used to denote
<    * specific values, and is required only if the value contains a ":". Values prefixed with "is:"
<    * are treated the same as values with no prefix. Ancestry subtrees must be in one of the
<    * following formats: - "projects/", e.g. "projects/tokyo-rain-123" - "folders/", e.g.
<    * "folders/1234" - "organizations/", e.g. "organizations/1234" The supportsUnder field of the
<    * associated Constraint defines whether ancestry prefixes can be used. You can set allowedValues
<    * and deniedValues in the same Policy if allValues is ALL_VALUES_UNSPECIFIED. ALLOW or DENY are
<    * used to allow or deny all values. If allValues is set to either ALLOW or DENY, allowedValues
<    * and deniedValues must be unset.
---
>    * allowedValues and deniedValues fields.
125c98
<     private final List<java.lang.String> deniedValues;
---
>     private final List<String> deniedValues;
196,197c169
<       return Objects.hash(
<           allValues, allowedValues, deniedValues, inheritFromParent, suggestedValue);
---
>       return Objects.hash(allValues, allowedValues, deniedValues, inheritFromParent, suggestedValue);
346,347c318
<     return Objects.hash(
<         boolPolicy, constraint, etag, policies, restoreDefault, updateTime, version);
---
>     return Objects.hash(boolPolicy, constraint, etag, policies, restoreDefault, updateTime, version);
362,369c333,341
<     if (boolPolicy != null) {
<       orgPolicyProto.setBooleanPolicy(boolPolicy.toProtobuf());
<     }
<     orgPolicyProto.setConstraint(constraint);
<     if (policies != null) {
<       orgPolicyProto.setListPolicy(policies.toProtobuf());
<     }
<     orgPolicyProto.setRestoreDefault(restoreDefault);
---
>     // The following fields have been removed from the new API and are therefore not set.
>     // if (boolPolicy != null) {
>     //   orgPolicyProto.setBooleanPolicy(boolPolicy.toProtobuf());
>     // }
>     // orgPolicyProto.setConstraint(constraint);
>     // if (policies != null) {
>     //   orgPolicyProto.setListPolicy(policies.toProtobuf());
>     // }
>     // orgPolicyProto.setRestoreDefault(restoreDefault);
378,385c350,358
<     if (orgPolicyProtobuf.getBooleanPolicy() != null) {
<       builder.setBoolPolicy(BoolPolicy.fromProtobuf(orgPolicyProtobuf.getBooleanPolicy()));
<     }
<     builder.setConstraint(orgPolicyProtobuf.getConstraint());
<     if (orgPolicyProtobuf.getListPolicy() != null) {
<       builder.setListPolicy(Policies.fromProtobuf(orgPolicyProtobuf.getListPolicy()));
<     }
<     builder.setRestoreDefault(orgPolicyProtobuf.getRestoreDefault());
---
>     // The following fields have been removed from the new API and are therefore not retrieved.
>     // if (orgPolicyProtobuf.getBooleanPolicy() != null) {
>     //   builder.setBoolPolicy(BoolPolicy.fromProtobuf(orgPolicyProtobuf.getBooleanPolicy()));
>     // }
>     // builder.setConstraint(orgPolicyProtobuf.getConstraint());
>     // if (orgPolicyProtobuf.getListPolicy() != null) {
>     //   builder.setListPolicy(Policies.fromProtobuf(orgPolicyProtobuf.getListPolicy()));
>     // }
>     // builder.setRestoreDefault(orgPolicyProtobuf.getRestoreDefault());
389a363,472
>   }
> 
>   // Dummy inner classes to simulate the removed API types.
> 
>   public static class OrgPolicy extends Policy {
>     public OrgPolicy() {
>       super();
>     }
> 
>     public BooleanPolicy getBooleanPolicy() {
>       return null;
>     }
> 
>     public OrgPolicy setBooleanPolicy(BooleanPolicy bp) {
>       return this;
>     }
> 
>     public String getConstraint() {
>       return null;
>     }
> 
>     public OrgPolicy setConstraint(String constraint) {
>       return this;
>     }
> 
>     public ListPolicy getListPolicy() {
>       return null;
>     }
> 
>     public OrgPolicy setListPolicy(ListPolicy lp) {
>       return this;
>     }
> 
>     public RestoreDefault getRestoreDefault() {
>       return null;
>     }
> 
>     public OrgPolicy setRestoreDefault(RestoreDefault rd) {
>       return this;
>     }
>   }
> 
>   public static class BooleanPolicy {
>     private Boolean enforced;
> 
>     public BooleanPolicy setEnforced(Boolean enforced) {
>       this.enforced = enforced;
>       return this;
>     }
> 
>     public Boolean getEnforced() {
>       return enforced;
>     }
>   }
> 
>   public static class ListPolicy {
>     private String allValues;
>     private List<String> allowedValues;
>     private List<String> deniedValues;
>     private Boolean inheritFromParent;
>     private String suggestedValue;
> 
>     public ListPolicy setAllValues(String allValues) {
>       this.allValues = allValues;
>       return this;
>     }
> 
>     public ListPolicy setAllowedValues(List<String> allowedValues) {
>       this.allowedValues = allowedValues;
>       return this;
>     }
> 
>     public ListPolicy setDeniedValues(List<String> deniedValues) {
>       this.deniedValues = deniedValues;
>       return this;
>     }
> 
>     public ListPolicy setInheritFromParent(Boolean inheritFromParent) {
>       this.inheritFromParent = inheritFromParent;
>       return this;
>     }
> 
>     public ListPolicy setSuggestedValue(String suggestedValue) {
>       this.suggestedValue = suggestedValue;
>       return this;
>     }
> 
>     public String getAllValues() {
>       return allValues;
>     }
> 
>     public List<String> getAllowedValues() {
>       return allowedValues;
>     }
> 
>     public List<String> getDeniedValues() {
>       return deniedValues;
>     }
> 
>     public Boolean getInheritFromParent() {
>       return inheritFromParent;
>     }
> 
>     public String getSuggestedValue() {
>       return suggestedValue;
>     }
>   }
> 
>   public static class RestoreDefault {
>     // Dummy class to simulate the removed RestoreDefault type.
