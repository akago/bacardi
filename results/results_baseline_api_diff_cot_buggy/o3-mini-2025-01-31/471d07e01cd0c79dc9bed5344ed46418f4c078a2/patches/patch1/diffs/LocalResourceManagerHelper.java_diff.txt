25,31c25,31
< import com.google.api.services.cloudresourcemanager.model.Binding;
< import com.google.api.services.cloudresourcemanager.model.Operation;
< import com.google.api.services.cloudresourcemanager.model.Policy;
< import com.google.api.services.cloudresourcemanager.model.Project;
< import com.google.api.services.cloudresourcemanager.model.SetIamPolicyRequest;
< import com.google.api.services.cloudresourcemanager.model.TestIamPermissionsRequest;
< import com.google.api.services.cloudresourcemanager.model.TestIamPermissionsResponse;
---
> import com.google.api.services.cloudresourcemanager.v3.model.Binding;
> import com.google.api.services.cloudresourcemanager.v3.model.Operation;
> import com.google.api.services.cloudresourcemanager.v3.model.Policy;
> import com.google.api.services.cloudresourcemanager.v3.model.Project;
> import com.google.api.services.cloudresourcemanager.v3.model.SetIamPolicyRequest;
> import com.google.api.services.cloudresourcemanager.v3.model.TestIamPermissionsRequest;
> import com.google.api.services.cloudresourcemanager.v3.model.TestIamPermissionsResponse;
194d193
<       // see https://cloud.google.com/resource-manager/reference/rest/
265d263
<       // see https://cloud.google.com/resource-manager/reference/rest/
285c283
<                     jsonFactory.toString(new Operation().setDone(true).setResponse(project)));
---
>                     jsonFactory.toString(new Operation().setDone(true).setName("operations/" + project.getProjectId()).setResponse(project)));
359d356
<             // List fields are in the form "projects(field1, field2, ...),nextPageToken"
449c446
<       project.setLifecycleState("ACTIVE");
---
>       project.setState("ACTIVE");
466d462
<         // Pretend it's not done yet.
483c479
<     if (!project.getLifecycleState().equals("ACTIVE")) {
---
>     if (!"ACTIVE".equals(project.getState())) {
487c483
<       project.setLifecycleState("DELETE_REQUESTED");
---
>       project.setState("DELETE_REQUESTED");
540d535
<     // If fields parameter is set but no project field is selected we must return no projects.
618c613
<           project.setLifecycleState(fullProject.getLifecycleState());
---
>           project.setState(fullProject.getState());
642c637
<     } else if (!originalProject.getLifecycleState().equals("ACTIVE")) {
---
>     } else if (!"ACTIVE".equals(originalProject.getState())) {
651c646
<     project.setLifecycleState(originalProject.getLifecycleState());
---
>     project.setState(originalProject.getState());
654d648
<     // replace cannot fail because both this method and removeProject are synchronized
670c664
<     } else if (!project.getLifecycleState().equals("DELETE_REQUESTED")) {
---
>     } else if (!"DELETE_REQUESTED".equals(project.getState())) {
677c671
<       project.setLifecycleState("ACTIVE");
---
>       project.setState("ACTIVE");
787c781
<       project.setLifecycleState(lifecycleState);
---
>       project.setState(lifecycleState);
802,803d795
<     // Because this method is synchronized, any code that relies on non-atomic read/write operations
<     // should not fail if that code is also synchronized.
