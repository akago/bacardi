3a4,5
> import org.flywaydb.core.api.Location;
> import org.flywaydb.core.api.configuration.ClassicConfiguration;
41a44
> import java.util.Arrays;
108,113c111,122
<                 final org.flywaydb.core.Flyway flyway = new Flyway();
<                 flyway.setDataSource(this.dataSource());
<                 flyway.setClassLoader(NisAppConfig.class.getClassLoader());
<                 flyway.setLocations(prop.getProperty("flyway.locations"));
<                 flyway.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
<                 return flyway;
---
>                 ClassicConfiguration config = new ClassicConfiguration();
>                 config.setDataSource(this.dataSource());
>                 config.setClassLoader(NisAppConfig.class.getClassLoader());
>                 String locationsProperty = prop.getProperty("flyway.locations");
>                 String[] tokens = locationsProperty.split(",");
>                 Location[] locations = Arrays.stream(tokens)
>                                 .map(String::trim)
>                                 .map(Location::new)
>                                 .toArray(Location[]::new);
>                 config.setLocations(locations);
>                 config.setValidateOnMigrate(Boolean.valueOf(prop.getProperty("flyway.validate")));
>                 return new Flyway(config);
