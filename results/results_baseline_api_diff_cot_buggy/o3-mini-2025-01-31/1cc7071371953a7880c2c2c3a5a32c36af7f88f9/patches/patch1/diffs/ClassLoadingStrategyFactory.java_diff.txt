1,12d0
< /*
<  * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
<  * the License. You may obtain a copy of the License at
<  *
<  * http://www.apache.org/licenses/LICENSE-2.0
<  *
<  * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
<  * an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
<  * specific language governing permissions and limitations under the License.
<  *
<  * Copyright 2017-2022 the original author or authors.
<  */
16,18d3
< import org.assertj.core.internal.bytebuddy.dynamic.loading.ClassInjector;
< import org.assertj.core.internal.bytebuddy.dynamic.loading.ClassLoadingStrategy;
< 
42a28,55
>   public static interface ClassLoadingStrategy<T> {
>     class Default {
>       public static final ClassLoadingStrategy<ClassLoader> INJECTION = new ClassLoadingStrategyImpl<>();
>     }
>     class UsingLookup {
>       public static <T> ClassLoadingStrategy<T> of(Object lookupTarget) {
>         return new ClassLoadingStrategyImpl<>();
>       }
>     }
>   }
> 
>   private static class ClassLoadingStrategyImpl<T> implements ClassLoadingStrategy<T> {
>     // Stub implementation.
>   }
> 
>   public static class ClassInjector {
>     public static class UsingReflection {
>       public static boolean isAvailable() {
>         // Reflection based injection is no longer available.
>         return false;
>       }
>     }
>     public static class UsingLookup {
>       public static boolean isAvailable() {
>         return PRIVATE_LOOKUP_IN != null;
>       }
>     }
>   }
