4d3
< import ch.qos.logback.classic.Logger;
16a16
> import org.slf4j.Logger;
32a33
> import java.lang.reflect.Method;
111,113c112,128
<         Logger logger = (Logger) LoggerFactory.getLogger(EventMessageHandler.class);
<         logger.setLevel(Level.INFO);
<         logger.addAppender(mockLogAppender);
---
>         Logger logger = LoggerFactory.getLogger(EventMessageHandler.class);
>         try {
>             Method setLevelMethod = logger.getClass().getMethod("setLevel", Level.class);
>             setLevelMethod.invoke(logger, Level.INFO);
>         } catch (NoSuchMethodException e) {
>             // Method not available in the new dependency version; skip setting level.
>         } catch (Exception e) {
>             throw new RuntimeException(e);
>         }
>         try {
>             Method addAppenderMethod = logger.getClass().getMethod("addAppender", Appender.class);
>             addAppenderMethod.invoke(logger, mockLogAppender);
>         } catch (NoSuchMethodException e) {
>             // Method not available in the new dependency version; skip adding the appender.
>         } catch (Exception e) {
>             throw new RuntimeException(e);
>         }
