24d23
< import org.jasypt.spring.security.PasswordEncoder;
28,32d26
< /**
<  * This Encoder provide encription and check of password using a digest
<  * @author Lorenzo Natali (lorenzo.natali at geo-solutions.it)
<  *
<  */
34a29,52
>     // Local interface to replace the removed jasypt spring security PasswordEncoder.
>     public static interface PasswordEncoder {
>         String encodePassword(String rawPass);
>         boolean isPasswordValid(String encPass, String rawPass);
>     }
> 
>     // Local implementation of PasswordEncoder using StrongPasswordEncryptor.
>     private static class LocalPasswordEncoder implements PasswordEncoder {
>         private final StrongPasswordEncryptor encryptor;
> 
>         public LocalPasswordEncoder() {
>             this.encryptor = new StrongPasswordEncryptor();
>         }
> 
>         @Override
>         public String encodePassword(String rawPass) {
>             return encryptor.encryptPassword(rawPass);
>         }
> 
>         @Override
>         public boolean isPasswordValid(String encPass, String rawPass) {
>             return encryptor.checkPassword(rawPass, encPass);
>         }
>     }
36,38d53
<                 /**
<                  * The digest is not reversible
<                  */
45,47c60
<                 PasswordEncoder encoder = new PasswordEncoder();
<                 encoder.setPasswordEncryptor(new StrongPasswordEncryptor());
<                 return encoder;
---
>         return new LocalPasswordEncoder();
76d88
<         
