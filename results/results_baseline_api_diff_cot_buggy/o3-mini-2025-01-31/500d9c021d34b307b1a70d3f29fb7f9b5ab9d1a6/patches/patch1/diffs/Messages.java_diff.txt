0a1,8
> /*
> <repair_strategy>
> 1. The external dependency removed the MvcContext class; therefore, its injection and usage cause a compile-time error.
> 2. Replace the injection of MvcContext with HttpServletRequest to obtain the locale via request.getLocale(), which is available in a request-scoped CDI bean.
> 3. Update the import statements accordingly, removing javax.mvc.MvcContext and adding javax.servlet.http.HttpServletRequest.
> 4. Update Javadoc references from MvcContext#getLocale() to HttpServletRequest#getLocale() to reflect the change.
> </repair_strategy>
> */
6c14,15
< import javax.mvc.MvcContext;
---
> import javax.servlet.http.HttpServletRequest;
> import java.util.Locale;
9,10c18,19
<  * Provides I18n messages for the UI per request. To get the correct locale, the method {@link MvcContext#getLocale()}
<  * is used. This method uses the built-in {@link javax.mvc.locale.LocaleResolver} of the used MVC Implementation.
---
>  * Provides I18n messages for the UI per request. To get the correct locale, the method {@link HttpServletRequest#getLocale()}
>  * is used. This method leverages the locale information from the current HTTP request.
13c22
<  * @see MvcContext#getLocale()
---
>  * @see HttpServletRequest#getLocale()
23c32
<     private MvcContext mvcContext;
---
>     private HttpServletRequest request;
33c42
<         final ResourceBundle bundle = ResourceBundle.getBundle(BASE_NAME, mvcContext.getLocale());
---
>         final ResourceBundle bundle = ResourceBundle.getBundle(BASE_NAME, request.getLocale());
