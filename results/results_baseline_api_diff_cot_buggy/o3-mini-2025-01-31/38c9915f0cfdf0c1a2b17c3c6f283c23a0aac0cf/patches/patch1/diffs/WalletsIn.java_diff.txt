37,38d36
< import org.cactoos.scalar.IoCheckedScalar;
< import org.cactoos.scalar.SolidScalar;
40d37
< import org.cactoos.text.JoinedText;
53c50
<     private final IoCheckedScalar<Path> path;
---
>     private final Scalar<Path> path;
98d94
<      * @param random Randomizer
99a96
>      * @param random Randomizer
103,105c100
<         this.path = new IoCheckedScalar<>(
<             new SolidScalar<>(pth)
<         );
---
>         this.path = pth;
118,124c113,115
<         final Path wpth = this.path.value().resolve(
<             new JoinedText(
<                 ".",
<                 Long.toHexString(this.random.nextLong()),
<                 this.ext
<             ).asString()
<         );
---
>         final Path base = getPath();
>         final String filename = Long.toHexString(this.random.nextLong()) + "." + this.ext;
>         final Path wpth = base.resolve(filename);
144,145c135
<     public Wallet create(final long id, final String pubkey, final String
<         network) throws IOException {
---
>     public Wallet create(final long id, final String pubkey, final String network) throws IOException {
156c146
<                 new Filtered<>(this.filter, new Directory(this.path.value()))
---
>                 new Filtered<>(this.filter, new Directory(getPath()))
159a150,162
>         }
>     }
>     
>     /**
>      * Retrieves the wallet directory path.
>      * @return The wallet directory path.
>      * @throws IOException If an error occurs retrieving the path.
>      */
>     private Path getPath() throws IOException {
>         try {
>             return this.path.value();
>         } catch (final Exception ex) {
>             throw new IOException(ex);
